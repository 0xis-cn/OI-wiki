{
    "docs": [
        {
            "location": "/",
            "text": "\u6b22\u8fce\u6765\u5230 \nOI Wiki\n\u3002\n\u00b6\n\n\nOI\n \uff08Olympiad in Informatics\uff0c\u4fe1\u606f\u5b66\u5965\u6797\u5339\u514b\u7ade\u8d5b\uff09\u5728\u4e2d\u56fd\u8d77\u6e90\u4e8e 1984 \u5e74\uff0c\u662f\u4e94\u5927\u9ad8\u4e2d\u5b66\u79d1\u7ade\u8d5b\u4e4b\u4e00\u3002\u81ea 1989 \u5e74\u8d77\uff0c\u6bcf\u5e74\u8fd8\u4f1a\u9009\u62d4\u51fa\u56fd\u5bb6\u96c6\u8bad\u961f\u9009\u624b\u51c6\u5907 IOI (International Olympiad in Informatics\uff0c\u56fd\u9645\u4fe1\u606f\u5b66\u5965\u6797\u5339\u514b\u7ade\u8d5b)\u3002\n\n\nOI Wiki\n \u662f\u4e00\u4e2a\u514d\u8d39\u5f00\u653e\u4e14\u6301\u7eed\u66f4\u65b0\u7684\u77e5\u8bc6\u6574\u5408\u7ad9\u70b9\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u5b66\u5230\u5173\u4e8e OI \u7ade\u8d5b\u76f8\u5173\u7684\u6709\u8da3\u77e5\u8bc6\uff0c\u6211\u4eec\u4e3a\u4f60\u51c6\u5907\u4e86 OI \u7ade\u8d5b\u4e2d\u7684\u57fa\u7840\u77e5\u8bc6\u3001\u5e38\u89c1\u9898\u578b\u3001\u89e3\u9898\u601d\u8def\u4ee5\u53ca\u5e38\u7528\u5de5\u5177\u7b49\uff0c\u5e2e\u52a9\u4f60\u66f4\u5feb\u901f\u5730\u4e86\u89e3 OI \u7ade\u8d5b\u3002\n\n\n\u672c\u9879\u76ee\u53d7 \nCTF Wiki\n \u7684\u542f\u53d1\uff0c\u5728\u7f16\u5199\u8fc7\u7a0b\u4e2d\u53c2\u8003\u4e86\u8bf8\u591a\u8d44\u6599\uff0c\u5728\u6b64\u4e00\u5e76\u81f4\u8c22\u3002\n\n\n\u6587\u6863\u5185\u5bb9\u6258\u7ba1\u5728 \nGithub\n\uff0c\u671f\u5f85\u4f60\u7684\u52a0\u5165\u3002\n\n\nMaterial color palette \u989c\u8272\u4e3b\u9898\n\u00b6\n\n\nPrimary colors \u4e3b\u8272\n\u00b6\n\n\n\n\n\u9ed8\u8ba4 \nwhite\n\n\n\n\n\u70b9\u51fb\u8272\u5757\u53ef\u66f4\u6362\u4e3b\u9898\u7684\u4e3b\u8272\n\n\nRed\n\n\nPink\n\n\nPurple\n\n\nDeep Purple\n\n\nIndigo\n\n\nBlue\n\n\nLight Blue\n\n\nCyan\n\n\nTeal\n\n\nGreen\n\n\nLight Green\n\n\nLime\n\n\nYellow\n\n\nAmber\n\n\nOrange\n\n\nDeep Orange\n\n\nBrown\n\n\nGrey\n\n\nBlue Grey\n\n\nWhite\n\n\n\n  var buttons = document.querySelectorAll(\"button[data-md-color-primary]\");\n  Array.prototype.forEach.call(buttons, function(button) {\n    button.addEventListener(\"click\", function() {\n      document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary;\n      localStorage.setItem(\"data-md-color-primary\",this.dataset.mdColorPrimary);\n    })\n  })\n\n\n\n\nAccent colors \u8f85\u52a9\u8272\n\u00b6\n\n\n\n\n\u9ed8\u8ba4 \nred\n\n\n\n\n\u70b9\u51fb\u8272\u5757\u66f4\u6362\u4e3b\u9898\u7684\u8f85\u52a9\u8272\n\n\nRed\n\n\nPink\n\n\nPurple\n\n\nDeep Purple\n\n\nIndigo\n\n\nBlue\n\n\nLight Blue\n\n\nCyan\n\n\nTeal\n\n\nGreen\n\n\nLight Green\n\n\nLime\n\n\nYellow\n\n\nAmber\n\n\nOrange\n\n\nDeep Orange\n\n\n\n  var buttons = document.querySelectorAll(\"button[data-md-color-accent]\");\n  Array.prototype.forEach.call(buttons, function(button) {\n    button.addEventListener(\"click\", function() {\n      document.body.dataset.mdColorAccent = this.dataset.mdColorAccent;\n      localStorage.setItem(\"data-md-color-accent\",this.dataset.mdColorAccent);\n    })\n  })",
            "title": "Getting Started"
        },
        {
            "location": "/#oi-wiki",
            "text": "OI  \uff08Olympiad in Informatics\uff0c\u4fe1\u606f\u5b66\u5965\u6797\u5339\u514b\u7ade\u8d5b\uff09\u5728\u4e2d\u56fd\u8d77\u6e90\u4e8e 1984 \u5e74\uff0c\u662f\u4e94\u5927\u9ad8\u4e2d\u5b66\u79d1\u7ade\u8d5b\u4e4b\u4e00\u3002\u81ea 1989 \u5e74\u8d77\uff0c\u6bcf\u5e74\u8fd8\u4f1a\u9009\u62d4\u51fa\u56fd\u5bb6\u96c6\u8bad\u961f\u9009\u624b\u51c6\u5907 IOI (International Olympiad in Informatics\uff0c\u56fd\u9645\u4fe1\u606f\u5b66\u5965\u6797\u5339\u514b\u7ade\u8d5b)\u3002  OI Wiki  \u662f\u4e00\u4e2a\u514d\u8d39\u5f00\u653e\u4e14\u6301\u7eed\u66f4\u65b0\u7684\u77e5\u8bc6\u6574\u5408\u7ad9\u70b9\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u5b66\u5230\u5173\u4e8e OI \u7ade\u8d5b\u76f8\u5173\u7684\u6709\u8da3\u77e5\u8bc6\uff0c\u6211\u4eec\u4e3a\u4f60\u51c6\u5907\u4e86 OI \u7ade\u8d5b\u4e2d\u7684\u57fa\u7840\u77e5\u8bc6\u3001\u5e38\u89c1\u9898\u578b\u3001\u89e3\u9898\u601d\u8def\u4ee5\u53ca\u5e38\u7528\u5de5\u5177\u7b49\uff0c\u5e2e\u52a9\u4f60\u66f4\u5feb\u901f\u5730\u4e86\u89e3 OI \u7ade\u8d5b\u3002  \u672c\u9879\u76ee\u53d7  CTF Wiki  \u7684\u542f\u53d1\uff0c\u5728\u7f16\u5199\u8fc7\u7a0b\u4e2d\u53c2\u8003\u4e86\u8bf8\u591a\u8d44\u6599\uff0c\u5728\u6b64\u4e00\u5e76\u81f4\u8c22\u3002  \u6587\u6863\u5185\u5bb9\u6258\u7ba1\u5728  Github \uff0c\u671f\u5f85\u4f60\u7684\u52a0\u5165\u3002",
            "title": "\u6b22\u8fce\u6765\u5230 OI Wiki\u3002"
        },
        {
            "location": "/#material-color-palette",
            "text": "",
            "title": "Material color palette \u989c\u8272\u4e3b\u9898"
        },
        {
            "location": "/#primary-colors",
            "text": "\u9ed8\u8ba4  white   \u70b9\u51fb\u8272\u5757\u53ef\u66f4\u6362\u4e3b\u9898\u7684\u4e3b\u8272  Red  Pink  Purple  Deep Purple  Indigo  Blue  Light Blue  Cyan  Teal  Green  Light Green  Lime  Yellow  Amber  Orange  Deep Orange  Brown  Grey  Blue Grey  White  \n  var buttons = document.querySelectorAll(\"button[data-md-color-primary]\");\n  Array.prototype.forEach.call(buttons, function(button) {\n    button.addEventListener(\"click\", function() {\n      document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary;\n      localStorage.setItem(\"data-md-color-primary\",this.dataset.mdColorPrimary);\n    })\n  })",
            "title": "Primary colors \u4e3b\u8272"
        },
        {
            "location": "/#accent-colors",
            "text": "\u9ed8\u8ba4  red   \u70b9\u51fb\u8272\u5757\u66f4\u6362\u4e3b\u9898\u7684\u8f85\u52a9\u8272  Red  Pink  Purple  Deep Purple  Indigo  Blue  Light Blue  Cyan  Teal  Green  Light Green  Lime  Yellow  Amber  Orange  Deep Orange  \n  var buttons = document.querySelectorAll(\"button[data-md-color-accent]\");\n  Array.prototype.forEach.call(buttons, function(button) {\n    button.addEventListener(\"click\", function() {\n      document.body.dataset.mdColorAccent = this.dataset.mdColorAccent;\n      localStorage.setItem(\"data-md-color-accent\",this.dataset.mdColorAccent);\n    })\n  })",
            "title": "Accent colors \u8f85\u52a9\u8272"
        },
        {
            "location": "/introduction/mode/",
            "text": "\u8d5b\u4e8b\u4ecb\u7ecd\n\u00b6\n\n\nOI \u7ade\u8d5b\u662f\u4e00\u9879\u5168\u7403\u7684\u8d5b\u4e8b\uff0c\u6bcf\u5e74\u590f\u5929\u4f1a\u6709\u4e16\u754c\u7ea7\u7ade\u8d5b\uff08IOI\uff09\u4e3e\u884c\uff0c\u5927\u9646\u5730\u533a\u6d3e\u51fa\u7684\u961f\u4f0d\u90fd\u662f\u7ecf\u8fc7\u5c42\u5c42\u9009\u62d4\u7684\u3002\u5bf9\u4e8e\u5927\u90e8\u5206\u9009\u624b\u800c\u8a00\uff0c\u6bcf\u5e74\u65b0\u8d5b\u5b63\u4ece 10 \u6708\u7684 NOIP \uff08\u7701\u7ea7\u9009\u62d4\u8d5b\uff09\u5f00\u59cb\u3002\n\n\nOI \u7ade\u8d5b\u4e2d\u5141\u8bb8\u4f7f\u7528\u7684\u8bed\u8a00\u5305\u62ec Pascal\uff08NOI\u7cfb\u5217\u6bd4\u8d5b\u5c06\u4e8e2020\u5e74\u505c\u6b62\u4f7f\u7528Pascal\uff09\uff0cC \u548c C++\u3002\u5176\u4e2d C++ \u7684\u7248\u672c\u4e0d\u540c\u8003\u8bd5\u6709\u4e0d\u540c\u7684\u89c4\u5b9a\u3002\u8003\u8bd5\u9898\u76ee\u4e00\u822c\u4e3a\u7b97\u6cd5\u6216\u8005\u6570\u636e\u7ed3\u6784\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u9898\u76ee\u5f62\u5f0f\u5305\u62ec\u4f20\u7edf\u9898\uff08\u6700\u5e38\u89c1\u7684\u89c4\u5b9a\u8f93\u5165\u548c\u8f93\u51fa\u5230\u6587\u4ef6\u7684\u9898\u76ee\uff09\u548c\u975e\u4f20\u7edf\u9898\uff08\u63d0\u4ea4\u7b54\u6848\u9898\u3001\u4ea4\u4e92\u9898\u3001\u8865\u5168\u4ee3\u7801\u9898\u7b49\u7b49\uff09\u3002\n\n\nNOIP\n\u00b6\n\n\nNOIP\uff08National Olympiad in Informatics in Provinces\uff09\u662f\u5168\u56fd\u9752\u5c11\u5e74\u4fe1\u606f\u5b66\u5965\u6797\u5339\u514b\u8054\u8d5b\uff0c\u987e\u540d\u601d\u4e49\uff0c\u662f\u4ee5\u7701\u4e3a\u5355\u4f4d\u6392\u540d\u8bc4\u5956\uff0c\u5956\u9879\u542b\u91d1\u91cf\u9ad8\u7684\u4e00\u822c\u662f\u4e00\u4e8c\u7b49\u5956\uff0c\u53ef\u4ee5\u7528\u4e8e\u83b7\u5f97\u81ea\u4e3b\u62db\u751f\u8d44\u683c\u3002\n\n\nNOIP \u5206\u4e3a\u521d\u8d5b\u548c\u590d\u8d5b\u4e24\u4e2a\u9636\u6bb5\u3002\u521d\u8d5b\u4f1a\u8003\u5bdf\u4e00\u4e9b\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6\u548c\u7b97\u6cd5\u57fa\u7840\uff08\u7b14\u8bd5\uff09\uff0c\u590d\u8d5b\u662f\u4e0a\u673a\u8003\u8bd5\u3002\u5168\u56fd\u4f7f\u7528\u540c\u4e00\u5957\u8bd5\u5377\uff0c\u4f46\u662f\u8bc4\u5956\u89c4\u5219\u662f\u6309\u7167\u7701\u5185\u60c5\u51b5\u7531 CCF \uff08\u4e2d\u56fd\u8ba1\u7b97\u673a\u5b66\u4f1a\uff09\u7edf\u4e00\u6307\u5b9a\uff0c\u5e76\u4e8e\u8d5b\u540e\u5728 \nNOI \u5b98\u65b9\u7f51\u7ad9\n \u4e0a\u516c\u5e03\u3002\n\n\n\u7701\u9009\n\u00b6\n\n\n\u7701\u961f\u9009\u62d4\u8d5b\u662f\u7528\u4e8e\u9009\u62d4\u5404\u7701\u53c2\u52a0\u5168\u56fd\u8d5b\u7684\u4ee3\u8868\u961f\uff0c\u5404\u4e2a\u7701\u961f\u7684\u540d\u989d\u6709\u590d\u6742\u7684\u8ba1\u7b97\u516c\u5f0f\uff0c\u4e00\u822c\u548c\u4e4b\u524d\u7684\u6210\u7ee9\u548c\u53c2\u8d5b\u4eba\u6570\u6709\u5173\u3002\u7701\u9009\u7531\u5404\u4e2a\u7701\u81ea\u884c\u51b3\u5b9a\uff0c\u76ee\u524d\u7684\u8d8b\u52bf\u662f\u5f88\u591a\u7701\u4efd\u9009\u62e9\u8054\u5408\u547d\u9898\u3002\n\n\nNOI\n\u00b6\n\n\nNOI\uff08National Olympiad in Informatics\uff09\u662f\u5168\u56fd\u4fe1\u606f\u5b66\u5965\u6797\u5339\u514b\u7ade\u8d5b\uff0c\u4e00\u822c\u5728\u4e03\u6708\u4efd\u4e3e\u884c\uff0c\u6709\u73b0\u573a\u8d5b\u548c\u7f51\u7edc\u8d5b\u3002\u73b0\u573a\u8d5b\u9009\u624b\u5206\u4e3a\u56db\u7c7b\uff0c\u5176\u4e2dA\u3001B\u3001C\u7c7b\u4e3a\u6b63\u5f0f\u9009\u624b\u3002A\u3001B \u7c7b\u5bf9\u5e94\u7701\u961f\u7684 A\u3001B \u7c7b\u9009\u624b\uff08\u5176\u4e2d A \u7c7b\u5728\u8ba1\u7b97\u6210\u7ee9\u65f6\u4f1a\u6709 5 \u5206\u52a0\u5206\uff09\uff0cC \u7c7b\u540d\u4e49\u4e0a\u662f\u5b66\u6821\u5bf9 CCF \u505a\u51fa\u7a81\u51fa\u8d21\u732e\u540e\u7684\u5956\u52b1\u540d\u989d\uff0cD \u7c7b\u662f\u9080\u8bf7\u8d5b\u9009\u624b\uff0c\u5982\u679c\u6210\u7ee9\u8d85\u8fc7\u5206\u6570\u7ebf\u7684\u8bdd\uff0c\u53ea\u6709\u6210\u7ee9\u8bc1\u660e\u800c\u6ca1\u6709\u5956\u724c\uff08\u540c\u7b49\u5206\u6570\u542b\u91d1\u91cf\u8981\u4f4e\u4e00\u4e9b\uff09\u3002\u6b63\u5f0f\u9009\u624b\u524d 50 \u540d\u7ec4\u6210\u56fd\u5bb6\u96c6\u8bad\u961f\uff0c\u83b7\u5f97\u4fdd\u9001\u8d44\u683c\u3002\u7f51\u7edc\u8d5b\u62a5\u540d\u5f62\u5f0f\u4e0a\u6ca1\u6709\u95e8\u69db\u3002\n\n\nWC\n\u00b6\n\n\nWC\uff08Winter Camp\uff09\u662f\u5168\u56fd\u9752\u5c11\u5e74\u4fe1\u606f\u5b66\u5965\u6797\u5339\u514b\u7ade\u8d5b\u51ac\u4ee4\u8425\uff0c\u662f\u6bcf\u5e74\u51ac\u5929\u5728\u5f53\u5e74 NOI \u4e3e\u529e\u5730\u8fdb\u884c\u7684\u4e00\u9879\u6d3b\u52a8\uff0c\u5185\u5bb9\u5305\u62ec\u82e5\u5e72\u5929\u7684\u57f9\u8bad\u548c\u4e00\u5929\u7684\u8003\u8bd5\u3002\u8fd9\u9879\u8003\u8bd5\u4e3b\u8981\u7528\u4e8e\u4ece\u56fd\u5bb6\u96c6\u8bad\u961f\uff08 50 \u4eba\uff09\u9009\u62d4\u56fd\u5bb6\u5019\u9009\u961f\uff08 15 \u4eba\uff09\u3002\n\n\nAPIO\n\u00b6\n\n\nAPIO\uff08Asia-Pacific Informatics Olympiad\uff09\u662f\u4e9a\u592a\u5730\u533a\u4fe1\u606f\u5b66\u5965\u6797\u5339\u514b\u7ade\u8d5b\uff0cCCF \u6bcf\u5e74\u4f1a\u5728\u4e94\u6708\u521d\u4e3e\u529e\u4e2d\u56fd\u8d5b\u533a\u955c\u50cf\u8d5b\u3002\u5728\u6bd4\u8d5b\u65e5\u524d\u540e\u4f1a\u6709\u57f9\u8bad\u6d3b\u52a8\u3002\n\n\nCTSC\n\u00b6\n\n\nCTSC\uff08China Team Selection Competition\uff09\u662f\u4e2d\u56fd\u961f\u9009\u62d4\u8d5b\u3002\u7528\u6765\u4ece\u56fd\u5bb6\u5019\u9009\u961f\uff08 15 \u4eba\uff09\u4e2d\u9009\u62d4\u56fd\u5bb6\u961f\uff08 4 \u4eba\uff09\u51c6\u5907\u53c2\u52a0\u5f53\u5e74\u590f\u5929\u7684 IOI \u6bd4\u8d5b\u3002\n\n\n\u6ce8\uff1a APIO \u548c CTSC \u90fd\u662f\u4ee5\u7701\u4e3a\u5355\u4f4d\u62a5\u540d\uff0c\u4e00\u822c\u662f\u6309\u7167 NOIP \u6210\u7ee9\u6392\u5e8f\u6765\u786e\u5b9a\u8c01\u4f1a\u6709\u673a\u4f1a\u53c2\u52a0 APIO \u548c CTSC \uff08\u4e8c\u8005\u4e00\u822c\u65f6\u95f4\u4e0a\u975e\u5e38\u63a5\u8fd1\uff09\u3002\n\n\nIOI\n\u00b6\n\n\nIOI\uff08International Olympiad in Informatics\uff09\u662f\u56fd\u9645\u4fe1\u606f\u5b66\u5965\u6797\u5339\u514b\u7ade\u8d5b\uff0c\u6bcf\u4e2a\u56fd\u5bb6\u6709\u56db\u4eba\u53c2\u8d5b\uff0c\u6bd4\u8d5b\u4f1a\u6709\u76f4\u64ad\u3002\n\n\n\u8d5b\u5236\u4ecb\u7ecd\n\u00b6\n\n\nOI \u8d5b\u5236\n\u00b6\n\n\n\u4e00\u822c\u7684 OI \u8d5b\u5236\u53ef\u4ee5\u7406\u89e3\u4e3a\u5355\u4eba\u5728 5 \u4e2a\u5c0f\u65f6\u7684\u65f6\u95f4\u5185\u5c1d\u8bd5\u89e3\u51b3 3 \u4e2a\u9898\u3002\u6bcf\u4e2a\u9898\u76ee\u53ef\u4ee5\u4e0d\u5168\u90e8\u89e3\u51b3\uff0c\u4f1a\u6709\u591a\u4e2a\u6570\u636e\u70b9\uff0c\u9898\u76ee\u7684\u5206\u6570\u4e00\u822c\u662f\u6570\u636e\u70b9\u5f97\u5206\u4e4b\u548c\u3002\u6bcf\u4e2a\u6570\u636e\u70b9\u8fd8\u53ef\u80fd\u4f1a\u6709\u90e8\u5206\u5206\uff0c\u5c31\u662f\u6570\u636e\u70b9\u5185\u90e8\u4e5f\u4e0d\u9700\u8981\u5b8c\u5168\u6b63\u786e\u624d\u80fd\u5f97\u5230\u5206\u6570\u3002\u8bc4\u5206\u65b9\u5f0f\u662f\u5728\u6bd4\u8d5b\u7ed3\u675f\u540e\u7edf\u4e00\u8bc4\u6d4b\uff0c\u53ea\u6709\u4e00\u6b21\u63d0\u4ea4\u673a\u4f1a\u3002\n\n\nIOI \u8d5b\u5236\n\u00b6\n\n\n\u76ee\u524d\u56fd\u5185\u6bd4\u8d5b\u4e5f\u5728\u9010\u6e10\u5411 IOI \u8d5b\u5236\u9760\u62e2\u3002\n\n\nACM / ICPC \u8d5b\u5236\n\u00b6\n\n\n\u5728 ACM / ICPC \u6bd4\u8d5b\u4e2d\u4e00\u822c\u662f\u4e09\u4e2a\u4eba\u4f7f\u7528\u4e00\u53f0\u673a\u5668\uff0c\u6bcf\u4e2a\u9898\u76ee\u53ea\u6709\u5728\u6240\u6709\u6570\u636e\u70b9\u5168\u90e8\u6b63\u786e\u540e\u624d\u80fd\u5f97\u5230\u5206\u6570\u3002\u6bd4\u8d5b\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u6709\u591a\u6b21\u63d0\u4ea4\u673a\u4f1a\uff0c\u5b9e\u65f6\u8bc4\u6d4b\u5e76\u8fd4\u56de\u7ed3\u679c\u3002\u6bd4\u8d5b\u6392\u540d\u6839\u636e\u505a\u9898\u6570\u548c\u7f5a\u65f6\u6765\u8bc4\u5224\uff0c\u7f5a\u65f6\u662f\u901a\u8fc7\u9898\u76ee\u7684\u7528\u65f6\u4e4b\u548c\u52a0\u4e0a\u9519\u8bef\u63d0\u4ea4\u6b21\u6570\u4e58\u4ee5\u4e00\u4e2a\u7cfb\u6570\u3002\n\n\nCodeforces (CF) \u8d5b\u5236\n\u00b6\n\n\nCodeforces\n \u662f\u4e00\u4e2a\u5728\u7ebf\u8bc4\u6d4b\u7cfb\u7edf\uff0c\u5b9a\u671f\u4f1a\u4e3e\u529e\u6bd4\u8d5b\u3002\u5b83\u7684\u6bd4\u8d5b\u7279\u70b9\u662f\u5728\u6bd4\u8d5b\u8fc7\u7a0b\u4e2d\u53ea\u6d4b\u8bd5\u4e00\u90e8\u5206\u6570\u636e\uff08pretests\uff09\uff0c\u800c\u5728\u6bd4\u8d5b\u7ed3\u675f\u540e\u8fd4\u56de\u66f4\u591a\u6d4b\u8bd5\u70b9\u7684\u6d4b\u8bd5\u7ed3\u679c\uff08system tests\uff09\u3002\u6bd4\u8d5b\u65f6\u53ef\u4ee5\u591a\u6b21\u63d0\u4ea4\uff0c\u5141\u8bb8 hack \u522b\u4eba\u7684\u4ee3\u7801\u3002\u5f53\u7136\uff0c\u5982\u679c\u60f3\u8981 hack \uff0c\u5fc5\u987b\u8981\u9501\u5b9a\u81ea\u5df1\u7684\u4ee3\u7801\uff08\u6362\u8a00\u4e4b\uff0c\u65e0\u6cd5\u91cd\u65b0\u63d0\u4ea4\u8be5\u9898\uff09\u3002\n\n\n\u5176\u4ed6\u56fd\u5bb6\u548c\u5730\u533a\u7684 OI \u7ade\u8d5b\n\u00b6\n\n\n\u53f0\u6e7e\u5730\u533a\u7684\u4fe1\u606f\u5b66\u5965\u6797\u5339\u514b\u7ade\u8d5b\uff08\u8cc7\u8a0a\u5967\u6797\u5339\u4e9e\u7af6\u8cfd\uff09\n\u00b6\n\n\n\u53f0\u6e7e\u5730\u533a\u628a informatics \u7ffb\u8bd1\u6210\u201c\u8d44\u8baf\u201d\u800c\u975e\u5927\u9646\u901a\u7528\u7684\u7ffb\u8bd1\u201c\u4fe1\u606f\u201d\u3002\n\n\u53f0\u6e7e\u5730\u533a\u7684\u4fe1\u606f\u5b66\u5965\u6797\u5339\u514b\u7ade\u8d5b\u8d5b\u5236\u4e0e\u5927\u9646\u5730\u533a\u7c7b\u4f3c\u3002\n\n\u8fd9\u4e9b\u6bd4\u8d5b\u5e76\u4e0d\u80fd\u7edf\u79f0\u4e3a TOI\uff0c\u8be6\u60c5\u89c1\u4e0b\u6587\u3002\n\n\u4e24\u4e2a\u53f0\u6e7e\u7684 OJ\uff1a\nTIOJ\n\uff0c\nZerojudge\n\n\n1. \u533a\u57df\u8d5b\uff08\u5340\u57df\u8cc7\u8a0a\u5b78\u79d1\u80fd\u529b\u7af6\u8cfd\uff09\n\u00b6\n\n\n\u6027\u8d28\u7c7b\u4f3c NOIP\uff0c\u96be\u5ea6\u2026\u2026\u6ca1\u7814\u7a76\u8fc7\u3002\u9898\u76ee\u7531\u5404\u533a\u7684\u5e08\u8303\u5b66\u9662\u547d\u9898\u3002\n\n\u6ca1\u6709\u5b98\u65b9\u62ff\u9898\u76ee\u7684\u6e20\u9053\uff0c\u4e3b\u8981\u9760\u9009\u624b\u81ea\u5df1\u627e\u5404\u533a\u5e08\u8303\u5b66\u9662\u7684\u6559\u6388\u62ff\u3002\u5982\u679c\u4f60\u60f3\u5728\u7ebf\u63d0\u4ea4\uff0cTIOJ \u4e0a\u6709\u5f88\u591a\u5317\u5e02\u8d5b\uff08\u597d\u50cf\u662f\u53f0\u5317\uff1f\uff09\u7684\u9898\u3002\n\n\n2. \u5168\u56fd\u8d5b\uff08\u5168\u570b\u8cc7\u8a0a\u5b78\u79d1\u80fd\u529b\u7af6\u8cfd\uff09\n\u00b6\n\n\n\u90a3\u4e9b\u8ddf\u6211\u8bf4\"\u653f\u6cbb\u6b63\u786e\"\u7684\u4eba\uff0c\u81ea\u5df1\u590d\u4e60\u4e0b\u201c\u4e5d\u4e8c\u5171\u8bc6\u201d\u548c\u201c\u4e00\u4e2d\u5404\u8868\u201d\u3002\n\n\u4e00\u5929\u7b14\u8bd5\uff0c\u4e00\u5929\u673a\u8bd5\u3002\u673a\u8bd5\u4e00\u573a 5 \u5c0f\u65f6 7 \u9898\u30022016 \u5e74\u7684\u9898\u76ee\uff0c\u9664\u4e86\u4e00\u9053\u771f\u00b7\u7b7e\u5230\u9898\uff0c\u5269\u4e0b\u7684\u9898\u76ee\u96be\u5ea6\u548c\u8003\u8bd5\u8303\u56f4\u90fd\u5728 \n\u63d0\u9ad8- \u5230 \u5f31\u7701\u7701\u9009-\n \u5de6\u53f3\u3002\n\n\u5b98\u65b9\u62ff\u9898\u76ee\u7684\u6e20\u9053\u6233\n\u8fd9\u91cc\n\uff0c\u7136\u800c\u5e76\u4e0d\u63d0\u4f9b\u6570\u636e\u548c\u9898\u89e3\u3002\n\n\u5728\u7ebf\u63d0\u4ea4\u540c\u6837\u5de6\u8f6c TIOJ\u3002LOJ \u7ba1\u7406\u5458\u6b63\u5728\u4e0e TIOJ \u65b9\u9762\u8054\u7cfb\u8981\u6570\u636e\uff08TIOJ \u4e0a\u7684\u4f3c\u4e4e\u4e5f\u662f\u6c11\u95f4\u6570\u636e\uff09\u3002\n\n\n3. \u7814\u4e60\u8425\uff08TOI / \u8cc7\u8a0a\u7814\u7fd2\u71df\uff09\n\u00b6\n\n\n\u4e2d\u83ef\u6c11\u570b\u53c3\u52a0\u570b\u969b\u8cc7\u8a0a\u5967\u6797\u5339\u4e9e\u7af6\u8cfd\u4ee3\u8868\u968a\u9074\u9078\u4f5c\u696d\u8981\u9ede\n\n\uff08TODO\uff09\n\n\n4. NPSC\n\u00b6\n\n\nNPSC 2017 \u5b98\u7f51\n\n\u8fd9\u4e2a\u6bd4\u8d5b\u548c OI \u6ca1\u5565\u5173\u7cfb\uff0c\u8fd9\u662f\u51fa\u7ed9\u9ad8\u4e2d\u751f\u73a9\u7684 ACM\uff08\u4ece\u8d5b\u5236\u89d2\u5ea6\u6765\u8bf4\uff09\u3002\u5f53\u7136\uff0c\u56e0\u4e3a\u9762\u5411\u9ad8\u4e2d\u751f\uff0c\u6240\u4ee5\u9898\u76ee\u662f\u4e2d\u6587\u3002\n\n\u8fd9\u4e2a\u6bd4\u8d5b\u6bd4\u8f83\u597d\u7684\u4e00\u70b9\u662f\u9898\u76ee\u3001\u6570\u636e\u9f50\u5168\uff0c\u7136\u800c\u540c\u6837\u6ca1\u6709\u9898\u89e3\u3002\n\n\n\u4e8c\u3001\u65e5\u672c\u4fe1\u606f\u5b66\u5965\u6797\u5339\u514b\u7ade\u8d5b\uff08\u65e5\u672c\u60c5\u5831\u30aa\u30ea\u30f3\u30d4\u30c3\u30af\uff09\n\u00b6\n\n\n\u5b98\u7f51\u5730\u5740\n | \n\u65e5\u672c\u9009\u624b\u5728 CF \u4e0a\u7684\u4ecb\u7ecd\n\n\n\u4e00\u822c\u7b80\u79f0\u4e3a JOI\u3002\n\u6240\u6709\u7684\u65e5\u672c\u9898\u76ee\u90fd\u63d0\u4f9b\u9898\u76ee\u3001\u6570\u636e\u3001\u9898\u89e3\u548c\u6807\u7a0b\n\u3002  \n\n\n1. \u9884\u8d5b\uff08\u4e88\u9078\uff09\n\u00b6\n\n\n\u6bcf\u5e74\u53c2\u52a0\u9884\u8d5b\u7684\u9009\u624b\u5927\u7ea6\u6709 1000 \u4eba\u3002\u6bcf\u5e74\u7684\u9884\u8d5b\u53ea\u6709\u4e00\u5929\uff0c3 \u5c0f\u65f6 5 \u9898\u3002\u96be\u5ea6\u5927\u7ea6\u4e3a \u666e\u53ca- \u5230 \u666e\u53caT4- \uff0c\u8003\u8bd5\u8303\u56f4\u5927\u7ea6\u4e3a \u666e\u53ca+ \u3002\n\n\u663e\u7136\u9884\u8d5b\u9898\u90fd\u633a\u6c34\u7684\uff0c\u6240\u4ee5\u6211\u4e0d\u4f1a\u628a\u9884\u8d5b\u9898\u4f20\u81f3 LibreOJ\u3002\n\n\u9884\u8d5b\u9898\u53ea\u6709\u65e5\u6587\u7248\u3002\u5982\u679c\u4f60\u60f3\u5728\u7ebf\u6d4b\u8bd5\uff0c\u4f60\u53ef\u4ee5\u5728 AtCoder \u63d0\u4ea4\uff0c\u4f8b\u5982 \nJOI 2016/2017 \u9884\u8d5b\n\u3002\u5bf9\u4e8e\u4e4b\u524d\u7684\u5e74\u4efd\uff0c\u7f51\u5740\u662f\u7c7b\u4f3c\u7684\u3002\n\n\u6709\u70b9\u9ebb\u70e6\u7684\u662f\uff0c\u7f51\u5740\u4e2d\u7684\u5e74\u4efd\u4e0e\u5b9e\u9645\u5e74\u4efd\u5dee\u4e00\u5e74\u3002\u4f8b\u5982 JOI 2016/2017 \u9884\u9009\u7684\u6bd4\u8d5b\u65f6\u95f4\u5728 2016 \u5e74\u5e95\uff0c\u7136\u800c\u7f51\u5740\u4e0a\u662f 2017\u3002\n\n\n\u9884\u8d5b\u3001\u51b3\u8d5b\u3001\u6625\u8bad\u8425\u7684\u9898\u76ee\u3001\u9898\u89e3\u3001\u6807\u7a0b\uff0c\u90fd\u53ea\u6709\u65e5\u8bed\n\u3002\n\n\n2. \u51b3\u8d5b\uff08\u672c\u9078\uff09\n\u00b6\n\n\n\u6bcf\u5e74\u6709 60~90 \u4f4d\u9009\u624b\u53c2\u52a0\u51b3\u8d5b\u3002\u4e00\u90e8\u5206\u9009\u624b\u4ece\u9884\u8d5b\u8131\u9896\u800c\u51fa\uff0c\u53e6\u4e00\u90e8\u5206\u662f\u4ece\u53bb\u5e74\u7684\u6625\u4ee4\u8425\u7a7a\u964d\u800c\u6765\u3002\n\n\u4e0e\u9884\u8d5b\u4e00\u6837\uff0c\u6bcf\u5e74\u7684\u51b3\u8d5b\u53ea\u6709\u4e00\u5929\uff08\u4e0e\u9884\u8d5b\u4e0d\u540c\uff0c\u6b63\u5f0f\u6bd4\u8d5b\u524d\u6709\u7ec3\u4e60\u8d5b\uff09\uff0c4 \u5c0f\u65f6 5 \u9898\u3002 \u96be\u5ea6\u5927\u7ea6\u4e3a \u666e\u53ca \u5230 \u63d0\u9ad8+ \uff0c\u8003\u8bd5\u8303\u56f4\u5927\u7ea6\u4e3a \u63d0\u9ad8\u3002\n\n\n\u81ea 2016/2017 \u8d5b\u5b63\u8d77\uff0cJOI \u51b3\u8d5b\u540c\u65f6\u63d0\u4f9b\u65e5\u8bed\u4e0e\u82f1\u8bed\u9898\u76ee\uff0c\u8fd8\u6709\u573a\u5916\u540c\u6b65\u8d5b\u3002\n\u4ee5\u524d\u7684\u9898\u76ee\u53ea\u6709\u65e5\u8bed\u3002\n\n\u8d5b\u540e\uff0c\u5982\u679c\u4f60\u60f3\u5728\u7ebf\u6d4b\u8bd5\uff0c\u4f60\u53ef\u4ee5\u5728 LibreOJ \u63d0\u4ea4\u3002Planet6174 \u6b63\u5728\u7ffb\u8bd1\u8fd1\u5e74\u7684\u51b3\u8d5b\u9898\uff0c\u76ee\u524d\u4e0a\u4f20\u4e86\u8fd1\u4e09\u5e74\u7684\u51b3\u8d5b\u9898\uff08\u6bd4\u5fc3\u5fc3\uff09\n\u4f60\u4e5f\u53ef\u4ee5\u9009\u62e9\u5728 AtCoder \u63d0\u4ea4\uff0c\u4f8b\u5982 \nJOI 2016/2017 \u51b3\u8d5b\n\u3002\u51b3\u8d5b\u7f51\u5740\u4e2d\u7684\u5e74\u4efd\u4e0e\u5b9e\u9645\u5e74\u4efd\u76f8\u540c\uff0c\u4e0d\u7528\u50cf\u9884\u8d5b\u90a3\u6837\u9ebb\u70e6\u3002\n\n\u9898\u5916\u8bdd\uff1a\u4e0a\u9762\u7684\u90a3\u4f4d\u65e5\u672c\u9009\u624b\u8bf4\uff0cJOI \u51b3\u8d5b\u5305\u5403\u5305\u4f4f\u5305\u8def\u8d39\uff0c\n\u56fd\u5bb6\u8865\u8d34\u4e0d\u82b1\u9009\u624b\u94b1\n\uff0c\u76f8\u6bd4\u4e4b\u4e0b\uff0cNOI \u7cfb\u5217\u6bd4\u8d5b\u5c31\u663e\u5f97 [\u624b\u52a8\u548c\u8c10] \u4e86\u3002\n\n\n3. \u6625\u8bad\u8425\uff08\u6625\u5b63\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u5408\u5bbf / JOI Spring Camp / JOISC\uff09\n\u00b6\n\n\n\u6bcf\u5e74\u6709 14~20 \u4f4d\u9009\u624b\u8fdb\u5165\u6625\u8bad\u8425\u3002\u6625\u8bad\u8425\u4e2d\u7684\u7ade\u8d5b\u5171\u6709 4 \u5929\uff08\u5916\u52a0\u4e00\u5929\u7ec3\u4e60\u8d5b\uff09\uff0c\u6bcf\u5929 5 \u5c0f\u65f6 3 \u9898\u3002\n\n\u8003\u8bd5\u8303\u56f4\u5927\u7ea6\u4e3a \n\u63d0\u9ad8+ \u5230 \u7701\u9009-\n\uff0c\u96be\u5ea6\u5927\u7ea6\u4e3a \n\u7701\u9009\n\uff08\u672c\u849f\u84bb\u5f88\u83dc\uff0c\u5927\u4f6c\u4eec\u89c9\u5f97\u5b83\u662f\u5565\u96be\u5ea6\u554a\uff09\u3002\u6625\u8bad\u8425\u603b\u5206\u524d\u56db\u7684\u9009\u624b\u5c06\u4ee3\u8868\u65e5\u672c\u53c2\u52a0 IOI\u3002\n\n\n\u81ea 2016/2017 \u8d5b\u5b63\u8d77\uff0cJOI \u6625\u8bad\u8425\u7684\u9898\u76ee\u540c\u65f6\u63d0\u4f9b\u65e5\u8bed\u4e0e\u82f1\u8bed\u3002\n\uff08\u6709\u6ca1\u6709\u573a\u5916\u540c\u6b65\u8d5b\u554a\uff1f\u672c\u849f\u84bb\u6ca1\u627e\u5230\u554a\uff09\u4ee5\u524d\u7684\u9898\u76ee\u53ea\u6709\u65e5\u8bed\u3002\n\n\u7ffb\u8bd1\u2026\u2026\u5751\u586b\u4e86\u4e00\u534a\u3002\u4f60\u73b0\u5728\u8981\u63d0\u4ea4\u7684\u8bdd\u53ef\u4ee5\u53bb AtCoder \uff0c\u4f8b\u5982 \nJOI \u6625\u8bad\u8425 2017\n\u3002  \n\n\u672c\u849f\u84bb\u505a\u7684\u611f\u89c9\u662f\u5927\u591a\u662f\u601d\u7ef4\u96be\u5ea6\u9ad8\uff0c\u4ee3\u7801\u80fd\u529b\u8981\u6c42\u5e76\u4e0d\u7b97\u9ad8\u3002\u53e6\u5916\uff0c\u6570\u636e\u7ed3\u6784\u6700\u96be\u53ea\u8003\u5230\u6811\u72b6\u6570\u7ec4\u548c\u7ebf\u6bb5\u6811\u3002\u81f3\u4e8e\u5e73\u8861\u6811\uff0c\u8003\u5bdf\u5185\u5bb9\u4fdd\u8bc1 set \u4e4b\u7c7b\u7684\u5bb9\u5668\u53ef\u505a\u800c\u6ca1\u5fc5\u8981\u624b\u5199 Treap/Splay\u3002\u4e0d\u8fc7\u5176\u4e2d\u5f88\u591a\u9898\u7528\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u505a\u4f1a\u66f4\u5feb\u3002\n\n\n4. \u516c\u5f00\u8d5b\uff08\u901a\u4fe1\u6559\u80b2 / JOI Open Contest\uff09\n\u00b6\n\n\n\u901a\u4fe1\u6559\u80b2\u7684\u6c49\u8bed\u7ffb\u8bd1\u5dee\u4e0d\u591a\u662f\u201d\u4fe1\u606f\u5b66\u201c\u6216\u8005\u201d\u8cc7\u8a0a\u79d1\u201c\u7684\u610f\u601d\u3002\u6625\u8bad\u8425\u7ed3\u675f\u540e\uff0c\u516c\u5f00\u8d5b\u662f\u7ed9 IOI \u65e5\u672c\u961f\u7684\u9009\u624b\u7ec3\u5175\u7684\uff0c\u4e0e\u65e5\u672c\u961f\u7684\u9009\u62d4\u65e0\u5173\u3002\n\nJOI \u516c\u5f00\u8d5b\u662f\u5728\u7ebf\u7ade\u8d5b\uff0c\u5b9e\u884c\u5b8c\u6574\u7684 IOI \u8d5b\u5236\uff0c\u53ef\u4ee5\u5b9e\u65f6\u63d0\u4ea4\uff0c\u5206\u6570\u53d6\u591a\u6b21\u63d0\u4ea4\u4e2d\u7684\u6700\u9ad8\u5206 Blahblahblah\n\n\nJOI \u516c\u5f00\u8d5b\u7684\u9898\u76ee\u3001\u9898\u89e3\u90fd\u540c\u65f6\u63d0\u4f9b\u65e5\u8bed\u548c\u82f1\u8bed\u3002\n\n\u7136\u800c\uff0c\u516c\u5f00\u8d5b\u7684\u9898\u76ee\u5e76\u6ca1\u6709\u5728\u7ebf\u63d0\u4ea4\u7684\u5730\u65b9\uff08\u4e5f\u53ef\u80fd\u662f\u6ca1\u627e\u5230\uff1f\uff09\u3002\n\n\n\u4e09\u3001\u4fc4\u7f57\u65af\uff1a\u043e\u043b\u0438\u043c\u043f\u0438\u0430\u0434\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u043a\u0430\n\u00b6\n\n\n\u5b98\u7f51\n | \n\u5728\u7ebf\u63d0\u4ea4\u5730\u5740\n | \n\u80fd\u4e0b Data & Solution \u7684\u771f\u5b98\u7f51\uff1f\n\uff08\u611f\u8c22 @Chiaki \u63d0\u4f9b\u7684\u8fde\u63a5\uff09\n\n\u4e00\u822c\u7b80\u79f0\u4e3a ROI\u3002\n\n\n\u56db\u3001\u5176\u4ed6\n\u00b6\n\n\n\u97e9\u56fd\uff1a\ud55c\uad6d \uc815\ubcf4 \uc62c\ub9bc \ud53c\uc544\ub4dc\n\n\n\u5b98\u7f51\u5730\u5740\n | \n\u8bd5\u9898\u5730\u5740\n | \n\u5728\u7ebf\u63d0\u4ea4\u5730\u5740\n\n\u4e00\u822c\u7b80\u79f0\u4e3a KOI\u3002\n\n\n\u52a0\u62ff\u5927\uff1aCanadian Computing Competition (CCC) and Canadian Computing Olympiad (CCO)\n\n\nhttps://cemc.math.uwaterloo.ca/contests/past_contests.html#ccc\n\n\n\u5fb7\u56fd\uff1aBWINF: Bundesweit Informatiknachwuchs f\u00f6rdern\n\n\nhttps://www.bwinf.de/\n\n\n\u5370\u5ea6\uff1aINOI\n\n\nhttps://www.iarcs.org.in/inoi/archives.php\n  \n\n\n\u6377\u514b\uff1aMatematick\u00e1 olympi\u00e1da \u2013 kategorie P\uff08\u5b83\u628a OI \u5212\u5206\u5230\u4e86 MO \u91cc\u2026\u2026\uff09\n\n\nhttp://mo.mff.cuni.cz/p/archiv.html\n\n\n\u7f57\u9a6c\u5c3c\u4e9a\uff1aOlimpiada Nationala de Informatica\n\n\nhttp://olimpiada.info/\n\n\n\u82f1\u56fd\uff1aBritish Informatics Olympiad\n\n\nhttp://www.olympiad.org.uk/\n\n\n\u5176\u5b83\u5927\u6d32\u7ea7 OI \u7ade\u8d5b\n\u00b6\n\n\nBalticOI\n\u00b6\n\n\n\n\n\n\n\n\n\u5e74\u4efd\n\n\n\u5730\u5740\n\n\n\u9898\u9762\n\n\n\u6570\u636e\n\n\n\u9898\u89e3\n\n\n\n\n\n\n\n\n\n\n2018\n\n\nhttps://boi2018.progolymp.se/tasks/\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n2017\n\n\nhttp://www.boi2017.org/\n\n\n\u221a\n\u221a\n\n\n\u00d7\n\n\n\u00d7\n\n\n\n\n\n\n2016\n\n\nhttps://www.cs.helsinki.fi/group/boi2016/tasks.shtml\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\uff08\u89c1\u4e0b\uff09\n\n\n\n\n\n\n2015\n\n\nhttp://www.boi2015.mimuw.edu.pl/305_Tasks\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\uff08\u89c1\u4e0b\uff09\n\n\n\n\n\n\n2014\n\n\nhttp://www.boi2014.lmio.lt/tasks.html\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u00d7\n\n\n\n\n\n\n2013\n\n\nhttp://boi2013.informatik-olympiade.de/?page_id=169#tasks\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n2012\n\n\nhttp://www.boi2012.lv/tasks\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n2011\n\n\nhttp://www.boi2011.dk/\n\n\n\u221a\n\u221a\n\uff08\u89c1\u4e0b\uff09\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n2010\n\n\nhttp://kodu.ut.ee/~ahto/boi/2010/?item=boi.tasks.0\n \n \nhttp://kodu.ut.ee/~ahto/boi/2010/?item=boi.tasks.1\n \n \nhttp://kodu.ut.ee/~ahto/boi/2010/?item=boi.tasks.2\n \n \nhttp://kodu.ut.ee/~ahto/boi/2010/?item=boi.tasks.tests\n \n \nhttp://kodu.ut.ee/~ahto/boi/2010/?item=boi.tasks.sol\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n2009\n\n\nhttp://www.csc.kth.se/contest/boi/tasks.php\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n2008\n\n\nhttp://b08.oi.edu.pl/\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u00d7\n\n\n\n\n\n\n2007\n\n\nhttp://www.boi2007.de/en/tasks\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n2006\n\n\nhttps://www.cs.helsinki.fi/group/boi2006/\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u00d7\n\n\n\n\n\n\n2005\n\n\nhttp://ims.mii.lt/olimp/?lang=lt&sk=baltijos&id=320410\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u00d7\n\n\n\n\n\n\n2004\n\n\nhttp://www.boi2004.lv/tasks.htm\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\uff08\u89c1\u4e0b\uff09\n\n\n\u221a\n\u221a\n\uff08\u89c1\u4e0b\uff09\n\n\n\n\n\n\n2003\n\n\nhttp://kodu.ut.ee/~ahto/boi/2003/?item=boi.tasks.0\n \n \nhttp://kodu.ut.ee/~ahto/boi/2003/?item=boi.tasks.1\n \n \nhttp://kodu.ut.ee/~ahto/boi/2003/?item=boi.tasks.2\n \n \nhttp://kodu.ut.ee/~ahto/boi/2003/?item=boi.tasks.tests\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\uff08\u89c1\u4e0b\uff09\n\n\n\n\n\n\n2002\n\n\nhttp://ims.mii.lt/olimp/senas/english/boi2002/tasks.htm\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n2001\n\n\nhttp://ims.mii.lt/olimp/?lang=lt&sk=baltijos&id=320480\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n2000\n\n\nhttp://ingforum.haninge.kth.se/BOI00/boi00.html\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n\n\n1995 ~ 2004 \u5e74\u7684 BalticOI \u9898\u9762\u3001\u6570\u636e\u3001\u9898\u89e3\u90fd\u53ef\u4ee5\u5728 \nhttp://ims.mii.lt/olimp/uzdav/boi_ar/\n \u4e0b\u8f7d\n\n1995 ~ 2016 \u5e74\uff1a\nhttp://www.lmio.mii.vu.lt/?p=viewarticle&id=292\n\n\nBalkanOI\n\u00b6\n\n\n\n\n\n\n\n\n\u5e74\u4efd\n\n\n\u5730\u5740\n\n\n\u9898\u9762\n\n\n\u6570\u636e\n\n\n\u9898\u89e3\n\n\n\n\n\n\n\n\n\n\n2018\n\n\nhttp://boi2018.ro/\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n2017\n\n\nhttp://www.boi2017.md/\n \n \nhttps://www.acmicpc.net/category/detail/1776\n\n\n\u221a\n\u221a\n\n\n\u00d7\n\n\n\u00d7\n\n\n\n\n\n\n2016\n\n\nhttp://boi2016.euc.ac.cy/welcome-to-boi-2016/competition/tasks/\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n2015\n\n\nhttp://www.boi2015.uni-ruse.bg/competition/tasks\n \n \nhttps://www.acmicpc.net/category/detail/1443\n\n\n\u221a\n\u221a\n\n\n\u00d7\n\n\n\u00d7\n\n\n\n\n\n\n2014\n\n\nhttp://boi2014.tubitak.gov.tr/index.html%3Fq=tasks.html\n\n\n\u221a\n\u221a\n\n\n\u00d7\n\n\n\u00d7\n\n\n\n\n\n\n2013\n\n\nhttps://github.com/f2lk6wf90d/boi2013-tasks\n\n\n\u221a\n\u221a\n\n\n\u00d7\n\n\n\u00d7\n\n\n\n\n\n\n2012\n\n\nhttps://boi2012.dms.rs/\n\n\n\u221a\n\u221a\n\uff08\u5b98\u7f51\u6ca1\u6709 BZOJ \u5374\u9f50\u5168 ?!\uff09\n\n\n\u221a\n\u221a\n\n\n?\n\n\n\n\n\n\n2011\n\n\nhttp://www.boi2011.ro/boi2011/?pagina=probleme\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n2010\n\n\n?\n\n\n?\n\n\n?\n\n\n?\n\n\n\n\n\n\n2009\n\n\nhttp://www.cs.org.mk/boi2009/tasks.html\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n2008\n\n\nhttp://www.cs.org.mk/boi2008/tasks.htm\n\n\n\u221a\n\u221a\n\n\n\u00d7\n\n\n\u00d7\n\n\n\n\n\n\n2007\n\n\nhttp://boi2007.edu.md/\n \uff08Web Archive \u6709\u5b58\u6863\uff09\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n2006\n\n\nhttp://www.boi2006.com/\n \uff08Web Archive \u6709\u5b58\u6863\uff09\n\n\n\u221a\n\u221a\n\n\n\u00d7\n\n\n\u00d7\n\n\n\n\n\n\n2005\n\n\nhttps://www.acmicpc.net/category/detail/841\n\n\n\u221a\n\u221a\n\n\n?\n\n\n?\n\n\n\n\n\n\n2004\n\n\nhttp://www.boi2004-plovdiv.org/\n \n \nhttps://www.acmicpc.net/category/detail/1122\n\n\n?\uff08\u97e9\u56fd\u4eba\u6709\u4e24\u9898\uff09\n\n\n?\n\n\n?\n\n\n\n\n\n\n2003\n\n\nhttp://students.info.uaic.ro/~boi2003/explore.php\n\n\n?\uff08BZOJ \u6709\u4e00\u9898\uff09\n\n\n?\n\n\n?\n\n\n\n\n\n\n2002\n\n\n?\n\n\n?\uff08BZOJ \u6709\u4e00\u9898\uff09\n\n\n?\n\n\n?\n\n\n\n\n\n\n2001\n\n\nhttp://www.mash.gov.al/ministria_eng/events/boi2001/homea.html\n \uff08Web Archive \u6709\u5b58\u6863\uff09\n\n\n\u221a\n\u221a\n\n\n\u00d7\n\n\n\u00d7\n\n\n\n\n\n\n2000\n\n\nhttp://ii.edu.mk/boi2000\n \uff08Web Archive \u6709\u5b58\u6863\uff09\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u00d7\n\n\n\n\n\n\n1999\n\n\nhttp://www.cs.uoi.gr/~stavros/boi99/boi99.htm\n\n\n\u221a\n\u221a\n\n\n\u00d7\n\n\n\u00d7\n\n\n\n\n\n\n1998\n\n\nhttp://www.ioi99.org.tr/BOI/index.html\n \uff08Web Archive \u6709\u5b58\u6863\uff09\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u00d7\n\n\n\n\n\n\n1997\n\n\nhttps://www.acmicpc.net/problem/7093\n \uff08\u97e9\u56fd\u4eba\u771f\u53ef\u6015\uff0c\u8fd9\u4e48\u5168\uff09\n\n\n\u221a\n\u221a\n\n\n\u00d7\n\n\n\u00d7\n\n\n\n\n\n\n\n\nEuropean Junior Olympiad in Informatics\n\u00b6\n\n\nhttps://ejoi.org/\n\n\nJunior Balkan Olmpiad in Informatics\n\u00b6\n\n\nhttps://mendo.club/Training.do?cid=2\n\n\nCEOI\n\u00b6\n\n\n\n\n\n\n\n\n\u5e74\u4efd\n\n\n\u5730\u5740\n\n\n\u9898\u9762\n\n\n\u6570\u636e\n\n\n\u9898\u89e3\n\n\n\n\n\n\n\n\n\n\n2011~2017\n\n\nhttp://ceoi.inf.elte.hu/tasks-archive/\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n2010\n\n\nhttp://ceoi2010.ics.upjs.sk/Contest/Tasks\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n2009\n\n\nhttp://www.ceoi2009.ro/view_page.php?id=24\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n2008\n\n\nhttp://www.ceoi2008.de/en/contest\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n2007\n\n\nhttps://www.fi.muni.cz/about/events-and-contests/ceoi/\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n2006\n\n\nhttp://www.hsin.hr/ceoi2006/\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n2005\n\n\nhttp://ceoi.inf.elte.hu/ceoi2005/\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n2004\n\n\nhttps://www.oi.edu.pl/old/php/ceoi2004.php?module=show&file=tasks\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n2003\n\n\nhttp://www.ceoi2003.de/www/index.php?action=file&cathegory=competition\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n2002\n\n\nhttp://www.ics.upjs.sk/ceoi/Documents.html\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n2001\n\n\nhttp://ceoi.inf.elte.hu/ceoi2001/\n \uff08Web Archive \u6709\u5b58\u6863\uff0c\u4e0b\u540c\uff09\n\n\n\u221a\n\u221a\n\n\n\u00d7\n\n\n\u00d7\n\n\n\n\n\n\n2000\n\n\nhttp://ceoi.ubbcluj.ro/internet/down.html\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u00d7\n\n\n\n\n\n\n1999\n\n\nhttp://www.fi.muni.cz/ceoi/\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n1998\n\n\nhttp://pubwww.srce.hr/hsin/ceoi98/\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\u221a\n\u221a\n\n\n\n\n\n\n1997\n\n\nhttp://www.oi.edu.pl/ceoi97/\n\n\n\u221a\n\u221a\n\n\n?\n\n\n?\n\n\n\n\n\n\n1996\n\n\n?\n\n\n?\n\n\n?\n\n\n?\n\n\n\n\n\n\n1995\n\n\nhttp://ceoi.inf.elte.hu/95/\n\n\n\u221a\n\u221a\n\n\n\u00d7\n\n\n\u00d7\n\n\n\n\n\n\n1994\n\n\nhttp://ceoi.inf.elte.hu/94/\n\n\n\u221a\n\u221a\n\n\n\u00d7\n\n\n\u00d7\n\n\n\n\n\n\n\n\nNordic Olympiads in Informatic\n\u00b6\n\n\nhttps://github.com/nordicolympiad",
            "title": "OI \u8d5b\u5236\u7b80\u4ecb"
        },
        {
            "location": "/introduction/mode/#_1",
            "text": "OI \u7ade\u8d5b\u662f\u4e00\u9879\u5168\u7403\u7684\u8d5b\u4e8b\uff0c\u6bcf\u5e74\u590f\u5929\u4f1a\u6709\u4e16\u754c\u7ea7\u7ade\u8d5b\uff08IOI\uff09\u4e3e\u884c\uff0c\u5927\u9646\u5730\u533a\u6d3e\u51fa\u7684\u961f\u4f0d\u90fd\u662f\u7ecf\u8fc7\u5c42\u5c42\u9009\u62d4\u7684\u3002\u5bf9\u4e8e\u5927\u90e8\u5206\u9009\u624b\u800c\u8a00\uff0c\u6bcf\u5e74\u65b0\u8d5b\u5b63\u4ece 10 \u6708\u7684 NOIP \uff08\u7701\u7ea7\u9009\u62d4\u8d5b\uff09\u5f00\u59cb\u3002  OI \u7ade\u8d5b\u4e2d\u5141\u8bb8\u4f7f\u7528\u7684\u8bed\u8a00\u5305\u62ec Pascal\uff08NOI\u7cfb\u5217\u6bd4\u8d5b\u5c06\u4e8e2020\u5e74\u505c\u6b62\u4f7f\u7528Pascal\uff09\uff0cC \u548c C++\u3002\u5176\u4e2d C++ \u7684\u7248\u672c\u4e0d\u540c\u8003\u8bd5\u6709\u4e0d\u540c\u7684\u89c4\u5b9a\u3002\u8003\u8bd5\u9898\u76ee\u4e00\u822c\u4e3a\u7b97\u6cd5\u6216\u8005\u6570\u636e\u7ed3\u6784\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u9898\u76ee\u5f62\u5f0f\u5305\u62ec\u4f20\u7edf\u9898\uff08\u6700\u5e38\u89c1\u7684\u89c4\u5b9a\u8f93\u5165\u548c\u8f93\u51fa\u5230\u6587\u4ef6\u7684\u9898\u76ee\uff09\u548c\u975e\u4f20\u7edf\u9898\uff08\u63d0\u4ea4\u7b54\u6848\u9898\u3001\u4ea4\u4e92\u9898\u3001\u8865\u5168\u4ee3\u7801\u9898\u7b49\u7b49\uff09\u3002",
            "title": "\u8d5b\u4e8b\u4ecb\u7ecd"
        },
        {
            "location": "/introduction/mode/#noip",
            "text": "NOIP\uff08National Olympiad in Informatics in Provinces\uff09\u662f\u5168\u56fd\u9752\u5c11\u5e74\u4fe1\u606f\u5b66\u5965\u6797\u5339\u514b\u8054\u8d5b\uff0c\u987e\u540d\u601d\u4e49\uff0c\u662f\u4ee5\u7701\u4e3a\u5355\u4f4d\u6392\u540d\u8bc4\u5956\uff0c\u5956\u9879\u542b\u91d1\u91cf\u9ad8\u7684\u4e00\u822c\u662f\u4e00\u4e8c\u7b49\u5956\uff0c\u53ef\u4ee5\u7528\u4e8e\u83b7\u5f97\u81ea\u4e3b\u62db\u751f\u8d44\u683c\u3002  NOIP \u5206\u4e3a\u521d\u8d5b\u548c\u590d\u8d5b\u4e24\u4e2a\u9636\u6bb5\u3002\u521d\u8d5b\u4f1a\u8003\u5bdf\u4e00\u4e9b\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6\u548c\u7b97\u6cd5\u57fa\u7840\uff08\u7b14\u8bd5\uff09\uff0c\u590d\u8d5b\u662f\u4e0a\u673a\u8003\u8bd5\u3002\u5168\u56fd\u4f7f\u7528\u540c\u4e00\u5957\u8bd5\u5377\uff0c\u4f46\u662f\u8bc4\u5956\u89c4\u5219\u662f\u6309\u7167\u7701\u5185\u60c5\u51b5\u7531 CCF \uff08\u4e2d\u56fd\u8ba1\u7b97\u673a\u5b66\u4f1a\uff09\u7edf\u4e00\u6307\u5b9a\uff0c\u5e76\u4e8e\u8d5b\u540e\u5728  NOI \u5b98\u65b9\u7f51\u7ad9  \u4e0a\u516c\u5e03\u3002",
            "title": "NOIP"
        },
        {
            "location": "/introduction/mode/#_2",
            "text": "\u7701\u961f\u9009\u62d4\u8d5b\u662f\u7528\u4e8e\u9009\u62d4\u5404\u7701\u53c2\u52a0\u5168\u56fd\u8d5b\u7684\u4ee3\u8868\u961f\uff0c\u5404\u4e2a\u7701\u961f\u7684\u540d\u989d\u6709\u590d\u6742\u7684\u8ba1\u7b97\u516c\u5f0f\uff0c\u4e00\u822c\u548c\u4e4b\u524d\u7684\u6210\u7ee9\u548c\u53c2\u8d5b\u4eba\u6570\u6709\u5173\u3002\u7701\u9009\u7531\u5404\u4e2a\u7701\u81ea\u884c\u51b3\u5b9a\uff0c\u76ee\u524d\u7684\u8d8b\u52bf\u662f\u5f88\u591a\u7701\u4efd\u9009\u62e9\u8054\u5408\u547d\u9898\u3002",
            "title": "\u7701\u9009"
        },
        {
            "location": "/introduction/mode/#noi",
            "text": "NOI\uff08National Olympiad in Informatics\uff09\u662f\u5168\u56fd\u4fe1\u606f\u5b66\u5965\u6797\u5339\u514b\u7ade\u8d5b\uff0c\u4e00\u822c\u5728\u4e03\u6708\u4efd\u4e3e\u884c\uff0c\u6709\u73b0\u573a\u8d5b\u548c\u7f51\u7edc\u8d5b\u3002\u73b0\u573a\u8d5b\u9009\u624b\u5206\u4e3a\u56db\u7c7b\uff0c\u5176\u4e2dA\u3001B\u3001C\u7c7b\u4e3a\u6b63\u5f0f\u9009\u624b\u3002A\u3001B \u7c7b\u5bf9\u5e94\u7701\u961f\u7684 A\u3001B \u7c7b\u9009\u624b\uff08\u5176\u4e2d A \u7c7b\u5728\u8ba1\u7b97\u6210\u7ee9\u65f6\u4f1a\u6709 5 \u5206\u52a0\u5206\uff09\uff0cC \u7c7b\u540d\u4e49\u4e0a\u662f\u5b66\u6821\u5bf9 CCF \u505a\u51fa\u7a81\u51fa\u8d21\u732e\u540e\u7684\u5956\u52b1\u540d\u989d\uff0cD \u7c7b\u662f\u9080\u8bf7\u8d5b\u9009\u624b\uff0c\u5982\u679c\u6210\u7ee9\u8d85\u8fc7\u5206\u6570\u7ebf\u7684\u8bdd\uff0c\u53ea\u6709\u6210\u7ee9\u8bc1\u660e\u800c\u6ca1\u6709\u5956\u724c\uff08\u540c\u7b49\u5206\u6570\u542b\u91d1\u91cf\u8981\u4f4e\u4e00\u4e9b\uff09\u3002\u6b63\u5f0f\u9009\u624b\u524d 50 \u540d\u7ec4\u6210\u56fd\u5bb6\u96c6\u8bad\u961f\uff0c\u83b7\u5f97\u4fdd\u9001\u8d44\u683c\u3002\u7f51\u7edc\u8d5b\u62a5\u540d\u5f62\u5f0f\u4e0a\u6ca1\u6709\u95e8\u69db\u3002",
            "title": "NOI"
        },
        {
            "location": "/introduction/mode/#wc",
            "text": "WC\uff08Winter Camp\uff09\u662f\u5168\u56fd\u9752\u5c11\u5e74\u4fe1\u606f\u5b66\u5965\u6797\u5339\u514b\u7ade\u8d5b\u51ac\u4ee4\u8425\uff0c\u662f\u6bcf\u5e74\u51ac\u5929\u5728\u5f53\u5e74 NOI \u4e3e\u529e\u5730\u8fdb\u884c\u7684\u4e00\u9879\u6d3b\u52a8\uff0c\u5185\u5bb9\u5305\u62ec\u82e5\u5e72\u5929\u7684\u57f9\u8bad\u548c\u4e00\u5929\u7684\u8003\u8bd5\u3002\u8fd9\u9879\u8003\u8bd5\u4e3b\u8981\u7528\u4e8e\u4ece\u56fd\u5bb6\u96c6\u8bad\u961f\uff08 50 \u4eba\uff09\u9009\u62d4\u56fd\u5bb6\u5019\u9009\u961f\uff08 15 \u4eba\uff09\u3002",
            "title": "WC"
        },
        {
            "location": "/introduction/mode/#apio",
            "text": "APIO\uff08Asia-Pacific Informatics Olympiad\uff09\u662f\u4e9a\u592a\u5730\u533a\u4fe1\u606f\u5b66\u5965\u6797\u5339\u514b\u7ade\u8d5b\uff0cCCF \u6bcf\u5e74\u4f1a\u5728\u4e94\u6708\u521d\u4e3e\u529e\u4e2d\u56fd\u8d5b\u533a\u955c\u50cf\u8d5b\u3002\u5728\u6bd4\u8d5b\u65e5\u524d\u540e\u4f1a\u6709\u57f9\u8bad\u6d3b\u52a8\u3002",
            "title": "APIO"
        },
        {
            "location": "/introduction/mode/#ctsc",
            "text": "CTSC\uff08China Team Selection Competition\uff09\u662f\u4e2d\u56fd\u961f\u9009\u62d4\u8d5b\u3002\u7528\u6765\u4ece\u56fd\u5bb6\u5019\u9009\u961f\uff08 15 \u4eba\uff09\u4e2d\u9009\u62d4\u56fd\u5bb6\u961f\uff08 4 \u4eba\uff09\u51c6\u5907\u53c2\u52a0\u5f53\u5e74\u590f\u5929\u7684 IOI \u6bd4\u8d5b\u3002  \u6ce8\uff1a APIO \u548c CTSC \u90fd\u662f\u4ee5\u7701\u4e3a\u5355\u4f4d\u62a5\u540d\uff0c\u4e00\u822c\u662f\u6309\u7167 NOIP \u6210\u7ee9\u6392\u5e8f\u6765\u786e\u5b9a\u8c01\u4f1a\u6709\u673a\u4f1a\u53c2\u52a0 APIO \u548c CTSC \uff08\u4e8c\u8005\u4e00\u822c\u65f6\u95f4\u4e0a\u975e\u5e38\u63a5\u8fd1\uff09\u3002",
            "title": "CTSC"
        },
        {
            "location": "/introduction/mode/#ioi",
            "text": "IOI\uff08International Olympiad in Informatics\uff09\u662f\u56fd\u9645\u4fe1\u606f\u5b66\u5965\u6797\u5339\u514b\u7ade\u8d5b\uff0c\u6bcf\u4e2a\u56fd\u5bb6\u6709\u56db\u4eba\u53c2\u8d5b\uff0c\u6bd4\u8d5b\u4f1a\u6709\u76f4\u64ad\u3002",
            "title": "IOI"
        },
        {
            "location": "/introduction/mode/#_3",
            "text": "",
            "title": "\u8d5b\u5236\u4ecb\u7ecd"
        },
        {
            "location": "/introduction/mode/#oi",
            "text": "\u4e00\u822c\u7684 OI \u8d5b\u5236\u53ef\u4ee5\u7406\u89e3\u4e3a\u5355\u4eba\u5728 5 \u4e2a\u5c0f\u65f6\u7684\u65f6\u95f4\u5185\u5c1d\u8bd5\u89e3\u51b3 3 \u4e2a\u9898\u3002\u6bcf\u4e2a\u9898\u76ee\u53ef\u4ee5\u4e0d\u5168\u90e8\u89e3\u51b3\uff0c\u4f1a\u6709\u591a\u4e2a\u6570\u636e\u70b9\uff0c\u9898\u76ee\u7684\u5206\u6570\u4e00\u822c\u662f\u6570\u636e\u70b9\u5f97\u5206\u4e4b\u548c\u3002\u6bcf\u4e2a\u6570\u636e\u70b9\u8fd8\u53ef\u80fd\u4f1a\u6709\u90e8\u5206\u5206\uff0c\u5c31\u662f\u6570\u636e\u70b9\u5185\u90e8\u4e5f\u4e0d\u9700\u8981\u5b8c\u5168\u6b63\u786e\u624d\u80fd\u5f97\u5230\u5206\u6570\u3002\u8bc4\u5206\u65b9\u5f0f\u662f\u5728\u6bd4\u8d5b\u7ed3\u675f\u540e\u7edf\u4e00\u8bc4\u6d4b\uff0c\u53ea\u6709\u4e00\u6b21\u63d0\u4ea4\u673a\u4f1a\u3002",
            "title": "OI \u8d5b\u5236"
        },
        {
            "location": "/introduction/mode/#ioi_1",
            "text": "\u76ee\u524d\u56fd\u5185\u6bd4\u8d5b\u4e5f\u5728\u9010\u6e10\u5411 IOI \u8d5b\u5236\u9760\u62e2\u3002",
            "title": "IOI \u8d5b\u5236"
        },
        {
            "location": "/introduction/mode/#acm-icpc",
            "text": "\u5728 ACM / ICPC \u6bd4\u8d5b\u4e2d\u4e00\u822c\u662f\u4e09\u4e2a\u4eba\u4f7f\u7528\u4e00\u53f0\u673a\u5668\uff0c\u6bcf\u4e2a\u9898\u76ee\u53ea\u6709\u5728\u6240\u6709\u6570\u636e\u70b9\u5168\u90e8\u6b63\u786e\u540e\u624d\u80fd\u5f97\u5230\u5206\u6570\u3002\u6bd4\u8d5b\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u6709\u591a\u6b21\u63d0\u4ea4\u673a\u4f1a\uff0c\u5b9e\u65f6\u8bc4\u6d4b\u5e76\u8fd4\u56de\u7ed3\u679c\u3002\u6bd4\u8d5b\u6392\u540d\u6839\u636e\u505a\u9898\u6570\u548c\u7f5a\u65f6\u6765\u8bc4\u5224\uff0c\u7f5a\u65f6\u662f\u901a\u8fc7\u9898\u76ee\u7684\u7528\u65f6\u4e4b\u548c\u52a0\u4e0a\u9519\u8bef\u63d0\u4ea4\u6b21\u6570\u4e58\u4ee5\u4e00\u4e2a\u7cfb\u6570\u3002",
            "title": "ACM / ICPC \u8d5b\u5236"
        },
        {
            "location": "/introduction/mode/#codeforces-cf",
            "text": "Codeforces  \u662f\u4e00\u4e2a\u5728\u7ebf\u8bc4\u6d4b\u7cfb\u7edf\uff0c\u5b9a\u671f\u4f1a\u4e3e\u529e\u6bd4\u8d5b\u3002\u5b83\u7684\u6bd4\u8d5b\u7279\u70b9\u662f\u5728\u6bd4\u8d5b\u8fc7\u7a0b\u4e2d\u53ea\u6d4b\u8bd5\u4e00\u90e8\u5206\u6570\u636e\uff08pretests\uff09\uff0c\u800c\u5728\u6bd4\u8d5b\u7ed3\u675f\u540e\u8fd4\u56de\u66f4\u591a\u6d4b\u8bd5\u70b9\u7684\u6d4b\u8bd5\u7ed3\u679c\uff08system tests\uff09\u3002\u6bd4\u8d5b\u65f6\u53ef\u4ee5\u591a\u6b21\u63d0\u4ea4\uff0c\u5141\u8bb8 hack \u522b\u4eba\u7684\u4ee3\u7801\u3002\u5f53\u7136\uff0c\u5982\u679c\u60f3\u8981 hack \uff0c\u5fc5\u987b\u8981\u9501\u5b9a\u81ea\u5df1\u7684\u4ee3\u7801\uff08\u6362\u8a00\u4e4b\uff0c\u65e0\u6cd5\u91cd\u65b0\u63d0\u4ea4\u8be5\u9898\uff09\u3002",
            "title": "Codeforces (CF) \u8d5b\u5236"
        },
        {
            "location": "/introduction/mode/#oi_1",
            "text": "",
            "title": "\u5176\u4ed6\u56fd\u5bb6\u548c\u5730\u533a\u7684 OI \u7ade\u8d5b"
        },
        {
            "location": "/introduction/mode/#_4",
            "text": "\u53f0\u6e7e\u5730\u533a\u628a informatics \u7ffb\u8bd1\u6210\u201c\u8d44\u8baf\u201d\u800c\u975e\u5927\u9646\u901a\u7528\u7684\u7ffb\u8bd1\u201c\u4fe1\u606f\u201d\u3002 \n\u53f0\u6e7e\u5730\u533a\u7684\u4fe1\u606f\u5b66\u5965\u6797\u5339\u514b\u7ade\u8d5b\u8d5b\u5236\u4e0e\u5927\u9646\u5730\u533a\u7c7b\u4f3c\u3002 \n\u8fd9\u4e9b\u6bd4\u8d5b\u5e76\u4e0d\u80fd\u7edf\u79f0\u4e3a TOI\uff0c\u8be6\u60c5\u89c1\u4e0b\u6587\u3002 \n\u4e24\u4e2a\u53f0\u6e7e\u7684 OJ\uff1a TIOJ \uff0c Zerojudge",
            "title": "\u53f0\u6e7e\u5730\u533a\u7684\u4fe1\u606f\u5b66\u5965\u6797\u5339\u514b\u7ade\u8d5b\uff08\u8cc7\u8a0a\u5967\u6797\u5339\u4e9e\u7af6\u8cfd\uff09"
        },
        {
            "location": "/introduction/mode/#1",
            "text": "\u6027\u8d28\u7c7b\u4f3c NOIP\uff0c\u96be\u5ea6\u2026\u2026\u6ca1\u7814\u7a76\u8fc7\u3002\u9898\u76ee\u7531\u5404\u533a\u7684\u5e08\u8303\u5b66\u9662\u547d\u9898\u3002 \n\u6ca1\u6709\u5b98\u65b9\u62ff\u9898\u76ee\u7684\u6e20\u9053\uff0c\u4e3b\u8981\u9760\u9009\u624b\u81ea\u5df1\u627e\u5404\u533a\u5e08\u8303\u5b66\u9662\u7684\u6559\u6388\u62ff\u3002\u5982\u679c\u4f60\u60f3\u5728\u7ebf\u63d0\u4ea4\uff0cTIOJ \u4e0a\u6709\u5f88\u591a\u5317\u5e02\u8d5b\uff08\u597d\u50cf\u662f\u53f0\u5317\uff1f\uff09\u7684\u9898\u3002",
            "title": "1. \u533a\u57df\u8d5b\uff08\u5340\u57df\u8cc7\u8a0a\u5b78\u79d1\u80fd\u529b\u7af6\u8cfd\uff09"
        },
        {
            "location": "/introduction/mode/#2",
            "text": "\u90a3\u4e9b\u8ddf\u6211\u8bf4\"\u653f\u6cbb\u6b63\u786e\"\u7684\u4eba\uff0c\u81ea\u5df1\u590d\u4e60\u4e0b\u201c\u4e5d\u4e8c\u5171\u8bc6\u201d\u548c\u201c\u4e00\u4e2d\u5404\u8868\u201d\u3002 \n\u4e00\u5929\u7b14\u8bd5\uff0c\u4e00\u5929\u673a\u8bd5\u3002\u673a\u8bd5\u4e00\u573a 5 \u5c0f\u65f6 7 \u9898\u30022016 \u5e74\u7684\u9898\u76ee\uff0c\u9664\u4e86\u4e00\u9053\u771f\u00b7\u7b7e\u5230\u9898\uff0c\u5269\u4e0b\u7684\u9898\u76ee\u96be\u5ea6\u548c\u8003\u8bd5\u8303\u56f4\u90fd\u5728  \u63d0\u9ad8- \u5230 \u5f31\u7701\u7701\u9009-  \u5de6\u53f3\u3002 \n\u5b98\u65b9\u62ff\u9898\u76ee\u7684\u6e20\u9053\u6233 \u8fd9\u91cc \uff0c\u7136\u800c\u5e76\u4e0d\u63d0\u4f9b\u6570\u636e\u548c\u9898\u89e3\u3002 \n\u5728\u7ebf\u63d0\u4ea4\u540c\u6837\u5de6\u8f6c TIOJ\u3002LOJ \u7ba1\u7406\u5458\u6b63\u5728\u4e0e TIOJ \u65b9\u9762\u8054\u7cfb\u8981\u6570\u636e\uff08TIOJ \u4e0a\u7684\u4f3c\u4e4e\u4e5f\u662f\u6c11\u95f4\u6570\u636e\uff09\u3002",
            "title": "2. \u5168\u56fd\u8d5b\uff08\u5168\u570b\u8cc7\u8a0a\u5b78\u79d1\u80fd\u529b\u7af6\u8cfd\uff09"
        },
        {
            "location": "/introduction/mode/#3-toi",
            "text": "\u4e2d\u83ef\u6c11\u570b\u53c3\u52a0\u570b\u969b\u8cc7\u8a0a\u5967\u6797\u5339\u4e9e\u7af6\u8cfd\u4ee3\u8868\u968a\u9074\u9078\u4f5c\u696d\u8981\u9ede \n\uff08TODO\uff09",
            "title": "3. \u7814\u4e60\u8425\uff08TOI / \u8cc7\u8a0a\u7814\u7fd2\u71df\uff09"
        },
        {
            "location": "/introduction/mode/#4-npsc",
            "text": "NPSC 2017 \u5b98\u7f51 \n\u8fd9\u4e2a\u6bd4\u8d5b\u548c OI \u6ca1\u5565\u5173\u7cfb\uff0c\u8fd9\u662f\u51fa\u7ed9\u9ad8\u4e2d\u751f\u73a9\u7684 ACM\uff08\u4ece\u8d5b\u5236\u89d2\u5ea6\u6765\u8bf4\uff09\u3002\u5f53\u7136\uff0c\u56e0\u4e3a\u9762\u5411\u9ad8\u4e2d\u751f\uff0c\u6240\u4ee5\u9898\u76ee\u662f\u4e2d\u6587\u3002 \n\u8fd9\u4e2a\u6bd4\u8d5b\u6bd4\u8f83\u597d\u7684\u4e00\u70b9\u662f\u9898\u76ee\u3001\u6570\u636e\u9f50\u5168\uff0c\u7136\u800c\u540c\u6837\u6ca1\u6709\u9898\u89e3\u3002",
            "title": "4. NPSC"
        },
        {
            "location": "/introduction/mode/#_5",
            "text": "\u5b98\u7f51\u5730\u5740  |  \u65e5\u672c\u9009\u624b\u5728 CF \u4e0a\u7684\u4ecb\u7ecd  \u4e00\u822c\u7b80\u79f0\u4e3a JOI\u3002 \u6240\u6709\u7684\u65e5\u672c\u9898\u76ee\u90fd\u63d0\u4f9b\u9898\u76ee\u3001\u6570\u636e\u3001\u9898\u89e3\u548c\u6807\u7a0b \u3002",
            "title": "\u4e8c\u3001\u65e5\u672c\u4fe1\u606f\u5b66\u5965\u6797\u5339\u514b\u7ade\u8d5b\uff08\u65e5\u672c\u60c5\u5831\u30aa\u30ea\u30f3\u30d4\u30c3\u30af\uff09"
        },
        {
            "location": "/introduction/mode/#1_1",
            "text": "\u6bcf\u5e74\u53c2\u52a0\u9884\u8d5b\u7684\u9009\u624b\u5927\u7ea6\u6709 1000 \u4eba\u3002\u6bcf\u5e74\u7684\u9884\u8d5b\u53ea\u6709\u4e00\u5929\uff0c3 \u5c0f\u65f6 5 \u9898\u3002\u96be\u5ea6\u5927\u7ea6\u4e3a \u666e\u53ca- \u5230 \u666e\u53caT4- \uff0c\u8003\u8bd5\u8303\u56f4\u5927\u7ea6\u4e3a \u666e\u53ca+ \u3002 \n\u663e\u7136\u9884\u8d5b\u9898\u90fd\u633a\u6c34\u7684\uff0c\u6240\u4ee5\u6211\u4e0d\u4f1a\u628a\u9884\u8d5b\u9898\u4f20\u81f3 LibreOJ\u3002 \n\u9884\u8d5b\u9898\u53ea\u6709\u65e5\u6587\u7248\u3002\u5982\u679c\u4f60\u60f3\u5728\u7ebf\u6d4b\u8bd5\uff0c\u4f60\u53ef\u4ee5\u5728 AtCoder \u63d0\u4ea4\uff0c\u4f8b\u5982  JOI 2016/2017 \u9884\u8d5b \u3002\u5bf9\u4e8e\u4e4b\u524d\u7684\u5e74\u4efd\uff0c\u7f51\u5740\u662f\u7c7b\u4f3c\u7684\u3002 \n\u6709\u70b9\u9ebb\u70e6\u7684\u662f\uff0c\u7f51\u5740\u4e2d\u7684\u5e74\u4efd\u4e0e\u5b9e\u9645\u5e74\u4efd\u5dee\u4e00\u5e74\u3002\u4f8b\u5982 JOI 2016/2017 \u9884\u9009\u7684\u6bd4\u8d5b\u65f6\u95f4\u5728 2016 \u5e74\u5e95\uff0c\u7136\u800c\u7f51\u5740\u4e0a\u662f 2017\u3002  \u9884\u8d5b\u3001\u51b3\u8d5b\u3001\u6625\u8bad\u8425\u7684\u9898\u76ee\u3001\u9898\u89e3\u3001\u6807\u7a0b\uff0c\u90fd\u53ea\u6709\u65e5\u8bed \u3002",
            "title": "1. \u9884\u8d5b\uff08\u4e88\u9078\uff09"
        },
        {
            "location": "/introduction/mode/#2_1",
            "text": "\u6bcf\u5e74\u6709 60~90 \u4f4d\u9009\u624b\u53c2\u52a0\u51b3\u8d5b\u3002\u4e00\u90e8\u5206\u9009\u624b\u4ece\u9884\u8d5b\u8131\u9896\u800c\u51fa\uff0c\u53e6\u4e00\u90e8\u5206\u662f\u4ece\u53bb\u5e74\u7684\u6625\u4ee4\u8425\u7a7a\u964d\u800c\u6765\u3002 \n\u4e0e\u9884\u8d5b\u4e00\u6837\uff0c\u6bcf\u5e74\u7684\u51b3\u8d5b\u53ea\u6709\u4e00\u5929\uff08\u4e0e\u9884\u8d5b\u4e0d\u540c\uff0c\u6b63\u5f0f\u6bd4\u8d5b\u524d\u6709\u7ec3\u4e60\u8d5b\uff09\uff0c4 \u5c0f\u65f6 5 \u9898\u3002 \u96be\u5ea6\u5927\u7ea6\u4e3a \u666e\u53ca \u5230 \u63d0\u9ad8+ \uff0c\u8003\u8bd5\u8303\u56f4\u5927\u7ea6\u4e3a \u63d0\u9ad8\u3002  \u81ea 2016/2017 \u8d5b\u5b63\u8d77\uff0cJOI \u51b3\u8d5b\u540c\u65f6\u63d0\u4f9b\u65e5\u8bed\u4e0e\u82f1\u8bed\u9898\u76ee\uff0c\u8fd8\u6709\u573a\u5916\u540c\u6b65\u8d5b\u3002 \u4ee5\u524d\u7684\u9898\u76ee\u53ea\u6709\u65e5\u8bed\u3002 \n\u8d5b\u540e\uff0c\u5982\u679c\u4f60\u60f3\u5728\u7ebf\u6d4b\u8bd5\uff0c\u4f60\u53ef\u4ee5\u5728 LibreOJ \u63d0\u4ea4\u3002Planet6174 \u6b63\u5728\u7ffb\u8bd1\u8fd1\u5e74\u7684\u51b3\u8d5b\u9898\uff0c\u76ee\u524d\u4e0a\u4f20\u4e86\u8fd1\u4e09\u5e74\u7684\u51b3\u8d5b\u9898\uff08\u6bd4\u5fc3\u5fc3\uff09\n\u4f60\u4e5f\u53ef\u4ee5\u9009\u62e9\u5728 AtCoder \u63d0\u4ea4\uff0c\u4f8b\u5982  JOI 2016/2017 \u51b3\u8d5b \u3002\u51b3\u8d5b\u7f51\u5740\u4e2d\u7684\u5e74\u4efd\u4e0e\u5b9e\u9645\u5e74\u4efd\u76f8\u540c\uff0c\u4e0d\u7528\u50cf\u9884\u8d5b\u90a3\u6837\u9ebb\u70e6\u3002 \n\u9898\u5916\u8bdd\uff1a\u4e0a\u9762\u7684\u90a3\u4f4d\u65e5\u672c\u9009\u624b\u8bf4\uff0cJOI \u51b3\u8d5b\u5305\u5403\u5305\u4f4f\u5305\u8def\u8d39\uff0c \u56fd\u5bb6\u8865\u8d34\u4e0d\u82b1\u9009\u624b\u94b1 \uff0c\u76f8\u6bd4\u4e4b\u4e0b\uff0cNOI \u7cfb\u5217\u6bd4\u8d5b\u5c31\u663e\u5f97 [\u624b\u52a8\u548c\u8c10] \u4e86\u3002",
            "title": "2. \u51b3\u8d5b\uff08\u672c\u9078\uff09"
        },
        {
            "location": "/introduction/mode/#3-joi-spring-camp-joisc",
            "text": "\u6bcf\u5e74\u6709 14~20 \u4f4d\u9009\u624b\u8fdb\u5165\u6625\u8bad\u8425\u3002\u6625\u8bad\u8425\u4e2d\u7684\u7ade\u8d5b\u5171\u6709 4 \u5929\uff08\u5916\u52a0\u4e00\u5929\u7ec3\u4e60\u8d5b\uff09\uff0c\u6bcf\u5929 5 \u5c0f\u65f6 3 \u9898\u3002 \n\u8003\u8bd5\u8303\u56f4\u5927\u7ea6\u4e3a  \u63d0\u9ad8+ \u5230 \u7701\u9009- \uff0c\u96be\u5ea6\u5927\u7ea6\u4e3a  \u7701\u9009 \uff08\u672c\u849f\u84bb\u5f88\u83dc\uff0c\u5927\u4f6c\u4eec\u89c9\u5f97\u5b83\u662f\u5565\u96be\u5ea6\u554a\uff09\u3002\u6625\u8bad\u8425\u603b\u5206\u524d\u56db\u7684\u9009\u624b\u5c06\u4ee3\u8868\u65e5\u672c\u53c2\u52a0 IOI\u3002  \u81ea 2016/2017 \u8d5b\u5b63\u8d77\uff0cJOI \u6625\u8bad\u8425\u7684\u9898\u76ee\u540c\u65f6\u63d0\u4f9b\u65e5\u8bed\u4e0e\u82f1\u8bed\u3002 \uff08\u6709\u6ca1\u6709\u573a\u5916\u540c\u6b65\u8d5b\u554a\uff1f\u672c\u849f\u84bb\u6ca1\u627e\u5230\u554a\uff09\u4ee5\u524d\u7684\u9898\u76ee\u53ea\u6709\u65e5\u8bed\u3002 \n\u7ffb\u8bd1\u2026\u2026\u5751\u586b\u4e86\u4e00\u534a\u3002\u4f60\u73b0\u5728\u8981\u63d0\u4ea4\u7684\u8bdd\u53ef\u4ee5\u53bb AtCoder \uff0c\u4f8b\u5982  JOI \u6625\u8bad\u8425 2017 \u3002   \n\u672c\u849f\u84bb\u505a\u7684\u611f\u89c9\u662f\u5927\u591a\u662f\u601d\u7ef4\u96be\u5ea6\u9ad8\uff0c\u4ee3\u7801\u80fd\u529b\u8981\u6c42\u5e76\u4e0d\u7b97\u9ad8\u3002\u53e6\u5916\uff0c\u6570\u636e\u7ed3\u6784\u6700\u96be\u53ea\u8003\u5230\u6811\u72b6\u6570\u7ec4\u548c\u7ebf\u6bb5\u6811\u3002\u81f3\u4e8e\u5e73\u8861\u6811\uff0c\u8003\u5bdf\u5185\u5bb9\u4fdd\u8bc1 set \u4e4b\u7c7b\u7684\u5bb9\u5668\u53ef\u505a\u800c\u6ca1\u5fc5\u8981\u624b\u5199 Treap/Splay\u3002\u4e0d\u8fc7\u5176\u4e2d\u5f88\u591a\u9898\u7528\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u505a\u4f1a\u66f4\u5feb\u3002",
            "title": "3. \u6625\u8bad\u8425\uff08\u6625\u5b63\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u5408\u5bbf / JOI Spring Camp / JOISC\uff09"
        },
        {
            "location": "/introduction/mode/#4-joi-open-contest",
            "text": "\u901a\u4fe1\u6559\u80b2\u7684\u6c49\u8bed\u7ffb\u8bd1\u5dee\u4e0d\u591a\u662f\u201d\u4fe1\u606f\u5b66\u201c\u6216\u8005\u201d\u8cc7\u8a0a\u79d1\u201c\u7684\u610f\u601d\u3002\u6625\u8bad\u8425\u7ed3\u675f\u540e\uff0c\u516c\u5f00\u8d5b\u662f\u7ed9 IOI \u65e5\u672c\u961f\u7684\u9009\u624b\u7ec3\u5175\u7684\uff0c\u4e0e\u65e5\u672c\u961f\u7684\u9009\u62d4\u65e0\u5173\u3002 \nJOI \u516c\u5f00\u8d5b\u662f\u5728\u7ebf\u7ade\u8d5b\uff0c\u5b9e\u884c\u5b8c\u6574\u7684 IOI \u8d5b\u5236\uff0c\u53ef\u4ee5\u5b9e\u65f6\u63d0\u4ea4\uff0c\u5206\u6570\u53d6\u591a\u6b21\u63d0\u4ea4\u4e2d\u7684\u6700\u9ad8\u5206 Blahblahblah  JOI \u516c\u5f00\u8d5b\u7684\u9898\u76ee\u3001\u9898\u89e3\u90fd\u540c\u65f6\u63d0\u4f9b\u65e5\u8bed\u548c\u82f1\u8bed\u3002 \n\u7136\u800c\uff0c\u516c\u5f00\u8d5b\u7684\u9898\u76ee\u5e76\u6ca1\u6709\u5728\u7ebf\u63d0\u4ea4\u7684\u5730\u65b9\uff08\u4e5f\u53ef\u80fd\u662f\u6ca1\u627e\u5230\uff1f\uff09\u3002",
            "title": "4. \u516c\u5f00\u8d5b\uff08\u901a\u4fe1\u6559\u80b2 / JOI Open Contest\uff09"
        },
        {
            "location": "/introduction/mode/#_6",
            "text": "\u5b98\u7f51  |  \u5728\u7ebf\u63d0\u4ea4\u5730\u5740  |  \u80fd\u4e0b Data & Solution \u7684\u771f\u5b98\u7f51\uff1f \uff08\u611f\u8c22 @Chiaki \u63d0\u4f9b\u7684\u8fde\u63a5\uff09 \n\u4e00\u822c\u7b80\u79f0\u4e3a ROI\u3002",
            "title": "\u4e09\u3001\u4fc4\u7f57\u65af\uff1a\u043e\u043b\u0438\u043c\u043f\u0438\u0430\u0434\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u043a\u0430"
        },
        {
            "location": "/introduction/mode/#_7",
            "text": "\u97e9\u56fd\uff1a\ud55c\uad6d \uc815\ubcf4 \uc62c\ub9bc \ud53c\uc544\ub4dc  \u5b98\u7f51\u5730\u5740  |  \u8bd5\u9898\u5730\u5740  |  \u5728\u7ebf\u63d0\u4ea4\u5730\u5740 \n\u4e00\u822c\u7b80\u79f0\u4e3a KOI\u3002  \u52a0\u62ff\u5927\uff1aCanadian Computing Competition (CCC) and Canadian Computing Olympiad (CCO)  https://cemc.math.uwaterloo.ca/contests/past_contests.html#ccc  \u5fb7\u56fd\uff1aBWINF: Bundesweit Informatiknachwuchs f\u00f6rdern  https://www.bwinf.de/  \u5370\u5ea6\uff1aINOI  https://www.iarcs.org.in/inoi/archives.php     \u6377\u514b\uff1aMatematick\u00e1 olympi\u00e1da \u2013 kategorie P\uff08\u5b83\u628a OI \u5212\u5206\u5230\u4e86 MO \u91cc\u2026\u2026\uff09  http://mo.mff.cuni.cz/p/archiv.html  \u7f57\u9a6c\u5c3c\u4e9a\uff1aOlimpiada Nationala de Informatica  http://olimpiada.info/  \u82f1\u56fd\uff1aBritish Informatics Olympiad  http://www.olympiad.org.uk/",
            "title": "\u56db\u3001\u5176\u4ed6"
        },
        {
            "location": "/introduction/mode/#oi_2",
            "text": "",
            "title": "\u5176\u5b83\u5927\u6d32\u7ea7 OI \u7ade\u8d5b"
        },
        {
            "location": "/introduction/mode/#balticoi",
            "text": "\u5e74\u4efd  \u5730\u5740  \u9898\u9762  \u6570\u636e  \u9898\u89e3      2018  https://boi2018.progolymp.se/tasks/  \u221a \u221a  \u221a \u221a  \u221a \u221a    2017  http://www.boi2017.org/  \u221a \u221a  \u00d7  \u00d7    2016  https://www.cs.helsinki.fi/group/boi2016/tasks.shtml  \u221a \u221a  \u221a \u221a  \u221a \u221a \uff08\u89c1\u4e0b\uff09    2015  http://www.boi2015.mimuw.edu.pl/305_Tasks  \u221a \u221a  \u221a \u221a  \u221a \u221a \uff08\u89c1\u4e0b\uff09    2014  http://www.boi2014.lmio.lt/tasks.html  \u221a \u221a  \u221a \u221a  \u00d7    2013  http://boi2013.informatik-olympiade.de/?page_id=169#tasks  \u221a \u221a  \u221a \u221a  \u221a \u221a    2012  http://www.boi2012.lv/tasks  \u221a \u221a  \u221a \u221a  \u221a \u221a    2011  http://www.boi2011.dk/  \u221a \u221a \uff08\u89c1\u4e0b\uff09  \u221a \u221a  \u221a \u221a    2010  http://kodu.ut.ee/~ahto/boi/2010/?item=boi.tasks.0     http://kodu.ut.ee/~ahto/boi/2010/?item=boi.tasks.1     http://kodu.ut.ee/~ahto/boi/2010/?item=boi.tasks.2     http://kodu.ut.ee/~ahto/boi/2010/?item=boi.tasks.tests     http://kodu.ut.ee/~ahto/boi/2010/?item=boi.tasks.sol  \u221a \u221a  \u221a \u221a  \u221a \u221a    2009  http://www.csc.kth.se/contest/boi/tasks.php  \u221a \u221a  \u221a \u221a  \u221a \u221a    2008  http://b08.oi.edu.pl/  \u221a \u221a  \u221a \u221a  \u00d7    2007  http://www.boi2007.de/en/tasks  \u221a \u221a  \u221a \u221a  \u221a \u221a    2006  https://www.cs.helsinki.fi/group/boi2006/  \u221a \u221a  \u221a \u221a  \u00d7    2005  http://ims.mii.lt/olimp/?lang=lt&sk=baltijos&id=320410  \u221a \u221a  \u221a \u221a  \u00d7    2004  http://www.boi2004.lv/tasks.htm  \u221a \u221a  \u221a \u221a \uff08\u89c1\u4e0b\uff09  \u221a \u221a \uff08\u89c1\u4e0b\uff09    2003  http://kodu.ut.ee/~ahto/boi/2003/?item=boi.tasks.0     http://kodu.ut.ee/~ahto/boi/2003/?item=boi.tasks.1     http://kodu.ut.ee/~ahto/boi/2003/?item=boi.tasks.2     http://kodu.ut.ee/~ahto/boi/2003/?item=boi.tasks.tests  \u221a \u221a  \u221a \u221a  \u221a \u221a \uff08\u89c1\u4e0b\uff09    2002  http://ims.mii.lt/olimp/senas/english/boi2002/tasks.htm  \u221a \u221a  \u221a \u221a  \u221a \u221a    2001  http://ims.mii.lt/olimp/?lang=lt&sk=baltijos&id=320480  \u221a \u221a  \u221a \u221a  \u221a \u221a    2000  http://ingforum.haninge.kth.se/BOI00/boi00.html  \u221a \u221a  \u221a \u221a  \u221a \u221a     1995 ~ 2004 \u5e74\u7684 BalticOI \u9898\u9762\u3001\u6570\u636e\u3001\u9898\u89e3\u90fd\u53ef\u4ee5\u5728  http://ims.mii.lt/olimp/uzdav/boi_ar/  \u4e0b\u8f7d \n1995 ~ 2016 \u5e74\uff1a http://www.lmio.mii.vu.lt/?p=viewarticle&id=292",
            "title": "BalticOI"
        },
        {
            "location": "/introduction/mode/#balkanoi",
            "text": "\u5e74\u4efd  \u5730\u5740  \u9898\u9762  \u6570\u636e  \u9898\u89e3      2018  http://boi2018.ro/  \u221a \u221a  \u221a \u221a  \u221a \u221a    2017  http://www.boi2017.md/     https://www.acmicpc.net/category/detail/1776  \u221a \u221a  \u00d7  \u00d7    2016  http://boi2016.euc.ac.cy/welcome-to-boi-2016/competition/tasks/  \u221a \u221a  \u221a \u221a  \u221a \u221a    2015  http://www.boi2015.uni-ruse.bg/competition/tasks     https://www.acmicpc.net/category/detail/1443  \u221a \u221a  \u00d7  \u00d7    2014  http://boi2014.tubitak.gov.tr/index.html%3Fq=tasks.html  \u221a \u221a  \u00d7  \u00d7    2013  https://github.com/f2lk6wf90d/boi2013-tasks  \u221a \u221a  \u00d7  \u00d7    2012  https://boi2012.dms.rs/  \u221a \u221a \uff08\u5b98\u7f51\u6ca1\u6709 BZOJ \u5374\u9f50\u5168 ?!\uff09  \u221a \u221a  ?    2011  http://www.boi2011.ro/boi2011/?pagina=probleme  \u221a \u221a  \u221a \u221a  \u221a \u221a    2010  ?  ?  ?  ?    2009  http://www.cs.org.mk/boi2009/tasks.html  \u221a \u221a  \u221a \u221a  \u221a \u221a    2008  http://www.cs.org.mk/boi2008/tasks.htm  \u221a \u221a  \u00d7  \u00d7    2007  http://boi2007.edu.md/  \uff08Web Archive \u6709\u5b58\u6863\uff09  \u221a \u221a  \u221a \u221a  \u221a \u221a    2006  http://www.boi2006.com/  \uff08Web Archive \u6709\u5b58\u6863\uff09  \u221a \u221a  \u00d7  \u00d7    2005  https://www.acmicpc.net/category/detail/841  \u221a \u221a  ?  ?    2004  http://www.boi2004-plovdiv.org/     https://www.acmicpc.net/category/detail/1122  ?\uff08\u97e9\u56fd\u4eba\u6709\u4e24\u9898\uff09  ?  ?    2003  http://students.info.uaic.ro/~boi2003/explore.php  ?\uff08BZOJ \u6709\u4e00\u9898\uff09  ?  ?    2002  ?  ?\uff08BZOJ \u6709\u4e00\u9898\uff09  ?  ?    2001  http://www.mash.gov.al/ministria_eng/events/boi2001/homea.html  \uff08Web Archive \u6709\u5b58\u6863\uff09  \u221a \u221a  \u00d7  \u00d7    2000  http://ii.edu.mk/boi2000  \uff08Web Archive \u6709\u5b58\u6863\uff09  \u221a \u221a  \u221a \u221a  \u00d7    1999  http://www.cs.uoi.gr/~stavros/boi99/boi99.htm  \u221a \u221a  \u00d7  \u00d7    1998  http://www.ioi99.org.tr/BOI/index.html  \uff08Web Archive \u6709\u5b58\u6863\uff09  \u221a \u221a  \u221a \u221a  \u00d7    1997  https://www.acmicpc.net/problem/7093  \uff08\u97e9\u56fd\u4eba\u771f\u53ef\u6015\uff0c\u8fd9\u4e48\u5168\uff09  \u221a \u221a  \u00d7  \u00d7",
            "title": "BalkanOI"
        },
        {
            "location": "/introduction/mode/#european-junior-olympiad-in-informatics",
            "text": "https://ejoi.org/",
            "title": "European Junior Olympiad in Informatics"
        },
        {
            "location": "/introduction/mode/#junior-balkan-olmpiad-in-informatics",
            "text": "https://mendo.club/Training.do?cid=2",
            "title": "Junior Balkan Olmpiad in Informatics"
        },
        {
            "location": "/introduction/mode/#ceoi",
            "text": "\u5e74\u4efd  \u5730\u5740  \u9898\u9762  \u6570\u636e  \u9898\u89e3      2011~2017  http://ceoi.inf.elte.hu/tasks-archive/  \u221a \u221a  \u221a \u221a  \u221a \u221a    2010  http://ceoi2010.ics.upjs.sk/Contest/Tasks  \u221a \u221a  \u221a \u221a  \u221a \u221a    2009  http://www.ceoi2009.ro/view_page.php?id=24  \u221a \u221a  \u221a \u221a  \u221a \u221a    2008  http://www.ceoi2008.de/en/contest  \u221a \u221a  \u221a \u221a  \u221a \u221a    2007  https://www.fi.muni.cz/about/events-and-contests/ceoi/  \u221a \u221a  \u221a \u221a  \u221a \u221a    2006  http://www.hsin.hr/ceoi2006/  \u221a \u221a  \u221a \u221a  \u221a \u221a    2005  http://ceoi.inf.elte.hu/ceoi2005/  \u221a \u221a  \u221a \u221a  \u221a \u221a    2004  https://www.oi.edu.pl/old/php/ceoi2004.php?module=show&file=tasks  \u221a \u221a  \u221a \u221a  \u221a \u221a    2003  http://www.ceoi2003.de/www/index.php?action=file&cathegory=competition  \u221a \u221a  \u221a \u221a  \u221a \u221a    2002  http://www.ics.upjs.sk/ceoi/Documents.html  \u221a \u221a  \u221a \u221a  \u221a \u221a    2001  http://ceoi.inf.elte.hu/ceoi2001/  \uff08Web Archive \u6709\u5b58\u6863\uff0c\u4e0b\u540c\uff09  \u221a \u221a  \u00d7  \u00d7    2000  http://ceoi.ubbcluj.ro/internet/down.html  \u221a \u221a  \u221a \u221a  \u00d7    1999  http://www.fi.muni.cz/ceoi/  \u221a \u221a  \u221a \u221a  \u221a \u221a    1998  http://pubwww.srce.hr/hsin/ceoi98/  \u221a \u221a  \u221a \u221a  \u221a \u221a    1997  http://www.oi.edu.pl/ceoi97/  \u221a \u221a  ?  ?    1996  ?  ?  ?  ?    1995  http://ceoi.inf.elte.hu/95/  \u221a \u221a  \u00d7  \u00d7    1994  http://ceoi.inf.elte.hu/94/  \u221a \u221a  \u00d7  \u00d7",
            "title": "CEOI"
        },
        {
            "location": "/introduction/mode/#nordic-olympiads-in-informatic",
            "text": "https://github.com/nordicolympiad",
            "title": "Nordic Olympiads in Informatic"
        },
        {
            "location": "/introduction/resources/",
            "text": "\u5728\u7ebf\u6d4b\u8bd5\uff08\u8bad\u7ec3\uff09\u5e73\u53f0\n\u00b6\n\n\n\u5728\u7ebf\u6d4b\u8bd5\u5e73\u53f0\u53c8\u79f0 Online Judging System\uff0c\u4e00\u822c\u7528\u6765\u5237\u9898\u3001\u7ec4\u7ec7\u6bd4\u8d5b\uff0c\u4e5f\u6709\u7684\u4f1a\u63d0\u4f9b\u535a\u5ba2\u529f\u80fd\u65b9\u4fbf\u9009\u624b\u4ea4\u6d41\u3002\n\n\n\n\nJudge Duck Online\n\n\nCodeforces\n\n\nPOJ\n\n\nHDU OJ\n\n\nLuogu\n\n\nLibreOJ\n\n\nVijos\n\n\nUOJ\n\n\n51Nod\n\n\n\n\n\u5728\u7ebf\u6559\u7a0b\n\u00b6\n\n\n\n\nCodeforces \u4e0a\u7f51\u53cb\u6574\u7406\u7684\u4e00\u4efd\u6559\u7a0b\u5408\u96c6\n\n\n\u82f1\u6587\u7248 E-Maxx \u7b97\u6cd5\u6559\u7a0b\n\n\n\u6f14\u7b97\u6cd5\u7b14\u8bb0\n \u53f0\u6e7e\u5e08\u8303\u5927\u5b66\u603b\u7ed3\u7684\u6559\u7a0b\n\n\n\n\n\u4e66\u7c4d\n\u00b6\n\n\n\n\n\u4fe1\u606f\u5b66\u5965\u8d5b\u4e00\u672c\u901a\uff08\u521d\u5b66\u8005\u5411\uff09\n\n\n\u7b97\u6cd5\u7ade\u8d5b\u5165\u95e8\u7ecf\u5178 \uff08\u4eba\u79f0\u7d2b\u4e66\uff09\n\n\n\u7b97\u6cd5\u7ade\u8d5b\u5165\u95e8\u7ecf\u5178\u2014\u2014\u8bad\u7ec3\u6307\u5357 \uff08\u4eba\u79f0\u5927\u767d\uff09\n\n\n\u7b97\u6cd5\u827a\u672f\u4e0e\u4fe1\u606f\u5b66\u7ade\u8d5b \uff08\u4eba\u79f0\u9ed1\u4e66\uff09\n\n\n\u7b97\u6cd5\u7ade\u8d5b\u8fdb\u9636\u6307\u5357\n\n\nCompetitive Programmer's Handbook\n\n\n\n\n\u5de5\u5177\n\u00b6\n\n\n\n\n\u7ecf\u5178\u7b97\u6cd5\u7684\u53ef\u89c6\u5316\u7ed3\u679c - VisuAlgo\n\n\nOEIS \u6574\u6570\u6570\u5217\u641c\u7d22\u5f15\u64ce\n\n\nUbuntu Pastebin\uff0c\u53ef\u4ee5\u7528\u6765\u5206\u4eab\u4ee3\u7801\n\n\nuDebug \u63d0\u4f9b\u4e00\u4e9b OJ \u9898\u76ee\u7684\u8c03\u8bd5\u8f85\u52a9",
            "title": "\u5b66\u4e60\u8d44\u6e90"
        },
        {
            "location": "/introduction/resources/#_1",
            "text": "\u5728\u7ebf\u6d4b\u8bd5\u5e73\u53f0\u53c8\u79f0 Online Judging System\uff0c\u4e00\u822c\u7528\u6765\u5237\u9898\u3001\u7ec4\u7ec7\u6bd4\u8d5b\uff0c\u4e5f\u6709\u7684\u4f1a\u63d0\u4f9b\u535a\u5ba2\u529f\u80fd\u65b9\u4fbf\u9009\u624b\u4ea4\u6d41\u3002   Judge Duck Online  Codeforces  POJ  HDU OJ  Luogu  LibreOJ  Vijos  UOJ  51Nod",
            "title": "\u5728\u7ebf\u6d4b\u8bd5\uff08\u8bad\u7ec3\uff09\u5e73\u53f0"
        },
        {
            "location": "/introduction/resources/#_2",
            "text": "Codeforces \u4e0a\u7f51\u53cb\u6574\u7406\u7684\u4e00\u4efd\u6559\u7a0b\u5408\u96c6  \u82f1\u6587\u7248 E-Maxx \u7b97\u6cd5\u6559\u7a0b  \u6f14\u7b97\u6cd5\u7b14\u8bb0  \u53f0\u6e7e\u5e08\u8303\u5927\u5b66\u603b\u7ed3\u7684\u6559\u7a0b",
            "title": "\u5728\u7ebf\u6559\u7a0b"
        },
        {
            "location": "/introduction/resources/#_3",
            "text": "\u4fe1\u606f\u5b66\u5965\u8d5b\u4e00\u672c\u901a\uff08\u521d\u5b66\u8005\u5411\uff09  \u7b97\u6cd5\u7ade\u8d5b\u5165\u95e8\u7ecf\u5178 \uff08\u4eba\u79f0\u7d2b\u4e66\uff09  \u7b97\u6cd5\u7ade\u8d5b\u5165\u95e8\u7ecf\u5178\u2014\u2014\u8bad\u7ec3\u6307\u5357 \uff08\u4eba\u79f0\u5927\u767d\uff09  \u7b97\u6cd5\u827a\u672f\u4e0e\u4fe1\u606f\u5b66\u7ade\u8d5b \uff08\u4eba\u79f0\u9ed1\u4e66\uff09  \u7b97\u6cd5\u7ade\u8d5b\u8fdb\u9636\u6307\u5357  Competitive Programmer's Handbook",
            "title": "\u4e66\u7c4d"
        },
        {
            "location": "/introduction/resources/#_4",
            "text": "\u7ecf\u5178\u7b97\u6cd5\u7684\u53ef\u89c6\u5316\u7ed3\u679c - VisuAlgo  OEIS \u6574\u6570\u6570\u5217\u641c\u7d22\u5f15\u64ce  Ubuntu Pastebin\uff0c\u53ef\u4ee5\u7528\u6765\u5206\u4eab\u4ee3\u7801  uDebug \u63d0\u4f9b\u4e00\u4e9b OJ \u9898\u76ee\u7684\u8c03\u8bd5\u8f85\u52a9",
            "title": "\u5de5\u5177"
        },
        {
            "location": "/introduction/softwares/",
            "text": "\u8bc4\u6d4b\u8f6f\u4ef6\n\u00b6\n\n\n\u5f88\u591a\u65f6\u5019\uff0c\u4f60\u62ff\u5230\u4e86\u4e00\u5957\u9898\uff0c\u60f3\u8981\u5728\u672c\u5730\u6d4b\u8bd5\u4e00\u4e0b\u81ea\u5df1\u80fd\u5f97\u591a\u5c11\u5206\uff0c\u8fd9\u65f6\u5019\u5c31\u9700\u8981\u8bc4\u6d4b\u8f6f\u4ef6\u4e86\u3002\n\n\nLemon\n\u00b6\n\n\nLemon \u662f zhipeng-jia \u5199\u7684\u5f00\u6e90\u7684\u8bc4\u6d4b\u5de5\u5177\uff0c\u5730\u5740\u5728\uff1a\nzhipeng-jia/project-lemon\n\u3002\n\n\nIr1d \u63d0\u4f9b\u4e86\u4e00\u4efd linux \u4e0b\u7f16\u8bd1\u597d\u7684\u7248\u672c\u5728 \nProject_lemon\n\u3002\n\n\nMenci \u63d0\u4f9b\u4e86\u4e00\u4efd\u66f4\u65b0\u7684\u7248\u672c\u5728 \nMenci/Lemon\n\n\n\u81ea\u884c\u7f16\u8bd1\n\u00b6\n\n\nsudo apt update\nsudo apt install qt5-default build-essential git -y\ngit clone --depth\n=\n1\n http://github.com/menci/lemon.git\n\ncd\n lemon\n\n# \u53ef\u4ee5\u4fee\u6539 make \u6587\u4ef6\u6765\u8c03\u6574 make job \u7684\u7ebf\u7a0b\u6570\n\nsed -i \n's/make $/make -j 1 $/g'\n make\n./make\ncp Lemon ~\n\ncd\n ..\n\n\n\n\n\u6570\u636e\u683c\u5f0f\n\u00b6\n\n\n\u9996\u5148\u6253\u5f00 lemon \u9009\u62e9\u65b0\u5efa\u8bd5\u9898\uff0c\u800c\u540e\u6253\u5f00\u65b0\u5efa\u8bd5\u9898\u7684\u6587\u4ef6\u5939\n\n\n\u9898\u76ee\u548c\u6570\u636e\u5e94\u8be5\u5982\u4ee5\u4e0b\u683c\u5f0f\u6240\u793a\n\n\u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 gendata.py\n\u2502   \u251c\u2500\u2500 product\n\u2502   \u2502   \u251c\u2500\u2500 product100.in\n\u2502   \u2502   \u251c\u2500\u2500 product100.out\n\u2502   \u2502   \u251c\u2500\u2500 product10.in\n\u2502   \u2502   \u251c\u2500\u2500 product10.out\n\u2502   \u2502   \u251c\u2500\u2500 product11.in\n...\n\n\n\n\u5f53\u6240\u6709\u8bd5\u9898\u6dfb\u52a0\u5b8c\u6210\u540e\uff0c\u56de\u5230 lemon \u9009\u62e9\u81ea\u52a8\u6dfb\u52a0\u8bd5\u9898\n\n\n\u6b64\u65f6\u4f60\u7684\u9898\u76ee\u548c\u6570\u636e\u70b9\u5e94\u8be5\u90fd\u663e\u793a\u5728 lemon \u5f53\u4e2d\u4e86\n\n\nCena\n\u00b6\n\n\n\u8001\u724c\u8bc4\u6d4b\u8f6f\u4ef6\n\n\nArbiter\n\u00b6\n\n\nNOI Linux \u5fa1\u7528\u8bc4\u6d4b\u5de5\u5177",
            "title": "\u5de5\u5177\u8f6f\u4ef6"
        },
        {
            "location": "/introduction/softwares/#_1",
            "text": "\u5f88\u591a\u65f6\u5019\uff0c\u4f60\u62ff\u5230\u4e86\u4e00\u5957\u9898\uff0c\u60f3\u8981\u5728\u672c\u5730\u6d4b\u8bd5\u4e00\u4e0b\u81ea\u5df1\u80fd\u5f97\u591a\u5c11\u5206\uff0c\u8fd9\u65f6\u5019\u5c31\u9700\u8981\u8bc4\u6d4b\u8f6f\u4ef6\u4e86\u3002",
            "title": "\u8bc4\u6d4b\u8f6f\u4ef6"
        },
        {
            "location": "/introduction/softwares/#lemon",
            "text": "Lemon \u662f zhipeng-jia \u5199\u7684\u5f00\u6e90\u7684\u8bc4\u6d4b\u5de5\u5177\uff0c\u5730\u5740\u5728\uff1a zhipeng-jia/project-lemon \u3002  Ir1d \u63d0\u4f9b\u4e86\u4e00\u4efd linux \u4e0b\u7f16\u8bd1\u597d\u7684\u7248\u672c\u5728  Project_lemon \u3002  Menci \u63d0\u4f9b\u4e86\u4e00\u4efd\u66f4\u65b0\u7684\u7248\u672c\u5728  Menci/Lemon",
            "title": "Lemon"
        },
        {
            "location": "/introduction/softwares/#_2",
            "text": "sudo apt update\nsudo apt install qt5-default build-essential git -y\ngit clone --depth = 1  http://github.com/menci/lemon.git cd  lemon # \u53ef\u4ee5\u4fee\u6539 make \u6587\u4ef6\u6765\u8c03\u6574 make job \u7684\u7ebf\u7a0b\u6570 \nsed -i  's/make $/make -j 1 $/g'  make\n./make\ncp Lemon ~ cd  ..",
            "title": "\u81ea\u884c\u7f16\u8bd1"
        },
        {
            "location": "/introduction/softwares/#_3",
            "text": "\u9996\u5148\u6253\u5f00 lemon \u9009\u62e9\u65b0\u5efa\u8bd5\u9898\uff0c\u800c\u540e\u6253\u5f00\u65b0\u5efa\u8bd5\u9898\u7684\u6587\u4ef6\u5939  \u9898\u76ee\u548c\u6570\u636e\u5e94\u8be5\u5982\u4ee5\u4e0b\u683c\u5f0f\u6240\u793a \u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 gendata.py\n\u2502   \u251c\u2500\u2500 product\n\u2502   \u2502   \u251c\u2500\u2500 product100.in\n\u2502   \u2502   \u251c\u2500\u2500 product100.out\n\u2502   \u2502   \u251c\u2500\u2500 product10.in\n\u2502   \u2502   \u251c\u2500\u2500 product10.out\n\u2502   \u2502   \u251c\u2500\u2500 product11.in\n...  \u5f53\u6240\u6709\u8bd5\u9898\u6dfb\u52a0\u5b8c\u6210\u540e\uff0c\u56de\u5230 lemon \u9009\u62e9\u81ea\u52a8\u6dfb\u52a0\u8bd5\u9898  \u6b64\u65f6\u4f60\u7684\u9898\u76ee\u548c\u6570\u636e\u70b9\u5e94\u8be5\u90fd\u663e\u793a\u5728 lemon \u5f53\u4e2d\u4e86",
            "title": "\u6570\u636e\u683c\u5f0f"
        },
        {
            "location": "/introduction/softwares/#cena",
            "text": "\u8001\u724c\u8bc4\u6d4b\u8f6f\u4ef6",
            "title": "Cena"
        },
        {
            "location": "/introduction/softwares/#arbiter",
            "text": "NOI Linux \u5fa1\u7528\u8bc4\u6d4b\u5de5\u5177",
            "title": "Arbiter"
        },
        {
            "location": "/basic/",
            "text": "\u57fa\u7840\u90e8\u5206\u7b80\u4ecb\n\u00b6\n\n\n\u4ecb\u7ecd\u4e00\u4e9b\u57fa\u7840\u77e5\u8bc6\uff0c\u4e3a\u4e4b\u540e\u7684\u8fdb\u9636\u5185\u5bb9\u505a\u94fa\u57ab\u3002\n\n\n\n\n \u679a\u4e3e\n\n\n \u6a21\u62df\n\n\n \u5206\u6cbb\n\n\n \u8d2a\u5fc3\n\n\n \u6392\u5e8f\n\n\n \u8868\u8fbe\u5f0f\u6c42\u503c\n\n\n \u4e8c\u5206\n\n\n \u6784\u9020",
            "title": "\u57fa\u7840\u90e8\u5206\u7b80\u4ecb"
        },
        {
            "location": "/basic/#_1",
            "text": "\u4ecb\u7ecd\u4e00\u4e9b\u57fa\u7840\u77e5\u8bc6\uff0c\u4e3a\u4e4b\u540e\u7684\u8fdb\u9636\u5185\u5bb9\u505a\u94fa\u57ab\u3002    \u679a\u4e3e   \u6a21\u62df   \u5206\u6cbb   \u8d2a\u5fc3   \u6392\u5e8f   \u8868\u8fbe\u5f0f\u6c42\u503c   \u4e8c\u5206   \u6784\u9020",
            "title": "\u57fa\u7840\u90e8\u5206\u7b80\u4ecb"
        },
        {
            "location": "/basic/enumerate/",
            "text": "\u679a\u4e3e\u662f\u57fa\u4e8e\u5df2\u6709\u77e5\u8bc6\u6765\u731c\u6d4b\u7b54\u6848\u7684\u4e00\u79cd\u95ee\u9898\u6c42\u89e3\u7b56\u7565\u3002\n\n\n\n\n\u4f8b\u9898\n\n\n\u6c42\u5c0f\u4e8e N \u7684\u6700\u5927\u7d20\u6570\n\n\n\n\n\u627e\u4e0d\u5230\u5408\u9002\u7684\u4e00\u4e2a\u6570\u5b66\u516c\u5f0f\u6765\u76f4\u63a5\u8ba1\u7b97\u7b54\u6848\uff0c\u4e0d\u59a8\u4f9d\u6b21\u5c1d\u8bd5\u4e00\u4e2a\u6570\u662f\u5426\u662f\u7b54\u6848\u3002\n\n\n\u5982\u679c\u6211\u4eec\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u5c0f\u4e8e N \u7684\u6570\uff0c\u90a3\u4e48\u539f\u95ee\u9898\u8f6c\u5316\u4e3a\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u4e0d\u662f\u7d20\u6570\u3002\n\n\n\u6ce8\u610f\u5230\u7d20\u6570\u7684\u6027\u8d28\u8981\u6c42\u4e0d\u80fd\u88ab 1 \u548c\u5b83\u672c\u8eab\u4e4b\u5916\u7684\u6570\u6574\u9664\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u4e8e\u5224\u65ad\u3002\n\n\n\u679a\u4e3e\u7684\u601d\u60f3\u662f\u4e0d\u65ad\u5730\u731c\u6d4b\uff0c\u4ece\u53ef\u80fd\u7684\u96c6\u5408\u4e2d\u4e00\u4e00\u5c1d\u8bd5\uff0c\u7136\u540e\u518d\u5224\u65ad\u9898\u76ee\u7684\u6761\u4ef6\u662f\u5426\u6210\u7acb\u3002\n\n\n\u7ed9\u51fa\u89e3\u7a7a\u95f4\n\u00b6\n\n\n\u5efa\u7acb\u7b80\u4ecb\u7684\u6570\u5b66\u6a21\u578b\u3002\n\n\n\u679a\u4e3e\u7684\u65f6\u5019\u8981\u60f3\u6e05\u695a\u53ef\u80fd\u7684\u60c5\u51b5\u662f\u4ec0\u4e48\uff0c\u8981\u679a\u4e3e\u54ea\u4e9b\u8981\u7d20\uff1f\n\n\n\u51cf\u5c11\u679a\u4e3e\u7684\u7a7a\u95f4\n\u00b6\n\n\n\u679a\u4e3e\u7684\u8303\u56f4\u662f\u4ec0\u4e48\uff1f\u662f\u6240\u6709\u7684\u5185\u5bb9\u90fd\u9700\u8981\u679a\u4e3e\u5417\uff1f\n\n\n\u5728\u7528\u679a\u4e3e\u6cd5\u89e3\u51b3\u95ee\u9898\u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u8981\u60f3\u6e05\u695a\u8fd9\u4e24\u4ef6\u4e8b\uff0c\u5426\u5219\u4f1a\u5e26\u6765\u4e0d\u5fc5\u8981\u7684\u65f6\u95f4\u5f00\u9500\u3002\n\n\n\n\n\u4f8b\u9898\n\n\n\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u6570\u4e92\u4e0d\u76f8\u540c\uff0c\u6c42\u5176\u4e2d\u548c\u4e3a 0 \u7684\u6570\u5bf9\u7684\u4e2a\u6570\n\n\n\n\n\u679a\u4e3e\u4e24\u4e2a\u6570\u7684\u4ee3\u7801\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u5199\u51fa\u6765\u3002\n\n\nfor\n \n(\nint\n \ni\n \n=\n \n0\n;\n \ni\n \n<\n \nn\n;\n \n++\ni\n)\n\n  \nfor\n \n(\nint\n \nj\n \n=\n \n0\n;\n \nj\n \n<\n \nn\n;\n \n++\nj\n)\n\n    \nif\n \n(\na\n[\ni\n]\n \n+\n \na\n[\nj\n]\n \n==\n \n0\n)\n \n++\nans\n;\n\n\n\n\n\n\u6211\u4eec\u6765\u770b\u770b\u679a\u4e3e\u7684\u8303\u56f4\u5982\u4f55\u4f18\u5316\u3002\u539f\u95ee\u9898\u7684\u7b54\u6848\u7531\u4e24\u90e8\u5206\u6784\u6210\uff0c\u4e24\u4e2a\u6570\u76f8\u7b49\u7684\u60c5\u51b5\u548c\u4e0d\u76f8\u7b49\u7684\u60c5\u51b5\u3002\u76f8\u7b49\u7684\u60c5\u51b5\u53ea\u9700\u8981\u679a\u4e3e\u6bcf\u4e00\u4e2a\u6570\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u5408\u6cd5\u3002\u81f3\u4e8e\u4e0d\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u7531\u4e8e\u9898\u4e2d\u6ca1\u8981\u6c42\u6570\u5bf9\u662f\u6709\u5e8f\u7684\uff0c\u7b54\u6848\u5c31\u662f\u6709\u5e8f\u7684\u60c5\u51b5\u7684\u4e24\u500d\uff08\u8003\u8651\u5982\u679c \n(a, b)\n \u662f\u7b54\u6848\uff0c\u90a3\u4e48 \n(b, a)\n \u4e5f\u662f\u7b54\u6848\uff09\u3002\u6211\u4eec\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\u53ea\u9700\u7edf\u8ba1\u4eba\u4e3a\u8981\u6c42\u6709\u987a\u5e8f\u4e4b\u540e\u7684\u7b54\u6848\uff0c\u6700\u540e\u518d\u4e58\u4e0a 2 \u5c31\u597d\u4e86\u3002\n\n\n\u6211\u4eec\u4e0d\u59a8\u8981\u6c42\u7b2c\u4e00\u4e2a\u6570\u8981\u51fa\u73b0\u5728\u9760\u524d\u7684\u4f4d\u7f6e\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\nfor\n \n(\nint\n \ni\n \n=\n \n0\n;\n \ni\n \n<\n \nn\n;\n \n++\ni\n)\n\n  \nfor\n \n(\nint\n \nj\n \n=\n \n0\n;\n \nj\n \n<\n \ni\n;\n \n++\nj\n)\n\n    \nif\n \n(\na\n[\ni\n]\n \n+\n \na\n[\nj\n]\n \n==\n \n0\n)\n \n++\nans\n;\n\n\n\n\n\n\u4e0d\u96be\u53d1\u73b0\u8fd9\u91cc\u5df2\u7ecf\u51cf\u5c11\u4e86 j \u7684\u679a\u4e3e\u8303\u56f4\uff0c\u51cf\u5c11\u4e86\u8fd9\u6bb5\u4ee3\u7801\u7684\u65f6\u95f4\u5f00\u9500\u3002\n\n\n\u7136\u800c\u8fd9\u5e76\u4e0d\u662f\u6700\u4f18\u7684\u7ed3\u679c\u3002\n\n\n\u4e24\u4e2a\u6570\u662f\u5426\u90fd\u4e00\u5b9a\u8981\u679a\u4e3e\u51fa\u6765\u5462\uff1f\u8fd9\u91cc\u6211\u4eec\u53d1\u73b0\u679a\u4e3e\u5176\u4e2d\u4e00\u4e2a\u6570\u4e4b\u540e\uff0c\u9898\u76ee\u7684\u6761\u4ef6\u5df2\u7ecf\u5e2e\u6211\u4eec\u786e\u5b9a\u4e86\u5176\u4ed6\u7684\u8981\u7d20\uff08\u53e6\u4e00\u4e2a\u6570\uff09\uff0c\u5982\u679c\u80fd\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\u76f4\u63a5\u5224\u65ad\u9898\u76ee\u8981\u6c42\u7684\u90a3\u4e2a\u6570\u662f\u5426\u5b58\u5728\uff0c\u5c31\u53ef\u4ee5\u7701\u6389\u679a\u4e3e\u540e\u4e00\u4e2a\u6570\u7684\u65f6\u95f4\u4e86\u3002\n\n\n// \u8981\u6c42 a \u6570\u7ec4\u4e2d\u7684\u6570\u7684\u7edd\u5bf9\u503c\u90fd\u5c0f\u4e8e MAXN\n\n\nbool\n \nmet\n[\nMAXN\n \n*\n \n2\n];\n\n\n// \u521d\u59cb\u5316 met \u6570\u7ec4\u4e3a 0\uff1b\n\n\nmemset\n(\nmet\n,\n \n0\n,\n \nsizeof\n(\nmet\n));\n\n\nfor\n \n(\nint\n \ni\n \n=\n \n0\n;\n \ni\n \n<\n \nn\n;\n \n++\ni\n)\n \n{\n\n  \nif\n \n(\nmet\n[\n \na\n[\ni\n]\n \n+\n \nMAXN\n \n])\n \n++\nans\n;\n\n  \n// \u4e3a\u4e86\u907f\u514d\u8d1f\u6570\u4e0b\u6807\n\n  \nmet\n[\n \na\n[\ni\n]\n \n+\n \nMAXN\n \n]\n \n=\n \n1\n;\n\n\n}\n\n\n\n\n\n\u9009\u62e9\u5408\u9002\u7684\u679a\u4e3e\u987a\u5e8f\n\u00b6\n\n\n\u6bd4\u5982\u7b2c\u4e00\u4e2a\u4f8b\u9898\u4e2d\u8981\u6c42\u7684\u662f\u6700\u5927\u7684\u7b26\u5408\u6761\u4ef6\u7684\u7d20\u6570\u3002\u81ea\u7136\u662f\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u6bd4\u8f83\u5408\u9002\u3002",
            "title": "\u679a\u4e3e"
        },
        {
            "location": "/basic/enumerate/#_1",
            "text": "\u5efa\u7acb\u7b80\u4ecb\u7684\u6570\u5b66\u6a21\u578b\u3002  \u679a\u4e3e\u7684\u65f6\u5019\u8981\u60f3\u6e05\u695a\u53ef\u80fd\u7684\u60c5\u51b5\u662f\u4ec0\u4e48\uff0c\u8981\u679a\u4e3e\u54ea\u4e9b\u8981\u7d20\uff1f",
            "title": "\u7ed9\u51fa\u89e3\u7a7a\u95f4"
        },
        {
            "location": "/basic/enumerate/#_2",
            "text": "\u679a\u4e3e\u7684\u8303\u56f4\u662f\u4ec0\u4e48\uff1f\u662f\u6240\u6709\u7684\u5185\u5bb9\u90fd\u9700\u8981\u679a\u4e3e\u5417\uff1f  \u5728\u7528\u679a\u4e3e\u6cd5\u89e3\u51b3\u95ee\u9898\u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u8981\u60f3\u6e05\u695a\u8fd9\u4e24\u4ef6\u4e8b\uff0c\u5426\u5219\u4f1a\u5e26\u6765\u4e0d\u5fc5\u8981\u7684\u65f6\u95f4\u5f00\u9500\u3002   \u4f8b\u9898  \u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u6570\u4e92\u4e0d\u76f8\u540c\uff0c\u6c42\u5176\u4e2d\u548c\u4e3a 0 \u7684\u6570\u5bf9\u7684\u4e2a\u6570   \u679a\u4e3e\u4e24\u4e2a\u6570\u7684\u4ee3\u7801\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u5199\u51fa\u6765\u3002  for   ( int   i   =   0 ;   i   <   n ;   ++ i ) \n   for   ( int   j   =   0 ;   j   <   n ;   ++ j ) \n     if   ( a [ i ]   +   a [ j ]   ==   0 )   ++ ans ;   \u6211\u4eec\u6765\u770b\u770b\u679a\u4e3e\u7684\u8303\u56f4\u5982\u4f55\u4f18\u5316\u3002\u539f\u95ee\u9898\u7684\u7b54\u6848\u7531\u4e24\u90e8\u5206\u6784\u6210\uff0c\u4e24\u4e2a\u6570\u76f8\u7b49\u7684\u60c5\u51b5\u548c\u4e0d\u76f8\u7b49\u7684\u60c5\u51b5\u3002\u76f8\u7b49\u7684\u60c5\u51b5\u53ea\u9700\u8981\u679a\u4e3e\u6bcf\u4e00\u4e2a\u6570\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u5408\u6cd5\u3002\u81f3\u4e8e\u4e0d\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u7531\u4e8e\u9898\u4e2d\u6ca1\u8981\u6c42\u6570\u5bf9\u662f\u6709\u5e8f\u7684\uff0c\u7b54\u6848\u5c31\u662f\u6709\u5e8f\u7684\u60c5\u51b5\u7684\u4e24\u500d\uff08\u8003\u8651\u5982\u679c  (a, b)  \u662f\u7b54\u6848\uff0c\u90a3\u4e48  (b, a)  \u4e5f\u662f\u7b54\u6848\uff09\u3002\u6211\u4eec\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\u53ea\u9700\u7edf\u8ba1\u4eba\u4e3a\u8981\u6c42\u6709\u987a\u5e8f\u4e4b\u540e\u7684\u7b54\u6848\uff0c\u6700\u540e\u518d\u4e58\u4e0a 2 \u5c31\u597d\u4e86\u3002  \u6211\u4eec\u4e0d\u59a8\u8981\u6c42\u7b2c\u4e00\u4e2a\u6570\u8981\u51fa\u73b0\u5728\u9760\u524d\u7684\u4f4d\u7f6e\u3002\u4ee3\u7801\u5982\u4e0b\uff1a  for   ( int   i   =   0 ;   i   <   n ;   ++ i ) \n   for   ( int   j   =   0 ;   j   <   i ;   ++ j ) \n     if   ( a [ i ]   +   a [ j ]   ==   0 )   ++ ans ;   \u4e0d\u96be\u53d1\u73b0\u8fd9\u91cc\u5df2\u7ecf\u51cf\u5c11\u4e86 j \u7684\u679a\u4e3e\u8303\u56f4\uff0c\u51cf\u5c11\u4e86\u8fd9\u6bb5\u4ee3\u7801\u7684\u65f6\u95f4\u5f00\u9500\u3002  \u7136\u800c\u8fd9\u5e76\u4e0d\u662f\u6700\u4f18\u7684\u7ed3\u679c\u3002  \u4e24\u4e2a\u6570\u662f\u5426\u90fd\u4e00\u5b9a\u8981\u679a\u4e3e\u51fa\u6765\u5462\uff1f\u8fd9\u91cc\u6211\u4eec\u53d1\u73b0\u679a\u4e3e\u5176\u4e2d\u4e00\u4e2a\u6570\u4e4b\u540e\uff0c\u9898\u76ee\u7684\u6761\u4ef6\u5df2\u7ecf\u5e2e\u6211\u4eec\u786e\u5b9a\u4e86\u5176\u4ed6\u7684\u8981\u7d20\uff08\u53e6\u4e00\u4e2a\u6570\uff09\uff0c\u5982\u679c\u80fd\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\u76f4\u63a5\u5224\u65ad\u9898\u76ee\u8981\u6c42\u7684\u90a3\u4e2a\u6570\u662f\u5426\u5b58\u5728\uff0c\u5c31\u53ef\u4ee5\u7701\u6389\u679a\u4e3e\u540e\u4e00\u4e2a\u6570\u7684\u65f6\u95f4\u4e86\u3002  // \u8981\u6c42 a \u6570\u7ec4\u4e2d\u7684\u6570\u7684\u7edd\u5bf9\u503c\u90fd\u5c0f\u4e8e MAXN  bool   met [ MAXN   *   2 ];  // \u521d\u59cb\u5316 met \u6570\u7ec4\u4e3a 0\uff1b  memset ( met ,   0 ,   sizeof ( met ));  for   ( int   i   =   0 ;   i   <   n ;   ++ i )   { \n   if   ( met [   a [ i ]   +   MAXN   ])   ++ ans ; \n   // \u4e3a\u4e86\u907f\u514d\u8d1f\u6570\u4e0b\u6807 \n   met [   a [ i ]   +   MAXN   ]   =   1 ;  }",
            "title": "\u51cf\u5c11\u679a\u4e3e\u7684\u7a7a\u95f4"
        },
        {
            "location": "/basic/enumerate/#_3",
            "text": "\u6bd4\u5982\u7b2c\u4e00\u4e2a\u4f8b\u9898\u4e2d\u8981\u6c42\u7684\u662f\u6700\u5927\u7684\u7b26\u5408\u6761\u4ef6\u7684\u7d20\u6570\u3002\u81ea\u7136\u662f\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u6bd4\u8f83\u5408\u9002\u3002",
            "title": "\u9009\u62e9\u5408\u9002\u7684\u679a\u4e3e\u987a\u5e8f"
        },
        {
            "location": "/basic/simulate/",
            "text": "\u6a21\u62df\u3002\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u7528\u8ba1\u7b97\u673a\u6765\u6a21\u62df\u9898\u76ee\u4e2d\u8981\u6c42\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982 NOIP 2014 \u7684 \n\u751f\u6d3b\u5927\u7206\u70b8\u7248\u77f3\u5934\u526a\u5200\u5e03\n\uff0c\u53ea\u9700\u8981\u6309\u7167\u9898\u9762\u7684\u610f\u601d\u6765\u5199\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\n\u5f53\u7136\uff0c\u6a21\u62df\u4e00\u822c\u4e5f\u4e0d\u662f\u5f88\u597d\u5199\uff0c\u53c2\u89c1\u7ecf\u5178\u9898\u76ee \n\u9b54\u517d\u4e16\u754c\n \u548c \n\u732a\u56fd\u6740\n\u3002",
            "title": "\u6a21\u62df"
        },
        {
            "location": "/basic/divide-and-conquer/",
            "text": "\u9012\u5f52\n\u00b6\n\n\n\u4ecb\u7ecd\u5206\u6cbb\u4e4b\u524d\uff0c\u9996\u5148\u8981\u5f04\u6e05\u695a \n\u9012\u5f52\n \u8fd9\u4e2a\u6982\u5ff5\u3002\n\n\n\u9012\u5f52\u7684\u57fa\u672c\u601d\u60f3\u662f\u67d0\u4e2a\u51fd\u6570\u76f4\u63a5\u6216\u8005\u95f4\u63a5\u5730\u8c03\u7528\u81ea\u8eab\uff0c\u8fd9\u6837\u5c31\u628a\u539f\u95ee\u9898\u7684\u6c42\u89e3\u8f6c\u6362\u4e3a\u8bb8\u591a\u6027\u8d28\u76f8\u540c\u4f46\u662f\u89c4\u6a21\u66f4\u5c0f\u7684\u5b50\u95ee\u9898\u3002\u6211\u4eec\u53ea\u9700\u8981\u5173\u6ce8\u5982\u4f55\u628a\u539f\u95ee\u9898\u5212\u5206\u6210\u7b26\u5408\u6761\u4ef6\u7684\u5b50\u95ee\u9898\uff0c\u800c\u4e0d\u9700\u8981\u53bb\u7814\u7a76\u8fd9\u4e2a\u5b50\u95ee\u9898\u662f\u5982\u4f55\u88ab\u89e3\u51b3\u7684\u3002\n\n\n\u9012\u5f52\u548c\u679a\u4e3e\u7684\u533a\u522b\u5728\u4e8e\uff1a\u679a\u4e3e\u662f\u6a2a\u5411\u5730\u628a\u95ee\u9898\u5212\u5206\uff0c\u7136\u540e\u4f9d\u6b21\u6c42\u89e3\u5b50\u95ee\u9898\uff0c\u800c\u9012\u5f52\u662f\u628a\u95ee\u9898\u9010\u7ea7\u5206\u89e3\uff0c\u662f\u7eb5\u5411\u7684\u62c6\u5206\u3002\n\n\n\u5728\u7528\u9012\u5f52\u601d\u60f3\u89e3\u9898\u7684\u65f6\u5019\uff0c\u8981\u8003\u8651\u4e09\u4e2a\u8981\u7d20\u3002\n\n\n\u9012\u5f52\u5f0f\n\u00b6\n\n\n\u5177\u4f53\u662f\u5982\u4f55\u5730\u5c06\u539f\u95ee\u9898\u5212\u5206\u4e3a\u5b50\u95ee\u9898\uff1f\n\n\n\u9012\u5f52\u51fa\u53e3\n\u00b6\n\n\n\u7ec8\u6b62\u7684\u6761\u4ef6\u662f\u4ec0\u4e48\uff1f\u6362\u8a00\u4e4b\uff0c\u6700\u5c0f\u7684\u5b50\u95ee\u9898\u662f\u600e\u4e48\u6c42\u89e3\u7684\u3002\n\n\n\u51fa\u53e3\u53ef\u4ee5\u4e0d\u6b62\u4e00\u4e2a\u3002\n\n\n\u754c\u51fd\u6570\n\u00b6\n\n\n\u6211\u4eec\u7528\u4e00\u4e2a\u51fd\u6570\u6765\u8868\u793a\u95ee\u9898\u89c4\u6a21\u53d8\u5316\uff0c\u8fd9\u4e2a\u51fd\u6570\u9700\u8981\u4fdd\u8bc1\u9012\u5f52\u7684\u6761\u4ef6\u662f\u5728\u50cf\u51fa\u53e3\u6761\u4ef6\u9760\u62e2\u3002\n\n\n\u5206\u6cbb\n\u00b6\n\n\n\u5206\u6cbb\u662f\u4e00\u79cd\u6781\u4e3a\u91cd\u8981\u7684\u601d\u60f3\u3002\u987e\u540d\u601d\u4e49\uff0c\u5206\u800c\u6cbb\u4e4b\uff0c\u5c31\u662f\u628a\u5927\u95ee\u9898\u5316\u5c0f\uff0c\u518d\u5404\u4e2a\u51fb\u7834\u7684\u8fc7\u7a0b\u3002\n\n\n\n\n\u4f8b\u9898\n\n\n\u6c42\u6570\u5217\u4e2d\u6709\u591a\u5c11\u4e2a\u9006\u5e8f\u5bf9\uff0c\u6240\u8c13\u9006\u5e8f\u5bf9\uff0c\u662f\u6ee1\u8db3 \ni < j\ni < j\n \u800c\u4e14 \na[i] > a[j]\na[i] > a[j]\n \u7684\u6570\u5bf9 \n(i, j)\n(i, j)\n \u7684\u4e2a\u6570\u3002\n\n\n\n\n\u8003\u8651\u628a\u6570\u5217\u7b49\u5206\u6210\u4e24\u90e8\u5206\uff0c\u90a3\u4e48\u539f\u6570\u5217\u7684\u9006\u5e8f\u5bf9\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\u4e00\u79cd\u662f\u4e24\u4e2a\u6570\u5b8c\u5168\u5305\u542b\u5728\u67d0\u4e00\u4fa7\u7684\u5b50\u6570\u5217\u4e2d\uff0c\u53e6\u4e00\u79cd\u662f\u4e24\u4e2a\u6570\u4e00\u5de6\u4e00\u53f3\u88ab\u5206\u5f00\u4e86\u3002\n\n\n\u4e0d\u96be\u53d1\u73b0\u524d\u8005\u53ea\u9700\u8981\u9012\u5f52\u5730\u6c42\u51fa\uff0c\u540e\u8005\u53ea\u9700\u8981\u5bf9\u4e8e\u5de6\u4fa7\u7684\u6bcf\u4e2a\u6570\uff0c\u7edf\u8ba1\u53f3\u4fa7\u6709\u591a\u5c11\u4e2a\u6bd4\u5b83\u5c0f\u7684\u3002",
            "title": "\u5206\u6cbb"
        },
        {
            "location": "/basic/divide-and-conquer/#_1",
            "text": "\u4ecb\u7ecd\u5206\u6cbb\u4e4b\u524d\uff0c\u9996\u5148\u8981\u5f04\u6e05\u695a  \u9012\u5f52  \u8fd9\u4e2a\u6982\u5ff5\u3002  \u9012\u5f52\u7684\u57fa\u672c\u601d\u60f3\u662f\u67d0\u4e2a\u51fd\u6570\u76f4\u63a5\u6216\u8005\u95f4\u63a5\u5730\u8c03\u7528\u81ea\u8eab\uff0c\u8fd9\u6837\u5c31\u628a\u539f\u95ee\u9898\u7684\u6c42\u89e3\u8f6c\u6362\u4e3a\u8bb8\u591a\u6027\u8d28\u76f8\u540c\u4f46\u662f\u89c4\u6a21\u66f4\u5c0f\u7684\u5b50\u95ee\u9898\u3002\u6211\u4eec\u53ea\u9700\u8981\u5173\u6ce8\u5982\u4f55\u628a\u539f\u95ee\u9898\u5212\u5206\u6210\u7b26\u5408\u6761\u4ef6\u7684\u5b50\u95ee\u9898\uff0c\u800c\u4e0d\u9700\u8981\u53bb\u7814\u7a76\u8fd9\u4e2a\u5b50\u95ee\u9898\u662f\u5982\u4f55\u88ab\u89e3\u51b3\u7684\u3002  \u9012\u5f52\u548c\u679a\u4e3e\u7684\u533a\u522b\u5728\u4e8e\uff1a\u679a\u4e3e\u662f\u6a2a\u5411\u5730\u628a\u95ee\u9898\u5212\u5206\uff0c\u7136\u540e\u4f9d\u6b21\u6c42\u89e3\u5b50\u95ee\u9898\uff0c\u800c\u9012\u5f52\u662f\u628a\u95ee\u9898\u9010\u7ea7\u5206\u89e3\uff0c\u662f\u7eb5\u5411\u7684\u62c6\u5206\u3002  \u5728\u7528\u9012\u5f52\u601d\u60f3\u89e3\u9898\u7684\u65f6\u5019\uff0c\u8981\u8003\u8651\u4e09\u4e2a\u8981\u7d20\u3002",
            "title": "\u9012\u5f52"
        },
        {
            "location": "/basic/divide-and-conquer/#_2",
            "text": "\u5177\u4f53\u662f\u5982\u4f55\u5730\u5c06\u539f\u95ee\u9898\u5212\u5206\u4e3a\u5b50\u95ee\u9898\uff1f",
            "title": "\u9012\u5f52\u5f0f"
        },
        {
            "location": "/basic/divide-and-conquer/#_3",
            "text": "\u7ec8\u6b62\u7684\u6761\u4ef6\u662f\u4ec0\u4e48\uff1f\u6362\u8a00\u4e4b\uff0c\u6700\u5c0f\u7684\u5b50\u95ee\u9898\u662f\u600e\u4e48\u6c42\u89e3\u7684\u3002  \u51fa\u53e3\u53ef\u4ee5\u4e0d\u6b62\u4e00\u4e2a\u3002",
            "title": "\u9012\u5f52\u51fa\u53e3"
        },
        {
            "location": "/basic/divide-and-conquer/#_4",
            "text": "\u6211\u4eec\u7528\u4e00\u4e2a\u51fd\u6570\u6765\u8868\u793a\u95ee\u9898\u89c4\u6a21\u53d8\u5316\uff0c\u8fd9\u4e2a\u51fd\u6570\u9700\u8981\u4fdd\u8bc1\u9012\u5f52\u7684\u6761\u4ef6\u662f\u5728\u50cf\u51fa\u53e3\u6761\u4ef6\u9760\u62e2\u3002",
            "title": "\u754c\u51fd\u6570"
        },
        {
            "location": "/basic/divide-and-conquer/#_5",
            "text": "\u5206\u6cbb\u662f\u4e00\u79cd\u6781\u4e3a\u91cd\u8981\u7684\u601d\u60f3\u3002\u987e\u540d\u601d\u4e49\uff0c\u5206\u800c\u6cbb\u4e4b\uff0c\u5c31\u662f\u628a\u5927\u95ee\u9898\u5316\u5c0f\uff0c\u518d\u5404\u4e2a\u51fb\u7834\u7684\u8fc7\u7a0b\u3002   \u4f8b\u9898  \u6c42\u6570\u5217\u4e2d\u6709\u591a\u5c11\u4e2a\u9006\u5e8f\u5bf9\uff0c\u6240\u8c13\u9006\u5e8f\u5bf9\uff0c\u662f\u6ee1\u8db3  i < j i < j  \u800c\u4e14  a[i] > a[j] a[i] > a[j]  \u7684\u6570\u5bf9  (i, j) (i, j)  \u7684\u4e2a\u6570\u3002   \u8003\u8651\u628a\u6570\u5217\u7b49\u5206\u6210\u4e24\u90e8\u5206\uff0c\u90a3\u4e48\u539f\u6570\u5217\u7684\u9006\u5e8f\u5bf9\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\u4e00\u79cd\u662f\u4e24\u4e2a\u6570\u5b8c\u5168\u5305\u542b\u5728\u67d0\u4e00\u4fa7\u7684\u5b50\u6570\u5217\u4e2d\uff0c\u53e6\u4e00\u79cd\u662f\u4e24\u4e2a\u6570\u4e00\u5de6\u4e00\u53f3\u88ab\u5206\u5f00\u4e86\u3002  \u4e0d\u96be\u53d1\u73b0\u524d\u8005\u53ea\u9700\u8981\u9012\u5f52\u5730\u6c42\u51fa\uff0c\u540e\u8005\u53ea\u9700\u8981\u5bf9\u4e8e\u5de6\u4fa7\u7684\u6bcf\u4e2a\u6570\uff0c\u7edf\u8ba1\u53f3\u4fa7\u6709\u591a\u5c11\u4e2a\u6bd4\u5b83\u5c0f\u7684\u3002",
            "title": "\u5206\u6cbb"
        },
        {
            "location": "/basic/greedy/",
            "text": "\u8d2a\u5fc3\u7b97\u6cd5\u987e\u540d\u601d\u4e49\u5c31\u662f\u7528\u8ba1\u7b97\u673a\u6765\u6a21\u62df\u4e00\u4e2a\u201c\u8d2a\u5fc3\u201d\u7684\u4eba\u505a\u51fa\u51b3\u7b56\u7684\u8fc7\u7a0b\u3002\n\n\n\u8fd9\u4e2a\u4eba\u6bcf\u4e00\u6b65\u884c\u52a8\u603b\u662f\u6309\u67d0\u79cd\u6307\u6807\u9009\u53d6\u6700\u4f18\u7684\u64cd\u4f5c\uff0c\n\n\n\u4ed6\u603b\u662f\u53ea\u770b\u773c\u524d\uff0c\u5e76\u4e0d\u8003\u8651\u4ee5\u540e\u53ef\u80fd\u9020\u6210\u7684\u5f71\u54cd\u3002\n\n\n\u53ef\u60f3\u800c\u77e5\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u7684\u65f6\u5019\u8d2a\u5fc3\u6cd5\u90fd\u80fd\u83b7\u5f97\u6700\u4f18\u89e3\uff0c\u6240\u4ee5\u4e00\u822c\u4f7f\u7528\u8d2a\u5fc3\u6cd5\u7684\u65f6\u5019\uff0c\u90fd\u8981\u786e\u4fdd\u81ea\u5df1\u80fd\u8bc1\u660e\u5176\u6b63\u786e\u6027\u3002\n\n\n\u8bc1\u660e\u65b9\u6cd5\n\u00b6\n\n\n\u53ef\u4ee5\u4ece\u201c\u5982\u679c\u4ea4\u6362\u65b9\u6848\u4e2d\u76f8\u90bb\u7684\u4e24\u4e2a\u5143\u7d20\u4f1a\u53d1\u751f\u4ec0\u4e48\u201d\u6765\u8003\u8651\uff0c\u5982\u679c\u7b54\u6848\u4e0d\u4f1a\u53d8\u5f97\u66f4\u597d\uff0c\u90a3\u4e48\u53ef\u4ee5\u53d1\u73b0\u76ee\u524d\u7684\u89e3\u5df2\u7ecf\u662f\u6700\u4f18\u89e3\u4e86\u3002",
            "title": "\u8d2a\u5fc3"
        },
        {
            "location": "/basic/greedy/#_1",
            "text": "\u53ef\u4ee5\u4ece\u201c\u5982\u679c\u4ea4\u6362\u65b9\u6848\u4e2d\u76f8\u90bb\u7684\u4e24\u4e2a\u5143\u7d20\u4f1a\u53d1\u751f\u4ec0\u4e48\u201d\u6765\u8003\u8651\uff0c\u5982\u679c\u7b54\u6848\u4e0d\u4f1a\u53d8\u5f97\u66f4\u597d\uff0c\u90a3\u4e48\u53ef\u4ee5\u53d1\u73b0\u76ee\u524d\u7684\u89e3\u5df2\u7ecf\u662f\u6700\u4f18\u89e3\u4e86\u3002",
            "title": "\u8bc1\u660e\u65b9\u6cd5"
        },
        {
            "location": "/basic/sort/",
            "text": "\u6392\u5e8f\u7b97\u6cd5\u591a\u79cd\u591a\u6837\uff0c\u6027\u8d28\u4e5f\u5927\u591a\u4e0d\u540c\u3002\n\n\n\u7a33\u5b9a\u6027\n\u00b6\n\n\n\u7a33\u5b9a\u6027\u662f\u6307\u76f8\u7b49\u7684\u5143\u7d20\u7ecf\u8fc7\u6392\u5e8f\u4e4b\u540e\u76f8\u5bf9\u987a\u5e8f\u662f\u5426\u53d1\u751f\u4e86\u6539\u53d8\u3002\n\n\n\u6211\u4eec\u5e38\u7528\u7684\u5f52\u5e76\u6392\u5e8f\u662f\u7a33\u5b9a\u6392\u5e8f\uff0c\u800c\u5feb\u901f\u6392\u5e8f\u4e0d\u662f\u7a33\u5b9a\u6392\u5e8f\u3002\n\n\n\u65f6\u95f4\u590d\u6742\u5ea6\n\u00b6\n\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u7528\u6765\u8861\u91cf\u4e00\u4e2a\u7b97\u6cd5\u7684\u8fd0\u884c\u65f6\u95f4\u548c\u8f93\u5165\u89c4\u6a21\u7684\u5173\u7cfb\uff0c\u7c7b\u4f3c\u7684\u6709\u7a7a\u95f4\u590d\u6742\u5ea6\uff0c\u7528\u6765\u63cf\u8ff0\u7b97\u6cd5\u7684\u7a7a\u95f4\u6d88\u8017\u7684\u89c4\u6a21\u3002\n\n\n\u7b80\u5355\u8ba1\u7b97\u590d\u6742\u5ea6\u7684\u65b9\u6cd5\u4e00\u822c\u662f\u7edf\u8ba1\u201c\u7b80\u5355\u64cd\u4f5c\u201d\u7684\u6267\u884c\u6b21\u6570\uff0c\u6709\u65f6\u5019\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6570\u5faa\u73af\u7684\u5c42\u6570\u6765\u8fd1\u4f3c\u4f30\u8ba1\u3002\n\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u4e3a\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u3001\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u3001\u6700\u597d\u65f6\u95f4\u590d\u6742\u5ea6\u7b49\u7b49\u3002OI \u7ade\u8d5b\u4e2d\u8981\u8003\u8651\u7684\u4e00\u822c\u662f\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u56e0\u4e3a\u5b83\u4ee3\u8868\u7684\u662f\u7b97\u6cd5\u8fd0\u884c\u6c34\u5e73\u7684\u4e0b\u754c\uff0c\u5728\u8bc4\u6d4b\u4e2d\u4e0d\u4f1a\u51fa\u73b0\u66f4\u5dee\u7684\u7ed3\u679c\u4e86\u3002\n\n\n\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \nO(nlogn)\nO(nlogn)\n \u7684\u3002\n\n\n\u5f53\u7136\u4e5f\u6709\u4e0d\u662f \nO(nlogn)\nO(nlogn)\n \u7684\uff0c\u6876\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \nO(n)\nO(n)\n\uff0c\u4f46\u662f\u5b83\u662f\u5728\u201c\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\u201d\uff0c\u5b83\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u662f \nO(\u6240\u6392\u5e8f\u7684\u6700\u5927\u6570)\nO(\u6240\u6392\u5e8f\u7684\u6700\u5927\u6570)\n\n\n\u5f52\u5e76\u6392\u5e8f\n\u00b6\n\n\n\u5feb\u901f\u6392\u5e8f\n\u00b6\n\n\nC++ \u51fd\u6570\u6a21\u677f\u5e93\u5b9e\u73b0\u4e86\u5feb\u901f\u6392\u5e8f\uff0c\u53ef\u4ee5\u67e5\u9605\nstd::sort()\n\n\n\u7528\u6cd5\uff1a\n\n// a[0] .. a[n - 1] \u662f\u653e\u4e86\u5143\u7d20\u7684\n\n\nstd\n::\nsort\n(\na\n,\n \na\n \n+\n \nn\n);\n\n\n// \u8fd9\u53e5\u4ee3\u7801\u76f4\u63a5\u4fee\u6539 a \u6570\u7ec4\u91cc\u7684\u5143\u7d20\u987a\u5e8f\uff0c\u4f7f\u5f97\u73b0\u5728\u5b83\u662f\u4ece\u5c0f\u5230\u5927\u6392\u5217\u7684",
            "title": "\u6392\u5e8f"
        },
        {
            "location": "/basic/sort/#_1",
            "text": "\u7a33\u5b9a\u6027\u662f\u6307\u76f8\u7b49\u7684\u5143\u7d20\u7ecf\u8fc7\u6392\u5e8f\u4e4b\u540e\u76f8\u5bf9\u987a\u5e8f\u662f\u5426\u53d1\u751f\u4e86\u6539\u53d8\u3002  \u6211\u4eec\u5e38\u7528\u7684\u5f52\u5e76\u6392\u5e8f\u662f\u7a33\u5b9a\u6392\u5e8f\uff0c\u800c\u5feb\u901f\u6392\u5e8f\u4e0d\u662f\u7a33\u5b9a\u6392\u5e8f\u3002",
            "title": "\u7a33\u5b9a\u6027"
        },
        {
            "location": "/basic/sort/#_2",
            "text": "\u65f6\u95f4\u590d\u6742\u5ea6\u7528\u6765\u8861\u91cf\u4e00\u4e2a\u7b97\u6cd5\u7684\u8fd0\u884c\u65f6\u95f4\u548c\u8f93\u5165\u89c4\u6a21\u7684\u5173\u7cfb\uff0c\u7c7b\u4f3c\u7684\u6709\u7a7a\u95f4\u590d\u6742\u5ea6\uff0c\u7528\u6765\u63cf\u8ff0\u7b97\u6cd5\u7684\u7a7a\u95f4\u6d88\u8017\u7684\u89c4\u6a21\u3002  \u7b80\u5355\u8ba1\u7b97\u590d\u6742\u5ea6\u7684\u65b9\u6cd5\u4e00\u822c\u662f\u7edf\u8ba1\u201c\u7b80\u5355\u64cd\u4f5c\u201d\u7684\u6267\u884c\u6b21\u6570\uff0c\u6709\u65f6\u5019\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6570\u5faa\u73af\u7684\u5c42\u6570\u6765\u8fd1\u4f3c\u4f30\u8ba1\u3002  \u65f6\u95f4\u590d\u6742\u5ea6\u5206\u4e3a\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u3001\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u3001\u6700\u597d\u65f6\u95f4\u590d\u6742\u5ea6\u7b49\u7b49\u3002OI \u7ade\u8d5b\u4e2d\u8981\u8003\u8651\u7684\u4e00\u822c\u662f\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u56e0\u4e3a\u5b83\u4ee3\u8868\u7684\u662f\u7b97\u6cd5\u8fd0\u884c\u6c34\u5e73\u7684\u4e0b\u754c\uff0c\u5728\u8bc4\u6d4b\u4e2d\u4e0d\u4f1a\u51fa\u73b0\u66f4\u5dee\u7684\u7ed3\u679c\u4e86\u3002  \u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f  O(nlogn) O(nlogn)  \u7684\u3002  \u5f53\u7136\u4e5f\u6709\u4e0d\u662f  O(nlogn) O(nlogn)  \u7684\uff0c\u6876\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f  O(n) O(n) \uff0c\u4f46\u662f\u5b83\u662f\u5728\u201c\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\u201d\uff0c\u5b83\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u662f  O(\u6240\u6392\u5e8f\u7684\u6700\u5927\u6570) O(\u6240\u6392\u5e8f\u7684\u6700\u5927\u6570)",
            "title": "\u65f6\u95f4\u590d\u6742\u5ea6"
        },
        {
            "location": "/basic/sort/#_3",
            "text": "",
            "title": "\u5f52\u5e76\u6392\u5e8f"
        },
        {
            "location": "/basic/sort/#_4",
            "text": "C++ \u51fd\u6570\u6a21\u677f\u5e93\u5b9e\u73b0\u4e86\u5feb\u901f\u6392\u5e8f\uff0c\u53ef\u4ee5\u67e5\u9605 std::sort()  \u7528\u6cd5\uff1a // a[0] .. a[n - 1] \u662f\u653e\u4e86\u5143\u7d20\u7684  std :: sort ( a ,   a   +   n );  // \u8fd9\u53e5\u4ee3\u7801\u76f4\u63a5\u4fee\u6539 a \u6570\u7ec4\u91cc\u7684\u5143\u7d20\u987a\u5e8f\uff0c\u4f7f\u5f97\u73b0\u5728\u5b83\u662f\u4ece\u5c0f\u5230\u5927\u6392\u5217\u7684",
            "title": "\u5feb\u901f\u6392\u5e8f"
        },
        {
            "location": "/basic/expression/",
            "text": "\u8868\u8fbe\u5f0f\u6c42\u503c\u8981\u89e3\u51b3\u7684\u95ee\u9898\u4e00\u822c\u662f\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u8868\u793a\u7684\u8868\u8fbe\u5f0f\uff0c\u8981\u6c42\u8f93\u51fa\u5b83\u7684\u503c\u3002\u5f53\u7136\u4e5f\u6709\u53d8\u79cd\u6bd4\u5982\u8868\u8fbe\u5f0f\u4e2d\u662f\u5426\u5305\u542b\u62ec\u53f7\uff0c\u6307\u6570\u8fd0\u7b97\uff0c\u542b\u591a\u5c11\u53d8\u91cf\uff0c\u5224\u65ad\u591a\u4e2a\u8868\u8fbe\u5f0f\u662f\u5426\u7b49\u4ef7\uff0c\u7b49\u7b49\u3002\n\n\n\u5176\u4e2d\u5224\u65ad\u8868\u8fbe\u5f0f\u7b49\u4ef7\u7684\u90e8\u5206\u4f7f\u7528\u4e86\u62c9\u683c\u6717\u65e5\u63d2\u503c\u6cd5\u7b49\u6570\u5b66\u5de5\u5177\uff0c\u5728\u6b64\u6682\u4e0d\u8fdb\u884c\u5c55\u5f00\u3002\n\n\n\u4e00\u822c\u7684\u601d\u8def\u5206\u4e3a\u4e24\u79cd\uff0c\u4e00\u79cd\u9012\u5f52\u4e00\u79cd\u975e\u9012\u5f52\u3002\n\n\n\u9012\u5f52\n\u00b6\n\n\n\u9012\u5f52\u7684\u65b9\u6cd5\u662f\u628a\u8868\u8fbe\u5f0f\u62c6\u5206\u6210\u8868\u8fbe\u5f0f\u6811\uff08\u6b64\u5904\u5e94\u6709\u56fe\uff09\uff0c\u7136\u540e\u5728\u6811\u7ed3\u6784\u4e0a\u81ea\u5e95\u5411\u4e0a\u8fdb\u884c\u8fd0\u7b97\u3002\n\n\n\u975e\u9012\u5f52\n\u00b6\n\n\n\u975e\u9012\u5f52\u7684\u65b9\u6cd5\u662f\u5b9a\u4e49\u4e24\u4e2a\u6808\u6765\u5206\u522b\u5b58\u50a8\u8fd0\u7b97\u7b26\u548c\u8fd0\u7b97\u6570\u3002\u6bcf\u5f53\u9047\u5230\u4e00\u4e2a\u6570\u76f4\u63a5\u653e\u8fdb\u6570\u7684\u6808\uff1b\u6bcf\u5f53\u9047\u5230\u4e00\u4e2a\u64cd\u4f5c\u7b26\u65f6\uff0c\u8981\u67e5\u627e\u4e4b\u524d\u8fd0\u7b97\u7b26\u6808\u4e2d\u7684\u5143\u7d20\uff0c\u6309\u7167\u9884\u5148\u5b9a\u4e49\u597d\u7684\u4f18\u5148\u7ea7\u6765\u8fdb\u884c\u9002\u5f53\u7684\u5f39\u51fa\u64cd\u4f5c\uff08\u5f39\u51fa\u7684\u540c\u65f6\u6c42\u51fa\u5bf9\u5e94\u7684\u5b50\u8868\u8fbe\u5f0f\u7684\u503c\uff09\u3002",
            "title": "\u8868\u8fbe\u5f0f\u6c42\u503c"
        },
        {
            "location": "/basic/expression/#_1",
            "text": "\u9012\u5f52\u7684\u65b9\u6cd5\u662f\u628a\u8868\u8fbe\u5f0f\u62c6\u5206\u6210\u8868\u8fbe\u5f0f\u6811\uff08\u6b64\u5904\u5e94\u6709\u56fe\uff09\uff0c\u7136\u540e\u5728\u6811\u7ed3\u6784\u4e0a\u81ea\u5e95\u5411\u4e0a\u8fdb\u884c\u8fd0\u7b97\u3002",
            "title": "\u9012\u5f52"
        },
        {
            "location": "/basic/expression/#_2",
            "text": "\u975e\u9012\u5f52\u7684\u65b9\u6cd5\u662f\u5b9a\u4e49\u4e24\u4e2a\u6808\u6765\u5206\u522b\u5b58\u50a8\u8fd0\u7b97\u7b26\u548c\u8fd0\u7b97\u6570\u3002\u6bcf\u5f53\u9047\u5230\u4e00\u4e2a\u6570\u76f4\u63a5\u653e\u8fdb\u6570\u7684\u6808\uff1b\u6bcf\u5f53\u9047\u5230\u4e00\u4e2a\u64cd\u4f5c\u7b26\u65f6\uff0c\u8981\u67e5\u627e\u4e4b\u524d\u8fd0\u7b97\u7b26\u6808\u4e2d\u7684\u5143\u7d20\uff0c\u6309\u7167\u9884\u5148\u5b9a\u4e49\u597d\u7684\u4f18\u5148\u7ea7\u6765\u8fdb\u884c\u9002\u5f53\u7684\u5f39\u51fa\u64cd\u4f5c\uff08\u5f39\u51fa\u7684\u540c\u65f6\u6c42\u51fa\u5bf9\u5e94\u7684\u5b50\u8868\u8fbe\u5f0f\u7684\u503c\uff09\u3002",
            "title": "\u975e\u9012\u5f52"
        },
        {
            "location": "/basic/binary/",
            "text": "\u4e8c\u5206\u641c\u7d22\n\u00b6\n\n\n\u4e8c\u5206\u641c\u7d22\uff0c\u4e5f\u79f0\u6298\u534a\u641c\u7d22\uff0c\u662f\u7528\u6765\u5728\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4\u4e2d\u67e5\u627e\u67d0\u4e00\u5143\u7d20\u7684\u7b97\u6cd5\u3002\n\n\n\u4ee5\u5728\u4e00\u4e2a\u5347\u5e8f\u6570\u7ec4\u4e2d\u67e5\u627e\u4e00\u4e2a\u6570\u4e3a\u4f8b\u3002\n\n\n\u5b83\u6bcf\u6b21\u8003\u5bdf\u6570\u7ec4\u5f53\u524d\u90e8\u5206\u7684\u4e2d\u95f4\u5143\u7d20\uff0c\u5982\u679c\u4e2d\u95f4\u5143\u7d20\u521a\u597d\u662f\u8981\u627e\u7684\uff0c\u5c31\u7ed3\u675f\u641c\u7d22\u8fc7\u7a0b\uff1b\u5982\u679c\u4e2d\u95f4\u5143\u7d20\u5c0f\u4e8e\u6240\u67e5\u627e\u7684\u503c\uff0c\u90a3\u4e48\u5de6\u4fa7\u7684\u53ea\u4f1a\u66f4\u5c0f\uff0c\u4e0d\u4f1a\u6709\u6240\u67e5\u627e\u7684\u5143\u7d20\uff0c\u53ea\u9700\u8981\u5230\u53f3\u4fa7\u53bb\u627e\u5c31\u597d\u4e86\uff1b\u5982\u679c\u4e2d\u95f4\u5143\u7d20\u5927\u4e8e\u6240\u67e5\u627e\u7684\u503c\uff0c\u540c\u7406\uff0c\u53f3\u4fa7\u7684\u53ea\u4f1a\u66f4\u5927\u800c\u4e0d\u4f1a\u6709\u6240\u67e5\u627e\u7684\u5143\u7d20\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5230\u5de6\u4fa7\u53bb\u627e\u3002\n\n\n\u5728\u4e8c\u5206\u641c\u7d22\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u6b21\u90fd\u628a\u67e5\u8be2\u7684\u533a\u95f4\u51cf\u534a\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4\uff0c\u81f3\u591a\u4f1a\u8fdb\u884c \nO(logn)\nO(logn)\n \u6b21\u67e5\u627e\u3002\n\n\nint\n \nbinary_search\n(\nint\n \nstart\n,\n \nint\n \nend\n,\n \nint\n \nkey\n)\n \n{\n\n  \nint\n \nret\n \n=\n \n-\n1\n;\n       \n// \u672a\u641c\u7d22\u5230\u6570\u636e\u8fd4\u56de-1\u4e0b\u6807  \n\n    \nint\n \nmid\n;\n\n    \nwhile\n \n(\nstart\n \n<=\n \nend\n)\n \n{\n\n        \nmid\n \n=\n \nstart\n \n+\n \n(\nend\n \n-\n \nstart\n)\n \n/\n \n2\n;\n \n//\u76f4\u63a5\u5e73\u5747\u53ef\u80fd\u6703\u6ea2\u4f4d\uff0c\u6240\u4ee5\u7528\u6b64\u7b97\u6cd5\n\n        \nif\n \n(\narr\n[\nmid\n]\n \n<\n \nkey\n)\n\n            \nstart\n \n=\n \nmid\n \n+\n \n1\n;\n\n        \nelse\n \nif\n \n(\narr\n[\nmid\n]\n \n>\n \nkey\n)\n\n            \nend\n \n=\n \nmid\n \n-\n \n1\n;\n\n        \nelse\n \n{\n            \n// \u6700\u5f8c\u6aa2\u6e2c\u76f8\u7b49\u662f\u56e0\u70ba\u591a\u6578\u641c\u5c0b\u72c0\u6cc1\u4e0d\u662f\u5927\u65bc\u8981\u4e0d\u5c31\u5c0f\u65bc\n\n            \nret\n \n=\n \nmid\n;\n  \n      \nbreak\n;\n\n    \n}\n\n    \n}\n\n    \nreturn\n \nret\n;\n     \n// \u5355\u4e00\u51fa\u53e3\n\n\n}\n\n\n\n\n\n\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u6709\u5e8f\u662f\u5e7f\u4e49\u7684\u6709\u5e8f\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u5de6\u4fa7\u6216\u8005\u53f3\u4fa7\u90fd\u6ee1\u8db3\u67d0\u4e00\u79cd\u6761\u4ef6\uff0c\u800c\u53e6\u4e00\u4fa7\u90fd\u4e0d\u6ee1\u8db3\u8fd9\u79cd\u6761\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u79cd\u6709\u5e8f\uff08\u5982\u679c\u628a\u6ee1\u8db3\u6761\u4ef6\u770b\u505a 1\uff0c\u4e0d\u6ee1\u8db3\u770b\u505a 0\uff0c\u81f3\u5c11\u5bf9\u4e8e\u8fd9\u4e2a\u6761\u4ef6\u7684\u8fd9\u4e00\u7ef4\u5ea6\u662f\u6709\u5e8f\u7684\uff09\u3002\u6362\u8a00\u4e4b\uff0c\u4e8c\u5206\u641c\u7d22\u6cd5\u53ef\u4ee5\u7528\u6765\u67e5\u627e\u6ee1\u8db3\u67d0\u79cd\u6761\u4ef6\u7684\u6700\u5927 / \u6700\u5c0f\u7684\u503c\u3002\n\n\n\u5982\u679c\u6211\u4eec\u8981\u6c42\u6ee1\u8db3\u67d0\u79cd\u6761\u4ef6\u7684\u6700\u5927\u503c\u7684\u6700\u5c0f\u53ef\u80fd\u60c5\u51b5\uff08\u6700\u5927\u503c\u6700\u5c0f\u5316\uff09\u5462\uff1f\u9996\u5148\u7684\u60f3\u6cd5\u662f\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u8fd9\u4e2a\u4f5c\u4e3a\u7b54\u6848\u7684\u201c\u6700\u5927\u503c\u201d\uff0c\u7136\u540e\u53bb\u5224\u65ad\u662f\u5426\u5408\u6cd5\u3002\u8981\u662f\u8fd9\u4e2a\u7b54\u6848\u662f\u5355\u8c03\u7684\u5c31\u597d\u4e86\uff0c\u90a3\u6837\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u641c\u7d22\u6cd5\u6765\u66f4\u5feb\u5730\u627e\u5230\u7b54\u6848\u3002\n\n\n\u8981\u60f3\u4f7f\u7528\u4e8c\u5206\u641c\u7d22\u6cd5\u6765\u89e3\u8fd9\u79cd\u201c\u6700\u5927\u503c\u6700\u5c0f\u5316\u201d\u7684\u9898\u76ee\uff0c\u9700\u8981\u6ee1\u8db3\u4e00\u4e0b\u4e09\u4e2a\u6761\u4ef6\uff1a\n\n\n\n\n\u7b54\u6848\u5728\u4e00\u4e2a\u56fa\u5b9a\u533a\u95f4\u5185\n\n\n\u53ef\u80fd\u67e5\u627e\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u503c\u4e0d\u662f\u5f88\u5bb9\u6613\uff0c\u4f46\u662f\u8981\u6c42\u80fd\u6bd4\u8f83\u5bb9\u6613\u5730\u5224\u65ad\u67d0\u4e2a\u503c\u662f\u5426\u662f\u7b26\u5408\u6761\u4ef6\u7684\n\n\n\u53ef\u884c\u89e3\u5bf9\u4e8e\u533a\u95f4\u6ee1\u8db3\u4e00\u5b9a\u7684\u5355\u8c03\u6027\u3002\u6362\u8a00\u4e4b\uff0c\u5982\u679c x \u662f\u7b26\u5408\u6761\u4ef6\u7684\uff0c\u90a3\u4e48\u6709 x + 1 \u6216\u8005 x - 1 \u4e5f\u7b26\u5408\u6761\u4ef6\u3002\uff08\u8fd9\u6837\u4e0b\u6765\u5c31\u6ee1\u8db3\u4e86\u4e0a\u9762\u63d0\u5230\u7684\u5355\u8c03\u6027\uff09\n\n\n\n\n\u5f53\u7136\uff0c\u6700\u5c0f\u503c\u6700\u5927\u5316\u662f\u540c\u7406\u7684\u3002\n\n\n\u4e8c\u5206\u6cd5\u628a\u4e00\u4e2a\u5bfb\u627e\u6781\u503c\u7684\u95ee\u9898\u8f6c\u5316\u6210\u4e00\u4e2a\u5224\u5b9a\u7684\u95ee\u9898\uff08\u7528\u4e8c\u5206\u641c\u7d22\u6765\u627e\u8fd9\u4e2a\u6781\u503c\uff09\u3002\u7c7b\u6bd4\u679a\u4e3e\u6cd5\uff0c\u6211\u4eec\u5f53\u65f6\u662f\u679a\u4e3e\u7b54\u6848\u7684\u53ef\u80fd\u60c5\u51b5\uff0c\u73b0\u5728\u7531\u4e8e\u5355\u8c03\u6027\uff0c\u6211\u4eec\u4e0d\u518d\u9700\u8981\u4e00\u4e2a\u4e2a\u679a\u4e3e\uff0c\u5229\u7528\u4e8c\u5206\u7684\u601d\u8def\uff0c\u5c31\u53ef\u4ee5\u7528\u66f4\u4f18\u7684\u65b9\u6cd5\u89e3\u51b3\u201c\u6700\u5927\u503c\u6700\u5c0f\u201d\u3001\u201c\u6700\u5c0f\u503c\u6700\u5927\u201d\u3002\u8fd9\u79cd\u89e3\u6cd5\u4e5f\u6210\u4e3a\u662f\u201c\u4e8c\u5206\u7b54\u6848\u201d\uff0c\u5e38\u89c1\u4e8e\u89e3\u9898\u62a5\u544a\u4e2d\u3002\n\n\n\u4e09\u5206\u6cd5\n\u00b6\n\n\nmid\n \n=\n \n(\nleft\n \n+\n \nright\n)\n \n/\n \n2\n;\n\n\nmidmid\n \n=\n \n(\nmid\n \n+\n \nright\n)\n \n/\n \n2\n;\n \n// \u5bf9\u53f3\u4fa7\u533a\u95f4\u53d6\u534a\n\n\nif\n \n(\ncal\n(\nmid\n)\n \n>\n \ncal\n(\nmidmid\n))\n\n  \nright\n \n=\n \nmidmid\n;\n\n\nelse\n\n  \nleft\n \n=\n \nmid\n;\n\n\n\n\n\n\u4e09\u5206\u6cd5\u53ef\u4ee5\u7528\u6765\u67e5\u627e\u51f8\u51fd\u6570\u7684\u6700\u5927\uff08\u5c0f\uff09\u503c\u3002\n\n\n\u753b\u4e00\u4e0b\u56fe\u597d\u7406\u89e3\u4e00\u4e9b\uff08\u56fe\u5f85\u8865\uff09\n\n\n\n\n\n\n\u5982\u679c mid \u548c midmid \u5728\u6700\u5927\uff08\u5c0f\uff09\u503c\u7684\u540c\u4e00\u4fa7\n\u90a3\u4e48\u7531\u4e8e\u5355\u8c03\u6027\uff0c\u4e00\u5b9a\u662f\u4e8c\u8005\u4e2d\u8f83\u5927\uff08\u5c0f\uff09\u7684\u90a3\u4e2a\u79bb\u6700\u503c\u8fd1\u4e00\u4e9b\uff0c\u8f83\u8fdc\u7684\u90a3\u4e2a\u70b9\u5bf9\u5e94\u7684\u533a\u95f4\u4e0d\u53ef\u80fd\u5305\u542b\u6700\u503c\uff0c\u6240\u4ee5\u53ef\u4ee5\u820d\u5f03\u3002\n\n\n\n\n\n\n\u5982\u679c\u5728\u4e24\u4fa7\n\u7531\u4e8e\u6700\u503c\u5728\u4e8c\u8005\u4e2d\u95f4\uff0c\u6211\u4eec\u820d\u5f03\u4e24\u4fa7\u7684\u4e00\u4e2a\u533a\u95f4\u540e\uff0c\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u6700\u503c\uff0c\u6240\u4ee5\u53ef\u4ee5\u820d\u5f03\u3002",
            "title": "\u4e8c\u5206"
        },
        {
            "location": "/basic/binary/#_1",
            "text": "\u4e8c\u5206\u641c\u7d22\uff0c\u4e5f\u79f0\u6298\u534a\u641c\u7d22\uff0c\u662f\u7528\u6765\u5728\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4\u4e2d\u67e5\u627e\u67d0\u4e00\u5143\u7d20\u7684\u7b97\u6cd5\u3002  \u4ee5\u5728\u4e00\u4e2a\u5347\u5e8f\u6570\u7ec4\u4e2d\u67e5\u627e\u4e00\u4e2a\u6570\u4e3a\u4f8b\u3002  \u5b83\u6bcf\u6b21\u8003\u5bdf\u6570\u7ec4\u5f53\u524d\u90e8\u5206\u7684\u4e2d\u95f4\u5143\u7d20\uff0c\u5982\u679c\u4e2d\u95f4\u5143\u7d20\u521a\u597d\u662f\u8981\u627e\u7684\uff0c\u5c31\u7ed3\u675f\u641c\u7d22\u8fc7\u7a0b\uff1b\u5982\u679c\u4e2d\u95f4\u5143\u7d20\u5c0f\u4e8e\u6240\u67e5\u627e\u7684\u503c\uff0c\u90a3\u4e48\u5de6\u4fa7\u7684\u53ea\u4f1a\u66f4\u5c0f\uff0c\u4e0d\u4f1a\u6709\u6240\u67e5\u627e\u7684\u5143\u7d20\uff0c\u53ea\u9700\u8981\u5230\u53f3\u4fa7\u53bb\u627e\u5c31\u597d\u4e86\uff1b\u5982\u679c\u4e2d\u95f4\u5143\u7d20\u5927\u4e8e\u6240\u67e5\u627e\u7684\u503c\uff0c\u540c\u7406\uff0c\u53f3\u4fa7\u7684\u53ea\u4f1a\u66f4\u5927\u800c\u4e0d\u4f1a\u6709\u6240\u67e5\u627e\u7684\u5143\u7d20\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5230\u5de6\u4fa7\u53bb\u627e\u3002  \u5728\u4e8c\u5206\u641c\u7d22\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u6b21\u90fd\u628a\u67e5\u8be2\u7684\u533a\u95f4\u51cf\u534a\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4\uff0c\u81f3\u591a\u4f1a\u8fdb\u884c  O(logn) O(logn)  \u6b21\u67e5\u627e\u3002  int   binary_search ( int   start ,   int   end ,   int   key )   { \n   int   ret   =   - 1 ;         // \u672a\u641c\u7d22\u5230\u6570\u636e\u8fd4\u56de-1\u4e0b\u6807   \n     int   mid ; \n     while   ( start   <=   end )   { \n         mid   =   start   +   ( end   -   start )   /   2 ;   //\u76f4\u63a5\u5e73\u5747\u53ef\u80fd\u6703\u6ea2\u4f4d\uff0c\u6240\u4ee5\u7528\u6b64\u7b97\u6cd5 \n         if   ( arr [ mid ]   <   key ) \n             start   =   mid   +   1 ; \n         else   if   ( arr [ mid ]   >   key ) \n             end   =   mid   -   1 ; \n         else   {              // \u6700\u5f8c\u6aa2\u6e2c\u76f8\u7b49\u662f\u56e0\u70ba\u591a\u6578\u641c\u5c0b\u72c0\u6cc1\u4e0d\u662f\u5927\u65bc\u8981\u4e0d\u5c31\u5c0f\u65bc \n             ret   =   mid ;   \n       break ; \n     } \n     } \n     return   ret ;       // \u5355\u4e00\u51fa\u53e3  }   \u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u6709\u5e8f\u662f\u5e7f\u4e49\u7684\u6709\u5e8f\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u5de6\u4fa7\u6216\u8005\u53f3\u4fa7\u90fd\u6ee1\u8db3\u67d0\u4e00\u79cd\u6761\u4ef6\uff0c\u800c\u53e6\u4e00\u4fa7\u90fd\u4e0d\u6ee1\u8db3\u8fd9\u79cd\u6761\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u79cd\u6709\u5e8f\uff08\u5982\u679c\u628a\u6ee1\u8db3\u6761\u4ef6\u770b\u505a 1\uff0c\u4e0d\u6ee1\u8db3\u770b\u505a 0\uff0c\u81f3\u5c11\u5bf9\u4e8e\u8fd9\u4e2a\u6761\u4ef6\u7684\u8fd9\u4e00\u7ef4\u5ea6\u662f\u6709\u5e8f\u7684\uff09\u3002\u6362\u8a00\u4e4b\uff0c\u4e8c\u5206\u641c\u7d22\u6cd5\u53ef\u4ee5\u7528\u6765\u67e5\u627e\u6ee1\u8db3\u67d0\u79cd\u6761\u4ef6\u7684\u6700\u5927 / \u6700\u5c0f\u7684\u503c\u3002  \u5982\u679c\u6211\u4eec\u8981\u6c42\u6ee1\u8db3\u67d0\u79cd\u6761\u4ef6\u7684\u6700\u5927\u503c\u7684\u6700\u5c0f\u53ef\u80fd\u60c5\u51b5\uff08\u6700\u5927\u503c\u6700\u5c0f\u5316\uff09\u5462\uff1f\u9996\u5148\u7684\u60f3\u6cd5\u662f\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u8fd9\u4e2a\u4f5c\u4e3a\u7b54\u6848\u7684\u201c\u6700\u5927\u503c\u201d\uff0c\u7136\u540e\u53bb\u5224\u65ad\u662f\u5426\u5408\u6cd5\u3002\u8981\u662f\u8fd9\u4e2a\u7b54\u6848\u662f\u5355\u8c03\u7684\u5c31\u597d\u4e86\uff0c\u90a3\u6837\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u641c\u7d22\u6cd5\u6765\u66f4\u5feb\u5730\u627e\u5230\u7b54\u6848\u3002  \u8981\u60f3\u4f7f\u7528\u4e8c\u5206\u641c\u7d22\u6cd5\u6765\u89e3\u8fd9\u79cd\u201c\u6700\u5927\u503c\u6700\u5c0f\u5316\u201d\u7684\u9898\u76ee\uff0c\u9700\u8981\u6ee1\u8db3\u4e00\u4e0b\u4e09\u4e2a\u6761\u4ef6\uff1a   \u7b54\u6848\u5728\u4e00\u4e2a\u56fa\u5b9a\u533a\u95f4\u5185  \u53ef\u80fd\u67e5\u627e\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u503c\u4e0d\u662f\u5f88\u5bb9\u6613\uff0c\u4f46\u662f\u8981\u6c42\u80fd\u6bd4\u8f83\u5bb9\u6613\u5730\u5224\u65ad\u67d0\u4e2a\u503c\u662f\u5426\u662f\u7b26\u5408\u6761\u4ef6\u7684  \u53ef\u884c\u89e3\u5bf9\u4e8e\u533a\u95f4\u6ee1\u8db3\u4e00\u5b9a\u7684\u5355\u8c03\u6027\u3002\u6362\u8a00\u4e4b\uff0c\u5982\u679c x \u662f\u7b26\u5408\u6761\u4ef6\u7684\uff0c\u90a3\u4e48\u6709 x + 1 \u6216\u8005 x - 1 \u4e5f\u7b26\u5408\u6761\u4ef6\u3002\uff08\u8fd9\u6837\u4e0b\u6765\u5c31\u6ee1\u8db3\u4e86\u4e0a\u9762\u63d0\u5230\u7684\u5355\u8c03\u6027\uff09   \u5f53\u7136\uff0c\u6700\u5c0f\u503c\u6700\u5927\u5316\u662f\u540c\u7406\u7684\u3002  \u4e8c\u5206\u6cd5\u628a\u4e00\u4e2a\u5bfb\u627e\u6781\u503c\u7684\u95ee\u9898\u8f6c\u5316\u6210\u4e00\u4e2a\u5224\u5b9a\u7684\u95ee\u9898\uff08\u7528\u4e8c\u5206\u641c\u7d22\u6765\u627e\u8fd9\u4e2a\u6781\u503c\uff09\u3002\u7c7b\u6bd4\u679a\u4e3e\u6cd5\uff0c\u6211\u4eec\u5f53\u65f6\u662f\u679a\u4e3e\u7b54\u6848\u7684\u53ef\u80fd\u60c5\u51b5\uff0c\u73b0\u5728\u7531\u4e8e\u5355\u8c03\u6027\uff0c\u6211\u4eec\u4e0d\u518d\u9700\u8981\u4e00\u4e2a\u4e2a\u679a\u4e3e\uff0c\u5229\u7528\u4e8c\u5206\u7684\u601d\u8def\uff0c\u5c31\u53ef\u4ee5\u7528\u66f4\u4f18\u7684\u65b9\u6cd5\u89e3\u51b3\u201c\u6700\u5927\u503c\u6700\u5c0f\u201d\u3001\u201c\u6700\u5c0f\u503c\u6700\u5927\u201d\u3002\u8fd9\u79cd\u89e3\u6cd5\u4e5f\u6210\u4e3a\u662f\u201c\u4e8c\u5206\u7b54\u6848\u201d\uff0c\u5e38\u89c1\u4e8e\u89e3\u9898\u62a5\u544a\u4e2d\u3002",
            "title": "\u4e8c\u5206\u641c\u7d22"
        },
        {
            "location": "/basic/binary/#_2",
            "text": "mid   =   ( left   +   right )   /   2 ;  midmid   =   ( mid   +   right )   /   2 ;   // \u5bf9\u53f3\u4fa7\u533a\u95f4\u53d6\u534a  if   ( cal ( mid )   >   cal ( midmid )) \n   right   =   midmid ;  else \n   left   =   mid ;   \u4e09\u5206\u6cd5\u53ef\u4ee5\u7528\u6765\u67e5\u627e\u51f8\u51fd\u6570\u7684\u6700\u5927\uff08\u5c0f\uff09\u503c\u3002  \u753b\u4e00\u4e0b\u56fe\u597d\u7406\u89e3\u4e00\u4e9b\uff08\u56fe\u5f85\u8865\uff09    \u5982\u679c mid \u548c midmid \u5728\u6700\u5927\uff08\u5c0f\uff09\u503c\u7684\u540c\u4e00\u4fa7\n\u90a3\u4e48\u7531\u4e8e\u5355\u8c03\u6027\uff0c\u4e00\u5b9a\u662f\u4e8c\u8005\u4e2d\u8f83\u5927\uff08\u5c0f\uff09\u7684\u90a3\u4e2a\u79bb\u6700\u503c\u8fd1\u4e00\u4e9b\uff0c\u8f83\u8fdc\u7684\u90a3\u4e2a\u70b9\u5bf9\u5e94\u7684\u533a\u95f4\u4e0d\u53ef\u80fd\u5305\u542b\u6700\u503c\uff0c\u6240\u4ee5\u53ef\u4ee5\u820d\u5f03\u3002    \u5982\u679c\u5728\u4e24\u4fa7\n\u7531\u4e8e\u6700\u503c\u5728\u4e8c\u8005\u4e2d\u95f4\uff0c\u6211\u4eec\u820d\u5f03\u4e24\u4fa7\u7684\u4e00\u4e2a\u533a\u95f4\u540e\uff0c\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u6700\u503c\uff0c\u6240\u4ee5\u53ef\u4ee5\u820d\u5f03\u3002",
            "title": "\u4e09\u5206\u6cd5"
        },
        {
            "location": "/basic/construction/",
            "text": "\u6784\u9020\u9898\u662f\u6bd4\u8d5b\u4e2d\u5e38\u89c1\u7684\u4e00\u7c7b\u9898\u578b\u3002\n\n\n\u4ece\u5f62\u5f0f\u4e0a\u6765\u770b\uff0c\u95ee\u9898\u7684\u7b54\u6848\u5f80\u5f80\u5177\u6709\u67d0\u79cd\u89c4\u5f8b\u6027\uff0c\u4f7f\u5f97\u5728\u95ee\u9898\u89c4\u6a21\u8fc5\u901f\u589e\u5927\u7684\u65f6\u5019\uff0c\u4ecd\u7136\u6709\u673a\u4f1a\u6bd4\u8f83\u5bb9\u6613\u5730\u5f97\u5230\u7b54\u6848\u3002\n\n\n\u8fd9\u8981\u6c42\u6211\u4eec\u5728\u89e3\u9898\u65f6\uff0c\u8981\u601d\u8003\u95ee\u9898\u89c4\u6a21\u589e\u957f\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\uff0c\u8fd9\u79cd\u5f71\u54cd\u662f\u5426\u53ef\u4ee5\u63a8\u5e7f\u3002\uff08\u6bd4\u5982\u5728\u8bbe\u8ba1\u52a8\u6001\u89c4\u5212\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u8981\u8003\u8651\u4ece\u4e00\u4e2a\u72b6\u6001\u5230\u540e\u7ee7\u72b6\u6001\u7684\u8f6c\u79fb\u4f1a\u9020\u6210\u4ec0\u4e48\u5f71\u54cd\uff09\u3002",
            "title": "\u6784\u9020"
        },
        {
            "location": "/search/",
            "text": "\u641c\u7d22\u7684\u601d\u60f3\u6309\u7167\u5728\u72b6\u6001\u7a7a\u95f4\u4e2d\u5c1d\u8bd5\u7684\u987a\u5e8f\u5206\u4e3a\u591a\u79cd\u3002\u641c\u7d22\u770b\u8d77\u6765\u7b80\u5355\uff0c\u4f46\u662f\u5f80\u5f80\u662f\u5f88\u591a\u590d\u6742\u7684\u9898\u76ee\u4e2d\u5fc5\u4e0d\u53ef\u5c11\u7684\u6a21\u5757\u3002\n\n\n\u6df1\u5ea6\u4f18\u5148\u641c\u7d22 (DFS)\n\u00b6\n\n\n\u4f18\u5148\u6df1\u5165\u904d\u5386\u9760\u524d\u7684\u8282\u70b9\uff0c\u53ef\u4ee5\u7528\u5806\u6808\u5b9e\u73b0\u3002\n\n\n\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22 (BFS)\n\u00b6\n\n\n\u4f18\u5148\u6269\u5c55\u6d45\u5c42\u8282\u70b9\uff0c\u9010\u6e10\u6df1\u5165\uff0c\u53ef\u4ee5\u7528\u961f\u5217\u5b9e\u73b0\u3002\n\n\n\u53cc\u5411\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22\n\u00b6\n\n\n\u4ece\u72b6\u6001\u56fe\u4e0a\u8d77\u70b9\u548c\u7ec8\u70b9\u540c\u65f6\u5f00\u59cb\u8fdb\u884c\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u5982\u679c\u53d1\u73b0\u76f8\u9047\u4e86\uff0c\u90a3\u4e48\u53ef\u4ee5\u8ba4\u4e3a\u662f\u83b7\u5f97\u4e86\u53ef\u884c\u89e3\u3002\n\n\nA* \u641c\u7d22\n\u00b6\n\n\nIDA* \u641c\u7d22\n\u00b6\n\n\n\u526a\u679d\n\u00b6\n\n\n\u641c\u7d22\u5f80\u5f80\u662f\u5728\u5e9e\u5927\u7684\u89e3\u7a7a\u95f4\u4e2d\u5c1d\u8bd5\u83b7\u5f97\u6700\u4f18\u89e3\uff0c\u8fd9\u65f6\u5019\u526a\u679d\u5c31\u663e\u5f97\u5341\u5206\u5fc5\u8981\u4e86\u3002\u526a\u679d\u987e\u540d\u601d\u4e49\uff0c\u662f\u8fd0\u7528\u5df2\u6709\u7684\u4fe1\u606f\uff0c\u5c3d\u65e9\u5730\u786e\u5b9a\u4e00\u79cd\u65b9\u6848\u662f\u5426\u53ef\u884c\uff0c\u5982\u679c\u5df2\u7ecf\u77e5\u9053\u65e0\u6cd5\u83b7\u5f97\u6700\u4f18\u89e3\u5c31\u53ca\u65f6\u9000\u56de\u3002\u8fd9\u6837\u7684\u64cd\u4f5c\u5bf9\u4e8e\u641c\u7d22\u6811\u6765\u8bf4\uff0c\u5c31\u76f8\u5f53\u4e8e\u662f\u5728\u641c\u7d22\u6811\u4e0a\u526a\u6389\u4e00\u4e9b\u679d\u6748\u3002\n\n\n\u526a\u679d\u601d\u8def\u6709\u5f88\u591a\u79cd\uff0c\u5927\u591a\u9700\u8981\u5bf9\u4e8e\u5177\u4f53\u95ee\u9898\u6765\u5206\u6790\uff0c\u5728\u6b64\u7b80\u8981\u4ecb\u7ecd\u51e0\u79cd\u5e38\u89c1\u7684\u526a\u679d\u601d\u8def\u3002\n\n\n\u6781\u7aef\u6cd5\n\u00b6\n\n\n\u8003\u8651\u6781\u7aef\u60c5\u51b5\uff0c\u5982\u679c\u6700\u6781\u7aef\uff08\u6700\u7406\u60f3\uff09\u7684\u60c5\u51b5\u90fd\u65e0\u6cd5\u6ee1\u8db3\uff0c\u90a3\u4e48\u80af\u5b9a\u5b9e\u9645\u60c5\u51b5\u641c\u51fa\u6765\u7684\u7ed3\u679c\u4e0d\u4f1a\u66f4\u4f18\u4e86\u3002\n\n\n\u8c03\u6574\u6cd5\n\u00b6\n\n\n\u901a\u8fc7\u5bf9\u5b50\u6811\u7684\u6bd4\u8f83\u526a\u6389\u91cd\u590d\u5b50\u6811\u548c\u660e\u663e\u4e0d\u662f\u6700\u6709\u201c\u524d\u9014\u201d\u7684\u5b50\u6811\u3002\n\n\n\u6570\u5b66\u65b9\u6cd5\n\u00b6\n\n\n\u6bd4\u5982\u5728\u56fe\u8bba\u4e2d\u501f\u52a9\u8fde\u901a\u5206\u91cf\uff0c\u6570\u8bba\u4e2d\u501f\u52a9\u6a21\u65b9\u7a0b\u7684\u5206\u6790\uff0c\u501f\u52a9\u4e0d\u7b49\u5f0f\u7684\u653e\u7f29\u6765\u4f30\u8ba1\u4e0b\u754c\u7b49\u7b49\u3002",
            "title": "\u641c\u7d22\u90e8\u5206\u7b80\u4ecb"
        },
        {
            "location": "/search/#dfs",
            "text": "\u4f18\u5148\u6df1\u5165\u904d\u5386\u9760\u524d\u7684\u8282\u70b9\uff0c\u53ef\u4ee5\u7528\u5806\u6808\u5b9e\u73b0\u3002",
            "title": "\u6df1\u5ea6\u4f18\u5148\u641c\u7d22 (DFS)"
        },
        {
            "location": "/search/#bfs",
            "text": "\u4f18\u5148\u6269\u5c55\u6d45\u5c42\u8282\u70b9\uff0c\u9010\u6e10\u6df1\u5165\uff0c\u53ef\u4ee5\u7528\u961f\u5217\u5b9e\u73b0\u3002",
            "title": "\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22 (BFS)"
        },
        {
            "location": "/search/#_1",
            "text": "\u4ece\u72b6\u6001\u56fe\u4e0a\u8d77\u70b9\u548c\u7ec8\u70b9\u540c\u65f6\u5f00\u59cb\u8fdb\u884c\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u5982\u679c\u53d1\u73b0\u76f8\u9047\u4e86\uff0c\u90a3\u4e48\u53ef\u4ee5\u8ba4\u4e3a\u662f\u83b7\u5f97\u4e86\u53ef\u884c\u89e3\u3002",
            "title": "\u53cc\u5411\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22"
        },
        {
            "location": "/search/#a",
            "text": "",
            "title": "A* \u641c\u7d22"
        },
        {
            "location": "/search/#ida",
            "text": "",
            "title": "IDA* \u641c\u7d22"
        },
        {
            "location": "/search/#_2",
            "text": "\u641c\u7d22\u5f80\u5f80\u662f\u5728\u5e9e\u5927\u7684\u89e3\u7a7a\u95f4\u4e2d\u5c1d\u8bd5\u83b7\u5f97\u6700\u4f18\u89e3\uff0c\u8fd9\u65f6\u5019\u526a\u679d\u5c31\u663e\u5f97\u5341\u5206\u5fc5\u8981\u4e86\u3002\u526a\u679d\u987e\u540d\u601d\u4e49\uff0c\u662f\u8fd0\u7528\u5df2\u6709\u7684\u4fe1\u606f\uff0c\u5c3d\u65e9\u5730\u786e\u5b9a\u4e00\u79cd\u65b9\u6848\u662f\u5426\u53ef\u884c\uff0c\u5982\u679c\u5df2\u7ecf\u77e5\u9053\u65e0\u6cd5\u83b7\u5f97\u6700\u4f18\u89e3\u5c31\u53ca\u65f6\u9000\u56de\u3002\u8fd9\u6837\u7684\u64cd\u4f5c\u5bf9\u4e8e\u641c\u7d22\u6811\u6765\u8bf4\uff0c\u5c31\u76f8\u5f53\u4e8e\u662f\u5728\u641c\u7d22\u6811\u4e0a\u526a\u6389\u4e00\u4e9b\u679d\u6748\u3002  \u526a\u679d\u601d\u8def\u6709\u5f88\u591a\u79cd\uff0c\u5927\u591a\u9700\u8981\u5bf9\u4e8e\u5177\u4f53\u95ee\u9898\u6765\u5206\u6790\uff0c\u5728\u6b64\u7b80\u8981\u4ecb\u7ecd\u51e0\u79cd\u5e38\u89c1\u7684\u526a\u679d\u601d\u8def\u3002",
            "title": "\u526a\u679d"
        },
        {
            "location": "/search/#_3",
            "text": "\u8003\u8651\u6781\u7aef\u60c5\u51b5\uff0c\u5982\u679c\u6700\u6781\u7aef\uff08\u6700\u7406\u60f3\uff09\u7684\u60c5\u51b5\u90fd\u65e0\u6cd5\u6ee1\u8db3\uff0c\u90a3\u4e48\u80af\u5b9a\u5b9e\u9645\u60c5\u51b5\u641c\u51fa\u6765\u7684\u7ed3\u679c\u4e0d\u4f1a\u66f4\u4f18\u4e86\u3002",
            "title": "\u6781\u7aef\u6cd5"
        },
        {
            "location": "/search/#_4",
            "text": "\u901a\u8fc7\u5bf9\u5b50\u6811\u7684\u6bd4\u8f83\u526a\u6389\u91cd\u590d\u5b50\u6811\u548c\u660e\u663e\u4e0d\u662f\u6700\u6709\u201c\u524d\u9014\u201d\u7684\u5b50\u6811\u3002",
            "title": "\u8c03\u6574\u6cd5"
        },
        {
            "location": "/search/#_5",
            "text": "\u6bd4\u5982\u5728\u56fe\u8bba\u4e2d\u501f\u52a9\u8fde\u901a\u5206\u91cf\uff0c\u6570\u8bba\u4e2d\u501f\u52a9\u6a21\u65b9\u7a0b\u7684\u5206\u6790\uff0c\u501f\u52a9\u4e0d\u7b49\u5f0f\u7684\u653e\u7f29\u6765\u4f30\u8ba1\u4e0b\u754c\u7b49\u7b49\u3002",
            "title": "\u6570\u5b66\u65b9\u6cd5"
        },
        {
            "location": "/search/dfs/",
            "text": "dfs \u5168\u79f0\u662f Depth First Search\u3002\n\n\n\u662f\u4e00\u79cd\u56fe\u7684\u904d\u5386\u7b97\u6cd5\u3002\n\n\n\u6240\u8c13\u6df1\u5ea6\u4f18\u5148\u3002\u5c31\u662f\u8bf4\u6bcf\u6b21\u90fd\u5c1d\u8bd5\u5411\u66f4\u6df1\u7684\u8282\u70b9\u8d70\u3002\n\u5982\u679c\u6ca1\u6709\u66f4\u6df1\u7684\u8282\u70b9\u4e86\uff0c\u5c31\u56de\u5230\u4e0a\u4e00\u5c42\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u7ee7\u7eed\u521a\u624d\u7684\u8fc7\u7a0b\u3002\n\n\n\u5b9e\u73b0\n\u00b6\n\n\n\u4f2a\u4ee3\u7801\uff1a\n\n\ndfs(u) {\n  visited[u] = true\n  for each edge(u, v) {\n    if (!visited[v]) {\n      dfs(v)\n    }\n  }\n}\n\n\n\n\nC++\uff1a\n\n\nvoid\n \ndfs\n(\nint\n \nu\n)\n \n{\n\n  \nvis\n[\nu\n]\n \n=\n \n1\n;\n\n  \nfor\n \n(\nint\n \ni\n \n=\n \nhead\n[\nu\n];\n \ni\n;\n \ni\n \n=\n \ne\n[\ni\n].\nx\n)\n \n{\n\n    \n// \u8fd9\u91cc\u7528\u5230\u7684\u662f\u94fe\u5f0f\u524d\u5411\u661f\u6765\u5b58\u56fe\n\n    \nif\n \n(\n!\nvis\n[\n \ne\n[\ni\n].\nt\n \n])\n \n{\n\n      \ndfs\n(\nv\n);\n\n    \n}\n\n  \n}\n\n\n}\n\n\n\n\n\n\u65f6\u95f4\u590d\u6742\u5ea6 \nO(n + m)\nO(n + m)\n\n\n\u7a7a\u95f4\u590d\u6742\u5ea6 \nO(n)\nO(n)\n \uff08vis \u6570\u7ec4\u548c\u9012\u5f52\u6808\uff09\n\n\n\u5728\u6811 / \u56fe\u4e0a dfs\n\u00b6",
            "title": "DFS"
        },
        {
            "location": "/search/dfs/#_1",
            "text": "\u4f2a\u4ee3\u7801\uff1a  dfs(u) {\n  visited[u] = true\n  for each edge(u, v) {\n    if (!visited[v]) {\n      dfs(v)\n    }\n  }\n}  C++\uff1a  void   dfs ( int   u )   { \n   vis [ u ]   =   1 ; \n   for   ( int   i   =   head [ u ];   i ;   i   =   e [ i ]. x )   { \n     // \u8fd9\u91cc\u7528\u5230\u7684\u662f\u94fe\u5f0f\u524d\u5411\u661f\u6765\u5b58\u56fe \n     if   ( ! vis [   e [ i ]. t   ])   { \n       dfs ( v ); \n     } \n   }  }   \u65f6\u95f4\u590d\u6742\u5ea6  O(n + m) O(n + m)  \u7a7a\u95f4\u590d\u6742\u5ea6  O(n) O(n)  \uff08vis \u6570\u7ec4\u548c\u9012\u5f52\u6808\uff09",
            "title": "\u5b9e\u73b0"
        },
        {
            "location": "/search/dfs/#dfs",
            "text": "",
            "title": "\u5728\u6811 / \u56fe\u4e0a dfs"
        },
        {
            "location": "/search/bfs/",
            "text": "bfs \u5168\u79f0\u662f Breadth First Search\u3002\n\n\n\u662f\u4e00\u79cd\u56fe\u7684\u904d\u5386\u7b97\u6cd5\u3002\n\n\n\u6240\u8c13\u5bbd\u5ea6\u4f18\u5148\u3002\u5c31\u662f\u6bcf\u6b21\u90fd\u5c1d\u8bd5\u8bbf\u95ee\u540c\u4e00\u5c42\u7684\u8282\u70b9\u3002\n\u5982\u679c\u540c\u4e00\u5c42\u90fd\u8bbf\u95ee\u5b8c\u4e86\uff0c\u518d\u8bbf\u95ee\u4e0b\u4e00\u5c42\u3002\n\n\n\u5b9e\u73b0\n\u00b6\n\n\n\u4f2a\u4ee3\u7801\uff1a\n\n\nbfs(s) {\n  q = new queue()\n  q.push(s)), visited[s] = true\n  while (!q.empty()) {\n    u = q.pop()\n    for each edge(u, v) {\n      if (!visited[v]) {\n        q.push(v)\n        visited[v] = true\n      }\n    }\n  }\n}\n\n\n\n\nC++\uff1a\n\n\nvoid\n \nbfs\n(\nint\n \nu\n)\n \n{\n\n  \nwhile\n \n(\n!\nQ\n.\nempty\n())\n \nQ\n.\npop\n();\n\n  \nQ\n.\npush\n(\nu\n);\n \nvis\n[\nu\n]\n \n=\n \n1\n;\n\n  \nwhile\n \n(\n!\nQ\n.\nempty\n())\n \n{\n\n    \nu\n \n=\n \nQ\n.\npop\n()\n \n{\n\n      \nfor\n \n(\nint\n \ni\n \n=\n \nhead\n[\nu\n];\n \ni\n;\n \ni\n \n=\n \ne\n[\ni\n].\nx\n)\n \n{\n\n        \nif\n \n(\n!\nvis\n[\n \ne\n[\ni\n].\nt\n \n])\n \n{\n\n          \nQ\n.\npush\n(\ne\n[\ni\n].\nt\n);\n\n          \nvis\n[\n \ne\n[\ni\n].\nt\n \n]\n \n=\n \n1\n;\n\n        \n}\n\n      \n}\n\n    \n}\n\n  \n}\n\n\n}\n\n\n\n\n\n\u65f6\u95f4\u590d\u6742\u5ea6 \nO(n + m)\nO(n + m)\n\n\n\u7a7a\u95f4\u590d\u6742\u5ea6 \nO(n)\nO(n)\n \uff08vis \u6570\u7ec4\u548c\u961f\u5217\uff09\n\n\nopen-closed \u8868\n\u00b6\n\n\n\u5728\u5b9e\u73b0 bfs \u7684\u65f6\u5019\uff0c\u6211\u4eec\u628a\u672a\u88ab\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9\u653e\u5728\u4e00\u4e2a\u79f0\u4e3a open \u7684\u5bb9\u5668\u4e2d\uff0c\u800c\u628a\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u4e86\u7684\u8282\u70b9\u653e\u5728 closed \u5bb9\u5668\u4e2d\u3002\n\n\n\u5728\u6811 / \u56fe\u4e0a dfs\n\u00b6",
            "title": "BFS"
        },
        {
            "location": "/search/bfs/#_1",
            "text": "\u4f2a\u4ee3\u7801\uff1a  bfs(s) {\n  q = new queue()\n  q.push(s)), visited[s] = true\n  while (!q.empty()) {\n    u = q.pop()\n    for each edge(u, v) {\n      if (!visited[v]) {\n        q.push(v)\n        visited[v] = true\n      }\n    }\n  }\n}  C++\uff1a  void   bfs ( int   u )   { \n   while   ( ! Q . empty ())   Q . pop (); \n   Q . push ( u );   vis [ u ]   =   1 ; \n   while   ( ! Q . empty ())   { \n     u   =   Q . pop ()   { \n       for   ( int   i   =   head [ u ];   i ;   i   =   e [ i ]. x )   { \n         if   ( ! vis [   e [ i ]. t   ])   { \n           Q . push ( e [ i ]. t ); \n           vis [   e [ i ]. t   ]   =   1 ; \n         } \n       } \n     } \n   }  }   \u65f6\u95f4\u590d\u6742\u5ea6  O(n + m) O(n + m)  \u7a7a\u95f4\u590d\u6742\u5ea6  O(n) O(n)  \uff08vis \u6570\u7ec4\u548c\u961f\u5217\uff09",
            "title": "\u5b9e\u73b0"
        },
        {
            "location": "/search/bfs/#open-closed",
            "text": "\u5728\u5b9e\u73b0 bfs \u7684\u65f6\u5019\uff0c\u6211\u4eec\u628a\u672a\u88ab\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9\u653e\u5728\u4e00\u4e2a\u79f0\u4e3a open \u7684\u5bb9\u5668\u4e2d\uff0c\u800c\u628a\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u4e86\u7684\u8282\u70b9\u653e\u5728 closed \u5bb9\u5668\u4e2d\u3002",
            "title": "open-closed \u8868"
        },
        {
            "location": "/search/bfs/#dfs",
            "text": "",
            "title": "\u5728\u6811 / \u56fe\u4e0a dfs"
        },
        {
            "location": "/search/dbfs/",
            "text": "\u4ece\u72b6\u6001\u56fe\u4e0a\u8d77\u70b9\u548c\u7ec8\u70b9\u540c\u65f6\u5f00\u59cb\u8fdb\u884c\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u5982\u679c\u53d1\u73b0\u76f8\u9047\u4e86\uff0c\u90a3\u4e48\u53ef\u4ee5\u8ba4\u4e3a\u662f\u83b7\u5f97\u4e86\u53ef\u884c\u89e3\u3002",
            "title": "\u53cc\u5411\u5e7f\u641c"
        },
        {
            "location": "/search/heuristic/",
            "text": "",
            "title": "\u542f\u53d1\u5f0f\u641c\u7d22"
        },
        {
            "location": "/search/astar/",
            "text": "",
            "title": "Astar"
        },
        {
            "location": "/search/idastar/",
            "text": "",
            "title": "IDAstar"
        },
        {
            "location": "/search/iterative/",
            "text": "",
            "title": "\u8fed\u4ee3\u6df1\u641c"
        },
        {
            "location": "/search/backtracking/",
            "text": "",
            "title": "\u56de\u6eaf\u6cd5"
        },
        {
            "location": "/search/dlx/",
            "text": "",
            "title": "Dancing Links"
        },
        {
            "location": "/dp/",
            "text": "",
            "title": "\u52a8\u6001\u89c4\u5212\u90e8\u5206\u7b80\u4ecb"
        },
        {
            "location": "/dp/\u8bb0\u5fc6\u5316\u641c\u7d22/",
            "text": "",
            "title": "\u8bb0\u5fc6\u5316\u641c\u7d22"
        },
        {
            "location": "/dp/backpack/",
            "text": "",
            "title": "\u80cc\u5305 DP"
        },
        {
            "location": "/dp/interval/",
            "text": "",
            "title": "\u533a\u95f4 DP"
        },
        {
            "location": "/dp/dag/",
            "text": "",
            "title": "DAG \u4e0a\u7684 dp"
        },
        {
            "location": "/dp/tree/",
            "text": "",
            "title": "\u6811\u5f62 DP"
        },
        {
            "location": "/dp/state/",
            "text": "",
            "title": "\u72b6\u538b DP"
        },
        {
            "location": "/dp/number/",
            "text": "",
            "title": "\u6570\u4f4d DP"
        },
        {
            "location": "/dp/plug/",
            "text": "",
            "title": "\u63d2\u5934 DP"
        },
        {
            "location": "/dp/optimization/",
            "text": "",
            "title": "\u4f18\u5316\u53ca\u5176\u5b83"
        },
        {
            "location": "/dp/misc/",
            "text": "",
            "title": "\u5176\u5b83\u52a8\u89c4\u65b9\u6cd5"
        },
        {
            "location": "/string/",
            "text": "",
            "title": "\u5b57\u7b26\u4e32\u90e8\u5206\u7b80\u4ecb"
        },
        {
            "location": "/string/stl/",
            "text": "",
            "title": "\u4e00\u5806\u5b57\u7b26\u4e32\u51fd\u6570"
        },
        {
            "location": "/string/hash/",
            "text": "",
            "title": "\u54c8\u5e0c\u5927\u6cd5"
        },
        {
            "location": "/string/trie/",
            "text": "",
            "title": "\u5b57\u5178\u6811\uff08Trie\uff09"
        },
        {
            "location": "/string/pam/",
            "text": "",
            "title": "\u56de\u6587\u81ea\u52a8\u673a"
        },
        {
            "location": "/string/palindrome-tree/",
            "text": "",
            "title": "\u56de\u6587\u6811"
        },
        {
            "location": "/string/sa/",
            "text": "1.\u524d\u8a00\n\u00b6\n\n\n\u540e\u7f00\u6570\u7ec4\u548c\u540e\u7f00\u6811\n\u00b6\n\n\n\n\n\u5728\u5b57\u7b26\u4e32\u5904\u7406\u5f53\u4e2d\uff0c\u540e\u7f00\u6811\u548c\u540e\u7f00\u6570\u7ec4\u90fd\u662f\u975e\u5e38\u6709\u529b\u7684\u5de5\u5177\u3002\u5176\u5b9e\u540e\u7f00\u6570\u7ec4\u662f\u540e\u7f00\u6811\u7684\u4e00\u4e2a\u975e\u5e38\u7cbe\u5de7\u7684\u66ff\u4ee3\u54c1\uff0c\u5b83\u6bd4\u540e\u7f00\u6811\u5bb9\u6613\u7f16\u7a0b\u5b9e\u73b0\uff0c\u80fd\u591f\u5b9e\u73b0\u540e\u7f00\u6811\u7684\u5f88\u591a\u529f\u80fd\u800c\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u4e0d\u592a\u900a\u8272\uff0c\u5e76\u4e14\uff0c\u5b83\u6bd4\u540e\u7f00\u6811\u6240\u5360\u7528\u7684\u7a7a\u95f4\u5c0f\u5f88\u591a\u3002\u53ef\u4ee5\u8bf4\uff0c\u5728\u4fe1\u606f\u5b66\u7ade\u8d5b\u4e2d\u540e\u7f00\u6570\u7ec4\u6bd4\u540e\u7f00\u6811\u8981\u66f4\u4e3a\u5b9e\u7528\u3002\u2014\u2014\u767e\u5ea6\u767e\u79d1\n\n\n\n\n\u5404\u79cd\u5b9a\u4e49\n\u00b6\n\n\n\u5b50\u4e32\n\uff1a \u5c31\u662f\u5b50\u4e32[\u6342\u8138]\n\n\n\u540e\u7f00\n\uff1a \u5c31\u662f\u4ece \ni\ni\n \u8fd9\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u5230\u8be5\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u7684\u4e00\u4e2a\u5b50\u4e32\n\n\n\u5b57\u7b26\u4e32\u5927\u5c0f\n\uff1a \na\na\n \u548c \nb\nb\n \u8fd9\u4e24\u4e2a\u4e32\uff0c\u4ece\u5934\u5f00\u59cb\u9010\u4e2a\u5b57\u7b26\u6309\u7167ASSIC\u7801\u8fdb\u884c\u6bd4\u8f83\n\n\n\u540e\u7f00\u6570\u7ec4\n\uff1a \nsa[i]\nsa[i]\n\u4ee3\u8868\u8be5\u5b57\u7b26\u4e32\u7684\nlen\nlen\n\u4e2a\u540e\u7f00\u4e2d\uff0c\u6392\u540d\u4e3a \ni\ni\n \u7684\u540e\u7f00\u662f\u7b2c\nsa[i]\nsa[i]\n\u4e2a\u540e\u7f00\n\n\n\u540d\u8bcd\u6570\u7ec4\n\uff1a \nrank[i]\nrank[i]\n\u4ee3\u8868\u7b2c \ni\ni\n \u4e2a\u540e\u7f00\u6392\u540d\u4e3a\nrank[i]\nrank[i]\n\n\n2.\u4e00\u4e9b\u6784\u9020\u65b9\u6cd5\n\u00b6\n\n\n\u6700\u7b80\u5355\u7684\u66b4\u529b\n\u00b6\n\n\n\u628a\u6240\u6709\u7684\u540e\u7f00\u62c6\u51fa\u6765\uff0c\u7136\u540esort\n\n\n\u601d\u60f3\u8f83\u4e3a\u7b80\u5355\uff0c\u53ef\u81ea\u884c\u5c1d\u8bd5\u5b9e\u73b0\n\n\n#include\n \n<bits/stdc++.h>\n\n\nusing\n \nnamespace\n \nstd\n;\n\n\n\nint\n \nrank\n[\n123\n],\n \nsa\n[\n123\n];\n\n\n\nstruct\n \nStr\n \n{\n\n    \nstring\n \ns\n;\n \nint\n \nwei\n;\n\n    \nfriend\n \nbool\n \noperator\n \n<\n \n(\nStr\n \na1\n,\nStr\n \na2\n)\n \n{\n\n        \nreturn\n \na1\n.\ns\n<\na2\n.\ns\n;\n\n    \n}\n\n\n}\n \nk\n[\n123\n]\n \n;\n\n\n\nint\n \nmain\n()\n\n\n{\n\n    \nstring\n \ns\n;\n\n    \ncin\n \n>>\n \ns\n;\n\n    \nint\n \nlen\n=\ns\n.\nsize\n()\n-\n1\n;\n\n\n    \nfor\n \n(\nint\n \ni\n=\n0\n;\ni\n<=\nlen\n;\ni\n++\n)\n\n    \n{\n\n        \nk\n[\ni\n].\nwei\n=\ni\n;\n\n        \nfor\n \n(\nint\n \nj\n=\ni\n;\nj\n<=\nlen\n;\nj\n++\n)\n \n            \nk\n[\ni\n].\ns\n=\nk\n[\ni\n].\ns\n+\ns\n[\nj\n];\n\n    \n}\n\n\n    \nsort\n \n(\nk\n,\nk\n+\nlen\n+\n1\n);\n\n    \nfor\n \n(\nint\n \ni\n=\n0\n;\ni\n<=\nlen\n;\ni\n++\n)\n \n{\n\n        \nrank\n[\nk\n[\ni\n].\nwei\n]\n=\ni\n;\n\n        \nsa\n[\ni\n]\n=\nk\n[\ni\n].\nwei\n;\n\n    \n}\n\n\n    \nexit\n(\n0\n);\n\n\n}\n\n\n\n\n\n\u500d\u589e\n\u00b6\n\n\n\u8fd9\u4e2a\u5c31\u662f\u4e00\u822c\u4eba\u5199\u540e\u7f00\u6570\u7ec4\u7528\u7684\u65b9\u6cd5\n\n\n\u590d\u6742\u5ea6\u662f \nO(nlogn)\nO(nlogn)\n \n\n\n\u524d\u63d0\u662f\u4f60\u8981\u5148\u4f1a\n\u57fa\u6570\u6392\u5e8f\n\n\n\u5047\u8bbe\u6211\u4eec\u6709\u8fd9\u6837\u4e00\u4e2a\u5b57\u7b26\u4e32 \naabaaaab\n\n\n\u7136\u540e\u6211\u4eec\u628a\u6240\u6709\u7684\u540e\u7f00\u5217\u4e3e\u51fa\u6765\uff1a\n\n\n\n\n\u7136\u540e\u7528\u57fa\u6570\u6392\u5e8f\u7684\u65b9\u5f0f\uff0c\u6309\u7167\u6bcf\u4e2a\u540e\u7f00\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u8fdb\u884c\u6392\u5e8f\uff0c\u5448\u73b0\u8fd9\u6837\u5b50\u7684\u6548\u679c\uff1a\n\n\n\n\n\u63a5\u7740\u6211\u4eec\u4ee5\u7b2c\u4e8c\u4e2a\u5b57\u6bcd\u4e3a\u5173\u952e\u5b57\uff0c\u5728\u9996\u5b57\u6bcd\u6709\u5e8f\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u628a\u9996\u5b57\u6bcd\u76f8\u540c\u7684\u540e\u7f00\u62ff\u51fa\u6765\u5355\u770b\n\n\n\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u9996\u5b57\u6bcd\u76f8\u540c\u7684\u540e\u7f00\uff0c\u9996\u5b57\u6bcd\u662f\u5bf9\u6392\u5e8f\u6ca1\u6709\u5f71\u54cd\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u6309\u7167\u7b2c\u4e8c\u4e2a\u5b57\u6bcd\u8fdb\u884c\u57fa\u6570\u6392\u5e8f\uff0c\u540c\u6837\uff0c\u5bf9\u4e8e\u9996\u5b57\u6bcd\u4e0d\u540c\u7684\u540e\u7f00\uff0c\u7531\u4e8e\u6309\u7167\u9996\u5b57\u6bcd\u6392\u5e8f\u65f6\uff0c\u4ed6\u4eec\u7684\u76f8\u5bf9\u5927\u5c0f\u5df2\u7ecf\u786e\u5b9a\uff0c\u5f53\u6309\u7167\u7b2c\u4e8c\u4e2a\u5b57\u6bcd\u6392\u5e8f\u65f6\uff0c\u4e0d\u4f1a\u51fa\u73b0\n\u539f\u6765a>b\uff0c\u73b0\u5728b>a\n\u7684\u73b0\u8c61\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u770b\u6210\u4e00\u76f4\u5728\u505a\u533a\u57df\u5185\u7684\u6392\u5e8f\uff0c\u8fd9\u4e4b\u540e\u53d8\u6210\u8fd9\u6837\uff1a\n\n\n\n\n\u7b2c\u4e09\u5b57\u6bcd\u540c\u7406........\n\n\n\u8fd9\u6837\u5b50\u6211\u4eec\u53ef\u4ee5\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ef\u662f\u590d\u6742\u5ea6\u8fd8\u662f\u6ca1\u6709\u5230\u8fbe\u4e00\u4e2a\u6211\u4eec\u53ef\u4ee5\u63a5\u53d7\u7684\u8303\u56f4\n\n\n\u6240\u4ee5\u6211\u4eec\u5f15\u5165\n\u500d\u589e\n\n\n\u5f53\u6211\u4eec\u6309\u7167\u6bcf\u4e2a\u540e\u7f00\u7684\u524d \n2^k\n2^k\n\u4e2a\u5b57\u6bcd\u8fdb\u884c\u5b8c\u6392\u5e8f\u540e\uff0c\u90a3\u4e48\u6211\u4eec\u628a\u540e\u7f00\u7684\u524d \n2^{k+1}\n2^{k+1}\n\u770b\u505a\u524d\u540e\u4e24\u4e2a \n2^k\n2^k\n,\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u8fd9\u524d\u540e\u4e24\u4e2a \n2^k\n2^k\n\u4f5c\u4e3a\u4e4b\u524d\u8bf4\u7684\n\u9996\u5b57\u6bcd\n\u548c\n\u7b2c\u4e8c\u4e2a\u5b57\u6bcd\n\u4e86\uff0c\u7136\u540e\u8fdb\u884c\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u5c31\u53ef\u4ee5\u5728 \nO(nlogn)\nO(nlogn)\n \u7684\u590d\u6742\u5ea6\u5185\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u4e86\n\n\n#include\n \n<bits/stdc++.h>\n\n\nusing\n \nnamespace\n \nstd\n;\n\n\n\nint\n \nn\n;\n\n\nint\n \nsa\n[\n150\n],\n \nx\n[\n150\n],\n \nc\n[\n150\n],\n \ny\n[\n150\n];\n\n\nchar\n \na\n[\n150\n];\n\n\n\ninline\n \nvoid\n \nSA\n \n()\n \n{\n\n    \nint\n \nm\n=\n128\n;\n\n    \nfor\n \n(\nint\n \ni\n=\n0\n;\ni\n<=\nm\n;\ni\n++\n)\n \nc\n[\ni\n]\n=\n0\n;\n\n    \nfor\n \n(\nint\n \ni\n=\n1\n;\ni\n<=\nn\n;\ni\n++\n)\n \nc\n[\nx\n[\ni\n]]\n++\n;\n\n    \nfor\n \n(\nint\n \ni\n=\n1\n;\ni\n<=\nm\n;\ni\n++\n)\n \nc\n[\ni\n]\n+=\nc\n[\ni\n-\n1\n];\n\n    \nfor\n \n(\nint\n \ni\n=\nn\n;\ni\n;\ni\n--\n)\n \nsa\n[\nc\n[\nx\n[\ni\n]]\n--\n]\n=\ni\n;\n\n\n    \nfor\n \n(\nint\n \nk\n=\n1\n,\np\n;\nk\n<=\nn\n;\nk\n<<=\n1\n)\n\n    \n{\n\n        \np\n=\n0\n;\n\n        \nfor\n \n(\nint\n \ni\n=\nn\n;\ni\n>\nn\n-\nk\n;\ni\n--\n)\n \ny\n[\n++\np\n]\n=\ni\n;\n\n        \nfor\n \n(\nint\n \ni\n=\n1\n;\ni\n<=\nn\n;\ni\n++\n)\n \nif\n(\nsa\n[\ni\n]\n>\nk\n)\n \ny\n[\n++\np\n]\n=\nsa\n[\ni\n]\n-\nk\n;\n\n\n        \nfor\n \n(\nint\n \ni\n=\n0\n;\ni\n<=\nm\n;\ni\n++\n)\n \nc\n[\ni\n]\n=\n0\n;\n\n        \nfor\n \n(\nint\n \ni\n=\n1\n;\ni\n<=\nn\n;\ni\n++\n)\n \nc\n[\nx\n[\ni\n]]\n++\n;\n\n        \nfor\n \n(\nint\n \ni\n=\n1\n;\ni\n<=\nm\n;\ni\n++\n)\n \nc\n[\ni\n]\n+=\nc\n[\ni\n-\n1\n];\n\n        \nfor\n \n(\nint\n \ni\n=\nn\n;\ni\n;\ni\n--\n)\n \nsa\n[\nc\n[\nx\n[\ny\n[\ni\n]]]\n--\n]\n=\ny\n[\ni\n];\n\n\n        \np\n=\ny\n[\nsa\n[\n1\n]]\n=\n1\n;\n\n        \nfor\n \n(\nint\n \ni\n=\n2\n,\na\n,\nb\n;\ni\n<=\nn\n;\ni\n++\n)\n \n{\n\n            \na\n=\nsa\n[\ni\n]\n+\nk\n>\nn\n \n?\n \n-\n1\n \n:\n \nx\n[\nsa\n[\ni\n]\n+\nk\n];\n\n            \nb\n=\nsa\n[\ni\n-\n1\n]\n+\nk\n>\nn\n \n?\n \n-\n1\n \n:\n \nx\n[\nsa\n[\ni\n-\n1\n]\n+\nk\n];\n\n            \ny\n[\nsa\n[\ni\n]]\n=\n \n(\nx\n[\nsa\n[\ni\n]]\n==\nx\n[\nsa\n[\ni\n-\n1\n]])\n \n&&\n \n(\na\n==\nb\n)\n \n?\n \np\n \n:\n \n++\np\n \n;\n\n        \n}\n\n        \nswap\n \n(\nx\n,\ny\n);\n\n        \nm\n=\np\n;\n\n    \n}\n\n\n}\n\n\n\nint\n \nmain\n \n()\n \n\n{\n\n    \nscanf\n(\n\"%s\"\n,\na\n+\n1\n);\n\n\n    \nn\n=\nstrlen\n \n(\na\n+\n1\n);\n\n    \nfor\n \n(\nint\n \ni\n=\n1\n;\ni\n<=\nn\n;\ni\n++\n)\n \nx\n[\ni\n]\n=\na\n[\ni\n];\n\n    \nSA\n \n();\n\n\n    \nfor\n \n(\nint\n \ni\n=\n1\n;\ni\n<=\nn\n;\ni\n++\n)\n \n        \nprintf\n(\n\"%d \"\n,\nsa\n[\ni\n]);\n\n    \nexit\n(\n0\n);\n\n\n}\n\n\n\n\n\n\u4ee3\u7801\u91cc \nx[i]\nx[i]\n \u5c31\u662f \nrank[i]\nrank[i]\n \n\n\ny[i]\ny[i]\n \uff1a\u5047\u8bbe \ny[i]=a\\ ,\\  y[i+1]=b\ny[i]=a\\ ,\\  y[i+1]=b\n \u90a3\u4e48\u5728\u539f\u4e32\u4e2d \u4ece\na+2^k\na+2^k\n\u5f00\u59cb\u7684\n2^k\n2^k\n\u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u5b50\u4e32 \n\u5c0f\u4e8e\u7b49\u4e8e\n \u4ece\nb+2^k\nb+2^k\n\u5f00\u59cb\u7684\n2^k\n2^k\n\u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u5b50\u4e32\n\n\n\u6700\u597d\u7406\u89e3\u8fd9\u4e2a\u4ee3\u7801\u65f6\uff0c\u6bcf\u4e00\u6b65\u90fd\u7ed3\u5408\u8fd9\u57fa\u6570\u6392\u5e8f\u6765\u8003\u8651\n\n\nby \u5468\u8fd0\u6c9b",
            "title": "\u540e\u7f00\u6570\u7ec4\uff08SA\uff09"
        },
        {
            "location": "/string/sa/#1",
            "text": "",
            "title": "1.\u524d\u8a00"
        },
        {
            "location": "/string/sa/#_1",
            "text": "\u5728\u5b57\u7b26\u4e32\u5904\u7406\u5f53\u4e2d\uff0c\u540e\u7f00\u6811\u548c\u540e\u7f00\u6570\u7ec4\u90fd\u662f\u975e\u5e38\u6709\u529b\u7684\u5de5\u5177\u3002\u5176\u5b9e\u540e\u7f00\u6570\u7ec4\u662f\u540e\u7f00\u6811\u7684\u4e00\u4e2a\u975e\u5e38\u7cbe\u5de7\u7684\u66ff\u4ee3\u54c1\uff0c\u5b83\u6bd4\u540e\u7f00\u6811\u5bb9\u6613\u7f16\u7a0b\u5b9e\u73b0\uff0c\u80fd\u591f\u5b9e\u73b0\u540e\u7f00\u6811\u7684\u5f88\u591a\u529f\u80fd\u800c\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u4e0d\u592a\u900a\u8272\uff0c\u5e76\u4e14\uff0c\u5b83\u6bd4\u540e\u7f00\u6811\u6240\u5360\u7528\u7684\u7a7a\u95f4\u5c0f\u5f88\u591a\u3002\u53ef\u4ee5\u8bf4\uff0c\u5728\u4fe1\u606f\u5b66\u7ade\u8d5b\u4e2d\u540e\u7f00\u6570\u7ec4\u6bd4\u540e\u7f00\u6811\u8981\u66f4\u4e3a\u5b9e\u7528\u3002\u2014\u2014\u767e\u5ea6\u767e\u79d1",
            "title": "\u540e\u7f00\u6570\u7ec4\u548c\u540e\u7f00\u6811"
        },
        {
            "location": "/string/sa/#_2",
            "text": "\u5b50\u4e32 \uff1a \u5c31\u662f\u5b50\u4e32[\u6342\u8138]  \u540e\u7f00 \uff1a \u5c31\u662f\u4ece  i i  \u8fd9\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u5230\u8be5\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u7684\u4e00\u4e2a\u5b50\u4e32  \u5b57\u7b26\u4e32\u5927\u5c0f \uff1a  a a  \u548c  b b  \u8fd9\u4e24\u4e2a\u4e32\uff0c\u4ece\u5934\u5f00\u59cb\u9010\u4e2a\u5b57\u7b26\u6309\u7167ASSIC\u7801\u8fdb\u884c\u6bd4\u8f83  \u540e\u7f00\u6570\u7ec4 \uff1a  sa[i] sa[i] \u4ee3\u8868\u8be5\u5b57\u7b26\u4e32\u7684 len len \u4e2a\u540e\u7f00\u4e2d\uff0c\u6392\u540d\u4e3a  i i  \u7684\u540e\u7f00\u662f\u7b2c sa[i] sa[i] \u4e2a\u540e\u7f00  \u540d\u8bcd\u6570\u7ec4 \uff1a  rank[i] rank[i] \u4ee3\u8868\u7b2c  i i  \u4e2a\u540e\u7f00\u6392\u540d\u4e3a rank[i] rank[i]",
            "title": "\u5404\u79cd\u5b9a\u4e49"
        },
        {
            "location": "/string/sa/#2",
            "text": "",
            "title": "2.\u4e00\u4e9b\u6784\u9020\u65b9\u6cd5"
        },
        {
            "location": "/string/sa/#_3",
            "text": "\u628a\u6240\u6709\u7684\u540e\u7f00\u62c6\u51fa\u6765\uff0c\u7136\u540esort  \u601d\u60f3\u8f83\u4e3a\u7b80\u5355\uff0c\u53ef\u81ea\u884c\u5c1d\u8bd5\u5b9e\u73b0  #include   <bits/stdc++.h>  using   namespace   std ;  int   rank [ 123 ],   sa [ 123 ];  struct   Str   { \n     string   s ;   int   wei ; \n     friend   bool   operator   <   ( Str   a1 , Str   a2 )   { \n         return   a1 . s < a2 . s ; \n     }  }   k [ 123 ]   ;  int   main ()  { \n     string   s ; \n     cin   >>   s ; \n     int   len = s . size () - 1 ; \n\n     for   ( int   i = 0 ; i <= len ; i ++ ) \n     { \n         k [ i ]. wei = i ; \n         for   ( int   j = i ; j <= len ; j ++ )  \n             k [ i ]. s = k [ i ]. s + s [ j ]; \n     } \n\n     sort   ( k , k + len + 1 ); \n     for   ( int   i = 0 ; i <= len ; i ++ )   { \n         rank [ k [ i ]. wei ] = i ; \n         sa [ i ] = k [ i ]. wei ; \n     } \n\n     exit ( 0 );  }",
            "title": "\u6700\u7b80\u5355\u7684\u66b4\u529b"
        },
        {
            "location": "/string/sa/#_4",
            "text": "\u8fd9\u4e2a\u5c31\u662f\u4e00\u822c\u4eba\u5199\u540e\u7f00\u6570\u7ec4\u7528\u7684\u65b9\u6cd5  \u590d\u6742\u5ea6\u662f  O(nlogn) O(nlogn)    \u524d\u63d0\u662f\u4f60\u8981\u5148\u4f1a \u57fa\u6570\u6392\u5e8f  \u5047\u8bbe\u6211\u4eec\u6709\u8fd9\u6837\u4e00\u4e2a\u5b57\u7b26\u4e32  aabaaaab  \u7136\u540e\u6211\u4eec\u628a\u6240\u6709\u7684\u540e\u7f00\u5217\u4e3e\u51fa\u6765\uff1a   \u7136\u540e\u7528\u57fa\u6570\u6392\u5e8f\u7684\u65b9\u5f0f\uff0c\u6309\u7167\u6bcf\u4e2a\u540e\u7f00\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u8fdb\u884c\u6392\u5e8f\uff0c\u5448\u73b0\u8fd9\u6837\u5b50\u7684\u6548\u679c\uff1a   \u63a5\u7740\u6211\u4eec\u4ee5\u7b2c\u4e8c\u4e2a\u5b57\u6bcd\u4e3a\u5173\u952e\u5b57\uff0c\u5728\u9996\u5b57\u6bcd\u6709\u5e8f\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u628a\u9996\u5b57\u6bcd\u76f8\u540c\u7684\u540e\u7f00\u62ff\u51fa\u6765\u5355\u770b  \u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u9996\u5b57\u6bcd\u76f8\u540c\u7684\u540e\u7f00\uff0c\u9996\u5b57\u6bcd\u662f\u5bf9\u6392\u5e8f\u6ca1\u6709\u5f71\u54cd\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u6309\u7167\u7b2c\u4e8c\u4e2a\u5b57\u6bcd\u8fdb\u884c\u57fa\u6570\u6392\u5e8f\uff0c\u540c\u6837\uff0c\u5bf9\u4e8e\u9996\u5b57\u6bcd\u4e0d\u540c\u7684\u540e\u7f00\uff0c\u7531\u4e8e\u6309\u7167\u9996\u5b57\u6bcd\u6392\u5e8f\u65f6\uff0c\u4ed6\u4eec\u7684\u76f8\u5bf9\u5927\u5c0f\u5df2\u7ecf\u786e\u5b9a\uff0c\u5f53\u6309\u7167\u7b2c\u4e8c\u4e2a\u5b57\u6bcd\u6392\u5e8f\u65f6\uff0c\u4e0d\u4f1a\u51fa\u73b0 \u539f\u6765a>b\uff0c\u73b0\u5728b>a \u7684\u73b0\u8c61\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u770b\u6210\u4e00\u76f4\u5728\u505a\u533a\u57df\u5185\u7684\u6392\u5e8f\uff0c\u8fd9\u4e4b\u540e\u53d8\u6210\u8fd9\u6837\uff1a   \u7b2c\u4e09\u5b57\u6bcd\u540c\u7406........  \u8fd9\u6837\u5b50\u6211\u4eec\u53ef\u4ee5\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ef\u662f\u590d\u6742\u5ea6\u8fd8\u662f\u6ca1\u6709\u5230\u8fbe\u4e00\u4e2a\u6211\u4eec\u53ef\u4ee5\u63a5\u53d7\u7684\u8303\u56f4  \u6240\u4ee5\u6211\u4eec\u5f15\u5165 \u500d\u589e  \u5f53\u6211\u4eec\u6309\u7167\u6bcf\u4e2a\u540e\u7f00\u7684\u524d  2^k 2^k \u4e2a\u5b57\u6bcd\u8fdb\u884c\u5b8c\u6392\u5e8f\u540e\uff0c\u90a3\u4e48\u6211\u4eec\u628a\u540e\u7f00\u7684\u524d  2^{k+1} 2^{k+1} \u770b\u505a\u524d\u540e\u4e24\u4e2a  2^k 2^k ,\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u8fd9\u524d\u540e\u4e24\u4e2a  2^k 2^k \u4f5c\u4e3a\u4e4b\u524d\u8bf4\u7684 \u9996\u5b57\u6bcd \u548c \u7b2c\u4e8c\u4e2a\u5b57\u6bcd \u4e86\uff0c\u7136\u540e\u8fdb\u884c\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u5c31\u53ef\u4ee5\u5728  O(nlogn) O(nlogn)  \u7684\u590d\u6742\u5ea6\u5185\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u4e86  #include   <bits/stdc++.h>  using   namespace   std ;  int   n ;  int   sa [ 150 ],   x [ 150 ],   c [ 150 ],   y [ 150 ];  char   a [ 150 ];  inline   void   SA   ()   { \n     int   m = 128 ; \n     for   ( int   i = 0 ; i <= m ; i ++ )   c [ i ] = 0 ; \n     for   ( int   i = 1 ; i <= n ; i ++ )   c [ x [ i ]] ++ ; \n     for   ( int   i = 1 ; i <= m ; i ++ )   c [ i ] += c [ i - 1 ]; \n     for   ( int   i = n ; i ; i -- )   sa [ c [ x [ i ]] -- ] = i ; \n\n     for   ( int   k = 1 , p ; k <= n ; k <<= 1 ) \n     { \n         p = 0 ; \n         for   ( int   i = n ; i > n - k ; i -- )   y [ ++ p ] = i ; \n         for   ( int   i = 1 ; i <= n ; i ++ )   if ( sa [ i ] > k )   y [ ++ p ] = sa [ i ] - k ; \n\n         for   ( int   i = 0 ; i <= m ; i ++ )   c [ i ] = 0 ; \n         for   ( int   i = 1 ; i <= n ; i ++ )   c [ x [ i ]] ++ ; \n         for   ( int   i = 1 ; i <= m ; i ++ )   c [ i ] += c [ i - 1 ]; \n         for   ( int   i = n ; i ; i -- )   sa [ c [ x [ y [ i ]]] -- ] = y [ i ]; \n\n         p = y [ sa [ 1 ]] = 1 ; \n         for   ( int   i = 2 , a , b ; i <= n ; i ++ )   { \n             a = sa [ i ] + k > n   ?   - 1   :   x [ sa [ i ] + k ]; \n             b = sa [ i - 1 ] + k > n   ?   - 1   :   x [ sa [ i - 1 ] + k ]; \n             y [ sa [ i ]] =   ( x [ sa [ i ]] == x [ sa [ i - 1 ]])   &&   ( a == b )   ?   p   :   ++ p   ; \n         } \n         swap   ( x , y ); \n         m = p ; \n     }  }  int   main   ()   { \n     scanf ( \"%s\" , a + 1 ); \n\n     n = strlen   ( a + 1 ); \n     for   ( int   i = 1 ; i <= n ; i ++ )   x [ i ] = a [ i ]; \n     SA   (); \n\n     for   ( int   i = 1 ; i <= n ; i ++ )  \n         printf ( \"%d \" , sa [ i ]); \n     exit ( 0 );  }   \u4ee3\u7801\u91cc  x[i] x[i]  \u5c31\u662f  rank[i] rank[i]    y[i] y[i]  \uff1a\u5047\u8bbe  y[i]=a\\ ,\\  y[i+1]=b y[i]=a\\ ,\\  y[i+1]=b  \u90a3\u4e48\u5728\u539f\u4e32\u4e2d \u4ece a+2^k a+2^k \u5f00\u59cb\u7684 2^k 2^k \u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u5b50\u4e32  \u5c0f\u4e8e\u7b49\u4e8e  \u4ece b+2^k b+2^k \u5f00\u59cb\u7684 2^k 2^k \u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u5b50\u4e32  \u6700\u597d\u7406\u89e3\u8fd9\u4e2a\u4ee3\u7801\u65f6\uff0c\u6bcf\u4e00\u6b65\u90fd\u7ed3\u5408\u8fd9\u57fa\u6570\u6392\u5e8f\u6765\u8003\u8651  by \u5468\u8fd0\u6c9b",
            "title": "\u500d\u589e"
        },
        {
            "location": "/string/ac-automaton/",
            "text": "",
            "title": "AC \u81ea\u52a8\u673a"
        },
        {
            "location": "/string/sam/",
            "text": "",
            "title": "\u540e\u7f00\u81ea\u52a8\u673a\uff08SAM\uff09"
        },
        {
            "location": "/string/suffix-tree/",
            "text": "",
            "title": "\u540e\u7f00\u6811"
        },
        {
            "location": "/string/manacher/",
            "text": "",
            "title": "Manacher"
        },
        {
            "location": "/string/minimal-string/",
            "text": "",
            "title": "\u6700\u5c0f\u8868\u793a\u6cd5"
        },
        {
            "location": "/math/",
            "text": "\u8fdb\u5236\u76f8\u5173\n\n\n \u7d20\u6570\n\n\n \u6700\u5927\u516c\u7ea6\u6570\n\n\n \u8d39\u9a6c\u5c0f\u5b9a\u7406\uff08\u6b27\u62c9\u5b9a\u7406\uff09\n\n\n \u5feb\u901f\u5e42\n\n\n \u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\n\n\n \u5206\u6bb5\u6253\u8868\n\n\n \u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\n\n\n \u77e9\u9635\n\n\n \u4f4d\u8fd0\u7b97\n\n\n \u4e58\u6cd5\u9006\u5143\n\n\n \u9636 \u539f\u6839\n\n\n BSGS\n\n\n \u7b5b\u6cd5\n\n\n \u535a\u5f08\u8bba\n\n\n \u6b27\u62c9\u51fd\u6570\n\n\n \u591a\u9879\u5f0f\u9ed1\u79d1\u6280\n\n\n \u5361\u7279\u5170\u6570\n\n\n \u6392\u5217\u7ec4\u5408\n\n\n \u5eb7\u6258\u5c55\u5f00\n\n\n \u6982\u7387\u4e0e\u671f\u671b\n\n\n \u7f6e\u6362\u7fa4\n\n\n \u9ad8\u65af\u6d88\u5143\n\n\n xor\u6a21\u7ebf\u6027\u65b9\u7a0b\u7ec4\n\n\n \u5bb9\u65a5\u539f\u7406\n\n\n \u62bd\u5c49\u539f\u7406\n\n\n \u6570\u503c\u4e0e\u79ef\u5206\n\n\n \u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14\n\n\n \u5feb\u901f\u5085\u91cc\u53f6\u53d8\u6362\n\n\n \u5feb\u901f\u6570\u8bba\u53d8\u6362\n\n\n \u7ebf\u6027\u89c4\u5212\n\n\n \u6742\u9879",
            "title": "\u6570\u5b66\u90e8\u5206\u7b80\u4ecb"
        },
        {
            "location": "/math/base/",
            "text": "",
            "title": "\u8fdb\u5236\u76f8\u5173"
        },
        {
            "location": "/math/prime/",
            "text": "\u6211\u4eec\u8bf4\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u6574\u6570 \nk\nk\n\uff0c\u4f7f\u5f97 \na = kd\na = kd\n\uff0c\u5219\u79f0 d \u6574\u9664 a\uff0c\u8bb0\u505a \nd | a\nd | a\n\uff0c\u79f0 a \u662f d \u7684\u500d\u6570\uff0c\u5982\u679c \nd > 0\nd > 0\n\uff0c\u79f0 d \u662f a \u7684\u7ea6\u6570\u3002\u7279\u522b\u5730\uff0c\u4efb\u4f55\u6574\u6570\u90fd\u6574\u9664 0\u3002\n\n\n\u663e\u7136\u6570 a \u53ef\u4ee5\u88ab 1 \u548c a\uff0c\u5982\u679c\u9664\u6b64\u4e4b\u5916 a \u6ca1\u6709\u5176\u4ed6\u7684\u7ea6\u6570\uff0c\u5219\u79f0 a \u662f\u7d20\u6570\u3002\u4efb\u4f55\u4e00\u4e2a\u5927\u4e8e 1 \u7684\u6574\u6570\u5982\u679c\u4e0d\u662f\u7d20\u6570\uff0c\u5c31\u79f0\u4e3a\u662f\u5408\u6570\u3002\u4e00\u4e2a\u5408\u6570\u662f\u9664\u4e86 1 \u548c\u5b83\u81ea\u8eab\u4ee5\u5916\u8fd8\u6709\u522b\u7684\u7ea6\u6570\u7684\u6570\u30021 \u65e2\u4e0d\u662f\u5408\u6570\u4e5f\u4e0d\u662f\u7ea6\u6570\u3002\n\n\n\u7d20\u6570\u5224\u5b9a\n\u00b6\n\n\n\u6211\u4eec\u81ea\u7136\u5730\u4f1a\u60f3\u5230\uff0c\u5982\u4f55\u7528\u8ba1\u7b97\u673a\u6765\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u4e0d\u662f\u7d20\u6570\u5462\uff1f\n\n\n\u66b4\u529b\u505a\u6cd5\n\u00b6\n\n\n\u81ea\u7136\u53ef\u4ee5\u679a\u4e3e\u4ece\u5c0f\u5230\u5927\u7684\u6bcf\u4e2a\u6570\u770b\u662f\u5426\u80fd\u6574\u9664\n\n\nbool\n \nisPrime\n(\na\n)\n \n{\n\n  \nfor\n \n(\nint\n \ni\n \n=\n \n2\n;\n \ni\n \n<\n \na\n;\n \n++\ni\n)\n \nif\n \n(\na\n \n%\n \ni\n \n==\n \n0\n)\n \nreturn\n \n0\n;\n\n  \nreturn\n \n1\n;\n\n\n}\n\n\n\n\n\n\u8fd9\u6837\u505a\u662f\u5341\u5206\u7a33\u59a5\u4e86\uff0c\u4f46\u662f\u771f\u7684\u6709\u5fc5\u8981\u6bcf\u4e2a\u6570\u90fd\u53bb\u5224\u65ad\u5417\uff1f\n\n\n\u5f88\u5bb9\u6613\u53d1\u73b0\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff1a\u5982\u679c x \u662f a \u7684\u7ea6\u6570\uff0c\u90a3\u4e48 \na / x\na / x\n \u4e5f\u662f a \u7684\u7ea6\u6570\u3002\n\n\n\u8fd9\u4e2a\u7ed3\u8bba\u544a\u8bc9\u6211\u4eec\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5bf9 \n(x, a / x)\n(x, a / x)\n\uff0c\u53ea\u9700\u8981\u68c0\u9a8c\u5176\u4e2d\u7684\u4e00\u4e2a\u5c31\u597d\u4e86\u3002\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u4e4b\u8003\u5bdf\u6bcf\u4e00\u5bf9\u91cc\u9762\u5c0f\u7684\u90a3\u4e2a\u6570\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u6240\u6709\u8fd9\u4e9b\u8f83\u5c0f\u6570\u5c31\u662f \n[1 .. \\sqrt(a)]\n[1 .. \\sqrt(a)]\n \u8fd9\u4e2a\u533a\u95f4\u91cc\u7684\u6570\u3002\n\n\n\u7531\u4e8e 1 \u80af\u5b9a\u662f\u7ea6\u6570\uff0c\u6240\u4ee5\u4e0d\u68c0\u9a8c\u5b83\u3002\n\n\nbool\n \nisPrime\n(\na\n)\n \n{\n\n  \nfor\n \n(\nint\n \ni\n \n=\n \n2\n;\n \ni\n \n*\n \ni\n \n<=\n \na\n;\n \n++\ni\n)\n \nif\n \n(\na\n \n%\n \ni\n)\n \nreturn\n \n0\n;\n\n  \nreturn\n \n1\n;\n\n\n}\n\n\n\n\n\nMiller-Rabbin\n\u00b6\n\n\nMiller-Rabbin \u7b97\u6cd5\u662f\u8fdb\u9636\u7684\u7d20\u6570\u5224\u5b9a\u65b9\u6cd5\uff0c\u5177\u6709\u6bd4\u66b4\u529b\u505a\u6cd5\u66f4\u597d\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u4f46\u662f\u4ee3\u7801\u590d\u6742\u5ea6\u8f83\u9ad8\uff0c\u5728\u6bd4\u8d5b\u4e2d\u4f7f\u7528\u8f83\u5c11\u3002\n\n\n\u5b83\u7684\u57fa\u672c\u601d\u60f3\u662f\u4e0d\u65ad\u5730\u9009\u53d6\u4e0d\u8d85\u8fc7 \nn-1\nn-1\n \u7684\u57fa \nb\nb\n\uff0c\u5e76\u68c0\u9a8c\u662f\u5426\u6bcf\u6b21\u90fd\u6709 \nb^{n-1} \\bmod n = 1\nb^{n-1} \\bmod n = 1\n\n\nbool\n \nmillerRabbin\n(\nint\n \nn\n)\n \n{\n\n  \nfor\n \n(\nint\n \ni\n \n=\n \n1\n;\n \ni\n \n<=\n \ns\n;\n \n++\ni\n)\n \n{\n\n    \nint\n \na\n \n=\n \nrand\n()\n \n%\n \n(\nn\n \n-\n \n2\n)\n \n+\n \n2\n;\n\n    \nif\n \n(\nquickPow\n(\na\n,\n \nn\n \n-\n \n1\n,\n \nn\n)\n \n!=\n \n1\n)\n \nreturn\n \n0\n;\n\n  \n}\n\n  \nreturn\n \n1\n;\n\n\n}",
            "title": "\u7d20\u6570"
        },
        {
            "location": "/math/prime/#_1",
            "text": "\u6211\u4eec\u81ea\u7136\u5730\u4f1a\u60f3\u5230\uff0c\u5982\u4f55\u7528\u8ba1\u7b97\u673a\u6765\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u4e0d\u662f\u7d20\u6570\u5462\uff1f",
            "title": "\u7d20\u6570\u5224\u5b9a"
        },
        {
            "location": "/math/prime/#_2",
            "text": "\u81ea\u7136\u53ef\u4ee5\u679a\u4e3e\u4ece\u5c0f\u5230\u5927\u7684\u6bcf\u4e2a\u6570\u770b\u662f\u5426\u80fd\u6574\u9664  bool   isPrime ( a )   { \n   for   ( int   i   =   2 ;   i   <   a ;   ++ i )   if   ( a   %   i   ==   0 )   return   0 ; \n   return   1 ;  }   \u8fd9\u6837\u505a\u662f\u5341\u5206\u7a33\u59a5\u4e86\uff0c\u4f46\u662f\u771f\u7684\u6709\u5fc5\u8981\u6bcf\u4e2a\u6570\u90fd\u53bb\u5224\u65ad\u5417\uff1f  \u5f88\u5bb9\u6613\u53d1\u73b0\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff1a\u5982\u679c x \u662f a \u7684\u7ea6\u6570\uff0c\u90a3\u4e48  a / x a / x  \u4e5f\u662f a \u7684\u7ea6\u6570\u3002  \u8fd9\u4e2a\u7ed3\u8bba\u544a\u8bc9\u6211\u4eec\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5bf9  (x, a / x) (x, a / x) \uff0c\u53ea\u9700\u8981\u68c0\u9a8c\u5176\u4e2d\u7684\u4e00\u4e2a\u5c31\u597d\u4e86\u3002\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u4e4b\u8003\u5bdf\u6bcf\u4e00\u5bf9\u91cc\u9762\u5c0f\u7684\u90a3\u4e2a\u6570\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u6240\u6709\u8fd9\u4e9b\u8f83\u5c0f\u6570\u5c31\u662f  [1 .. \\sqrt(a)] [1 .. \\sqrt(a)]  \u8fd9\u4e2a\u533a\u95f4\u91cc\u7684\u6570\u3002  \u7531\u4e8e 1 \u80af\u5b9a\u662f\u7ea6\u6570\uff0c\u6240\u4ee5\u4e0d\u68c0\u9a8c\u5b83\u3002  bool   isPrime ( a )   { \n   for   ( int   i   =   2 ;   i   *   i   <=   a ;   ++ i )   if   ( a   %   i )   return   0 ; \n   return   1 ;  }",
            "title": "\u66b4\u529b\u505a\u6cd5"
        },
        {
            "location": "/math/prime/#miller-rabbin",
            "text": "Miller-Rabbin \u7b97\u6cd5\u662f\u8fdb\u9636\u7684\u7d20\u6570\u5224\u5b9a\u65b9\u6cd5\uff0c\u5177\u6709\u6bd4\u66b4\u529b\u505a\u6cd5\u66f4\u597d\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u4f46\u662f\u4ee3\u7801\u590d\u6742\u5ea6\u8f83\u9ad8\uff0c\u5728\u6bd4\u8d5b\u4e2d\u4f7f\u7528\u8f83\u5c11\u3002  \u5b83\u7684\u57fa\u672c\u601d\u60f3\u662f\u4e0d\u65ad\u5730\u9009\u53d6\u4e0d\u8d85\u8fc7  n-1 n-1  \u7684\u57fa  b b \uff0c\u5e76\u68c0\u9a8c\u662f\u5426\u6bcf\u6b21\u90fd\u6709  b^{n-1} \\bmod n = 1 b^{n-1} \\bmod n = 1  bool   millerRabbin ( int   n )   { \n   for   ( int   i   =   1 ;   i   <=   s ;   ++ i )   { \n     int   a   =   rand ()   %   ( n   -   2 )   +   2 ; \n     if   ( quickPow ( a ,   n   -   1 ,   n )   !=   1 )   return   0 ; \n   } \n   return   1 ;  }",
            "title": "Miller-Rabbin"
        },
        {
            "location": "/math/gcd/",
            "text": "\u6700\u5927\u516c\u7ea6\u6570\u5373\u4e3a Greatest Common Divisor\uff0c\u5e38\u7f29\u5199\u4e3a gcd\n\n\n\u5728 \n\u7d20\u6570\n \u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u7ea6\u6570\u7684\u6982\u5ff5\u3002\n\n\n\u4e00\u7ec4\u6570\u7684\u516c\u7ea6\u6570\uff0c\u662f\u6307\u540c\u65f6\u662f\u8fd9\u7ec4\u6570\u4e2d\u6bcf\u4e00\u4e2a\u6570\u7684\u7ea6\u6570\u7684\u6570\u3002\u800c\u6700\u5927\u516c\u7ea6\u6570\uff0c\u5219\u662f\u6307\u6240\u6709\u516c\u7ea6\u6570\u91cc\u9762\u6700\u5927\u7684\u4e00\u4e2a\u3002\n\n\n\u90a3\u4e48\u5982\u4f55\u6c42\u6700\u5927\u516c\u7ea6\u6570\u5462\uff1f\u6211\u4eec\u5148\u8003\u8651\u4e24\u4e2a\u6570\u7684\u60c5\u51b5\u3002\n\n\n\u4e24\u4e2a\u6570\u7684\n\u00b6\n\n\n\u5982\u679c\u6211\u4eec\u5df2\u77e5\u4e24\u4e2a\u6570 a \u548c b\uff0c\u5982\u4f55\u6c42\u51fa\u4e8c\u8005\u7684\u6700\u5927\u516c\u7ea6\u6570\u5462\uff1f\n\n\n\u4e0d\u59a8\u8bbe \na > b\na > b\n\n\n\u6211\u4eec\u53d1\u73b0\u5982\u679c b \u662f a \u7684\u7ea6\u6570\uff0c\u90a3\u4e48 b \u5c31\u662f\u4e8c\u8005\u7684\u6700\u5927\u516c\u7ea6\u6570\u3002\n\u4e0b\u9762\u8ba8\u8bba\u4e0d\u80fd\u6574\u9664\u7684\u60c5\u51b5\uff0c \na = b * q + r\na = b * q + r\n\uff0c\u5176\u4e2d \nr < b\nr < b\n\u3002\n\n\n\u4e0d\u96be\u8bc1\u660e\uff0c\ngcd(a, b) == gcd(b, r)\ngcd(a, b) == gcd(b, r)\n\uff0c\u8fd9\u91cc\u4e24\u4e2a\u6570\u7684\u5927\u5c0f\u662f\u4e0d\u4f1a\u589e\u5927\u7684\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u5173\u4e8e\u4e24\u4e2a\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\u7684\u4e00\u4e2a\u9012\u5f52\u6c42\u6cd5\u3002\n\n\n\u591a\u4e2a\u6570\u7684\n\u00b6\n\n\n\u90a3\u600e\u4e48\u6c42\u591a\u4e2a\u4e66\u7684\u6700\u5927\u516c\u7ea6\u6570\u5462\uff1f\u663e\u7136\u7b54\u6848\u4e00\u5b9a\u662f\u6bcf\u4e2a\u6570\u7684\u7ea6\u6570\uff0c\u90a3\u4e48\u4e5f\u4e00\u5b9a\u662f\u6bcf\u76f8\u90bb\u4e24\u4e2a\u6570\u7684\u7ea6\u6570\u3002\u6211\u4eec\u91c7\u7528\u5f52\u7eb3\u6cd5\uff0c\u53ef\u4ee5\u8bc1\u660e\uff0c\u6bcf\u6b21\u53d6\u51fa\u4e24\u4e2a\u6570\u6c42\u51fa\u7b54\u6848\u540e\u518d\u653e\u56de\u53bb\uff0c\u4e0d\u4f1a\u5bf9\u6240\u9700\u8981\u7684\u7b54\u6848\u9020\u6210\u5f71\u54cd\u3002\n\n\n\u6700\u5c0f\u516c\u500d\u6570\n\u00b6\n\n\n\u4e24\u4e2a\u6570\u7684\n\u00b6\n\n\n\u9996\u5148\u6211\u4eec\u4ecb\u7ecd\u8fd9\u6837\u4e00\u4e2a\u5b9a\u7406 \u2014\u2014 \u7b97\u672f\u57fa\u672c\u5b9a\u7406\uff1a\n\n\n\n\n\u6bcf\u4e00\u4e2a\u6b63\u6574\u6570\u90fd\u53ef\u4ee5\u8868\u793a\u6210\u82e5\u5e72\u6574\u6570\u7684\u4e58\u79ef\uff0c\u8fd9\u79cd\u5206\u89e3\u65b9\u5f0f\u5728\u5ffd\u7565\u6392\u5217\u6b21\u5e8f\u7684\u6761\u4ef6\u4e0b\u662f\u552f\u4e00\u7684\u3002\n\n\n\n\n\u7528\u6570\u5b66\u516c\u5f0f\u6765\u8868\u793a\u5c31\u662f \nx = p_1^{k_1}p_2^{k_2} \\cdots p_s^{k_s}\nx = p_1^{k_1}p_2^{k_2} \\cdots p_s^{k_s}\n\n\n\u8bbe \na = p_{a_1}^{k_{a_1}}p_{a_2}^{k_{a_2}} \\cdots p_{a_s}^{k_{a_s}}\na = p_{a_1}^{k_{a_1}}p_{a_2}^{k_{a_2}} \\cdots p_{a_s}^{k_{a_s}}\n, \nb = p_{b_1}^{k_{b_1}}p_{b_2}^{k_{b_2}} \\cdots p_{b_s}^{k_{b_s}}\nb = p_{b_1}^{k_{b_1}}p_{b_2}^{k_{b_2}} \\cdots p_{b_s}^{k_{b_s}}\n\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e a \u548c b \u7684\u60c5\u51b5\uff0c\u4e8c\u8005\u7684\u6700\u5927\u516c\u7ea6\u6570\u7b49\u4e8e\n\n\n\n\n\np_1^{k_{min\\{a_1, b_1\\}}}p_2^{k_{min\\{a_2, b_2\\}}} \\cdots p_s^{k_{min\\{a_s, b_s\\}}}\n\n\n\n\np_1^{k_{min\\{a_1, b_1\\}}}p_2^{k_{min\\{a_2, b_2\\}}} \\cdots p_s^{k_{min\\{a_s, b_s\\}}}\n\n\n\n\n\n\u6700\u5c0f\u516c\u500d\u6570\u7b49\u4e8e\n\n\n\n\n\np_1^{k_{max\\{a_1, b_1\\}}}p_2^{k_{max\\{a_2, b_2\\}}} \\cdots p_s^{k_{max\\{a_s, b_s\\}}}\n\n\n\n\np_1^{k_{max\\{a_1, b_1\\}}}p_2^{k_{max\\{a_2, b_2\\}}} \\cdots p_s^{k_{max\\{a_s, b_s\\}}}\n\n\n\n\n\n\u7531\u4e8e \na + b = max\\{a, b\\} + min\\{a, b\\}\na + b = max\\{a, b\\} + min\\{a, b\\}\n\n\n\u6240\u4ee5\u5f97\u5230\u7ed3\u8bba\u662f \ngcd(a, b) * lcm(a, b) = a * b\ngcd(a, b) * lcm(a, b) = a * b\n\n\n\u8981\u6c42\u4e24\u4e2a\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\uff0c\u5148\u6c42\u51fa\u6700\u5927\u516c\u7ea6\u6570\u5373\u53ef\u3002\n\n\n\u591a\u4e2a\u6570\u7684\n\u00b6",
            "title": "\u6700\u5927\u516c\u7ea6\u6570"
        },
        {
            "location": "/math/gcd/#_1",
            "text": "\u5982\u679c\u6211\u4eec\u5df2\u77e5\u4e24\u4e2a\u6570 a \u548c b\uff0c\u5982\u4f55\u6c42\u51fa\u4e8c\u8005\u7684\u6700\u5927\u516c\u7ea6\u6570\u5462\uff1f  \u4e0d\u59a8\u8bbe  a > b a > b  \u6211\u4eec\u53d1\u73b0\u5982\u679c b \u662f a \u7684\u7ea6\u6570\uff0c\u90a3\u4e48 b \u5c31\u662f\u4e8c\u8005\u7684\u6700\u5927\u516c\u7ea6\u6570\u3002\n\u4e0b\u9762\u8ba8\u8bba\u4e0d\u80fd\u6574\u9664\u7684\u60c5\u51b5\uff0c  a = b * q + r a = b * q + r \uff0c\u5176\u4e2d  r < b r < b \u3002  \u4e0d\u96be\u8bc1\u660e\uff0c gcd(a, b) == gcd(b, r) gcd(a, b) == gcd(b, r) \uff0c\u8fd9\u91cc\u4e24\u4e2a\u6570\u7684\u5927\u5c0f\u662f\u4e0d\u4f1a\u589e\u5927\u7684\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u5173\u4e8e\u4e24\u4e2a\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\u7684\u4e00\u4e2a\u9012\u5f52\u6c42\u6cd5\u3002",
            "title": "\u4e24\u4e2a\u6570\u7684"
        },
        {
            "location": "/math/gcd/#_2",
            "text": "\u90a3\u600e\u4e48\u6c42\u591a\u4e2a\u4e66\u7684\u6700\u5927\u516c\u7ea6\u6570\u5462\uff1f\u663e\u7136\u7b54\u6848\u4e00\u5b9a\u662f\u6bcf\u4e2a\u6570\u7684\u7ea6\u6570\uff0c\u90a3\u4e48\u4e5f\u4e00\u5b9a\u662f\u6bcf\u76f8\u90bb\u4e24\u4e2a\u6570\u7684\u7ea6\u6570\u3002\u6211\u4eec\u91c7\u7528\u5f52\u7eb3\u6cd5\uff0c\u53ef\u4ee5\u8bc1\u660e\uff0c\u6bcf\u6b21\u53d6\u51fa\u4e24\u4e2a\u6570\u6c42\u51fa\u7b54\u6848\u540e\u518d\u653e\u56de\u53bb\uff0c\u4e0d\u4f1a\u5bf9\u6240\u9700\u8981\u7684\u7b54\u6848\u9020\u6210\u5f71\u54cd\u3002",
            "title": "\u591a\u4e2a\u6570\u7684"
        },
        {
            "location": "/math/gcd/#_3",
            "text": "",
            "title": "\u6700\u5c0f\u516c\u500d\u6570"
        },
        {
            "location": "/math/gcd/#_4",
            "text": "\u9996\u5148\u6211\u4eec\u4ecb\u7ecd\u8fd9\u6837\u4e00\u4e2a\u5b9a\u7406 \u2014\u2014 \u7b97\u672f\u57fa\u672c\u5b9a\u7406\uff1a   \u6bcf\u4e00\u4e2a\u6b63\u6574\u6570\u90fd\u53ef\u4ee5\u8868\u793a\u6210\u82e5\u5e72\u6574\u6570\u7684\u4e58\u79ef\uff0c\u8fd9\u79cd\u5206\u89e3\u65b9\u5f0f\u5728\u5ffd\u7565\u6392\u5217\u6b21\u5e8f\u7684\u6761\u4ef6\u4e0b\u662f\u552f\u4e00\u7684\u3002   \u7528\u6570\u5b66\u516c\u5f0f\u6765\u8868\u793a\u5c31\u662f  x = p_1^{k_1}p_2^{k_2} \\cdots p_s^{k_s} x = p_1^{k_1}p_2^{k_2} \\cdots p_s^{k_s}  \u8bbe  a = p_{a_1}^{k_{a_1}}p_{a_2}^{k_{a_2}} \\cdots p_{a_s}^{k_{a_s}} a = p_{a_1}^{k_{a_1}}p_{a_2}^{k_{a_2}} \\cdots p_{a_s}^{k_{a_s}} ,  b = p_{b_1}^{k_{b_1}}p_{b_2}^{k_{b_2}} \\cdots p_{b_s}^{k_{b_s}} b = p_{b_1}^{k_{b_1}}p_{b_2}^{k_{b_2}} \\cdots p_{b_s}^{k_{b_s}}  \u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e a \u548c b \u7684\u60c5\u51b5\uff0c\u4e8c\u8005\u7684\u6700\u5927\u516c\u7ea6\u6570\u7b49\u4e8e   \np_1^{k_{min\\{a_1, b_1\\}}}p_2^{k_{min\\{a_2, b_2\\}}} \\cdots p_s^{k_{min\\{a_s, b_s\\}}}  \np_1^{k_{min\\{a_1, b_1\\}}}p_2^{k_{min\\{a_2, b_2\\}}} \\cdots p_s^{k_{min\\{a_s, b_s\\}}}   \u6700\u5c0f\u516c\u500d\u6570\u7b49\u4e8e   \np_1^{k_{max\\{a_1, b_1\\}}}p_2^{k_{max\\{a_2, b_2\\}}} \\cdots p_s^{k_{max\\{a_s, b_s\\}}}  \np_1^{k_{max\\{a_1, b_1\\}}}p_2^{k_{max\\{a_2, b_2\\}}} \\cdots p_s^{k_{max\\{a_s, b_s\\}}}   \u7531\u4e8e  a + b = max\\{a, b\\} + min\\{a, b\\} a + b = max\\{a, b\\} + min\\{a, b\\}  \u6240\u4ee5\u5f97\u5230\u7ed3\u8bba\u662f  gcd(a, b) * lcm(a, b) = a * b gcd(a, b) * lcm(a, b) = a * b  \u8981\u6c42\u4e24\u4e2a\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\uff0c\u5148\u6c42\u51fa\u6700\u5927\u516c\u7ea6\u6570\u5373\u53ef\u3002",
            "title": "\u4e24\u4e2a\u6570\u7684"
        },
        {
            "location": "/math/gcd/#_5",
            "text": "",
            "title": "\u591a\u4e2a\u6570\u7684"
        },
        {
            "location": "/math/euler/",
            "text": "\u6b27\u62c9\u51fd\u6570\u662f\u4ec0\u4e48\uff1f \n\\phi(n)\n\\phi(n)\n \u8868\u793a\u7684\u662f\u5c0f\u4e8e\u7b49\u4e8e n \u548c n \u4e92\u8d28\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\n\u6bd4\u5982\u8bf4 \n\\phi(1) = 1\n\\phi(1) = 1\n\u3002\n\n\n\u5f53 n \u662f\u8d28\u6570\u7684\u65f6\u5019\uff0c\u663e\u7136\u6709 \n\\phi(n) = n - 1\n\\phi(n) = n - 1\n\n\n\u5229\u7528\u552f\u4e00\u5206\u89e3\u5b9a\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u4e2a\u6574\u6570\u552f\u4e00\u5730\u5206\u89e3\u4e3a\u8d28\u6570\u5e42\u6b21\u7684\u4e58\u79ef\uff0c\n\n\n\u8bbe \nn = p_1^{k_1}p_2^{k_2} \\cdots p_s^{k_s}\nn = p_1^{k_1}p_2^{k_2} \\cdots p_s^{k_s}\n\uff0c\u5176\u4e2d \np_i\np_i\n \u662f\u8d28\u6570\uff0c\u90a3\u4e48\u5b9a\u4e49 \n\\phi(n) = n * \\prod_{i = 1}^s{\\frac{p_i - 1}{p_i}}\n\\phi(n) = n * \\prod_{i = 1}^s{\\frac{p_i - 1}{p_i}}\n\n\n\u6b27\u62c9\u51fd\u6570\u7684\u4e00\u4e9b\u795e\u5947\u6027\u8d28\n\u00b6\n\n\n\n\n\n\n\u6b27\u62c9\u51fd\u6570\u662f\u79ef\u6027\u51fd\u6570\n\u79ef\u6027\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u5982\u679c\u6709 \ngcd(a, b) = 1\ngcd(a, b) = 1\n\uff0c\u90a3\u4e48 \n\\phi(a * b) = \\phi(a) * \\phi(b)\n\\phi(a * b) = \\phi(a) * \\phi(b)\n\n\u7279\u522b\u5730\uff0c\u5f53 \nn\nn\n \u662f\u5947\u6570\u65f6 \n\\phi(2n) = 2 * \\phi(n)\n\\phi(2n) = 2 * \\phi(n)\n\n\n\n\n\n\nn = \\sum_{d | n}{\\phi(d)}\nn = \\sum_{d | n}{\\phi(d)}\n\n\u5229\u7528 \n\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14\n \u76f8\u5173\u77e5\u8bc6\u53ef\u4ee5\u5f97\u51fa\n\u4e5f\u53ef\u4ee5\u8fd9\u6837\u8003\u8651\uff1a\u5982\u679c \ngcd(k, n) = d\ngcd(k, n) = d\n\uff0c\u90a3\u4e48 \ngcd(k / d, n / d) = 1\ngcd(k / d, n / d) = 1\n\u3002\uff08\nk < n\nk < n\n\uff09\n\u5982\u679c\u6211\u4eec\u8bbe \nf(x)\nf(x)\n \u8868\u793a \ngcd(k, n) = x\ngcd(k, n) = x\n \u7684\u6570\u7684\u4e2a\u6570\uff0c\u90a3\u4e48 \nn = \\sum_{i = 1}^n{f(x)}\nn = \\sum_{i = 1}^n{f(x)}\n\u3002\n\u6839\u636e\u4e0a\u9762\u7684\u8bc1\u660e\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\nf(x) = phi(n / x)\nf(x) = phi(n / x)\n\uff0c\u4ece\u800c \nn = \\sum_{d | n}\\phi(n / d)\nn = \\sum_{d | n}\\phi(n / d)\n\u3002\u6ce8\u610f\u5230\u7ea6\u6570 \nd\nd\n \u548c \nn / d\nn / d\n \u5177\u6709\u5bf9\u79f0\u6027\uff0c\u6240\u4ee5\u4e0a\u5f0f\u5316\u4e3a \nn = \\sum_{d | n}\\phi(d)\nn = \\sum_{d | n}\\phi(d)\n\n\n\n\n\n\n\u82e5 \nn = p^k\nn = p^k\n\uff0c\u5176\u4e2d \np\np\n \u662f\u8d28\u6570\uff0c\u90a3\u4e48 \n\\phi(n) = p^k - p^{k - 1}\n\\phi(n) = p^k - p^{k - 1}\n\u3002\n\uff08\u6839\u636e\u5b9a\u4e49\u53ef\u77e5\uff09\n\n\n\n\n\n\n\u5982\u4f55\u6c42\u6b27\u62c9\u51fd\u6570\u503c\n\u00b6\n\n\n\u5982\u679c\u53ea\u8981\u6c42\u4e00\u4e2a\u6570\u7684\u6b27\u62c9\u51fd\u6570\u503c\uff0c\u90a3\u4e48\u76f4\u63a5\u6839\u636e\u5b9a\u4e49\u8d28\u56e0\u6570\u5206\u89e3\u7684\u540c\u65f6\u6c42\u5c31\u597d\u4e86\n\n\n\u5982\u679c\u662f\u591a\u4e2a\u6570\u7684\u6b27\u62c9\u51fd\u6570\u503c\uff0c\u53ef\u4ee5\u5229\u7528\u540e\u9762\u4f1a\u63d0\u5230\u7684\u7ebf\u6027\u7b5b\u6cd5\u6765\u6c42\u5f97\u3002",
            "title": "\u6b27\u62c9\u51fd\u6570"
        },
        {
            "location": "/math/euler/#_1",
            "text": "\u6b27\u62c9\u51fd\u6570\u662f\u79ef\u6027\u51fd\u6570\n\u79ef\u6027\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u5982\u679c\u6709  gcd(a, b) = 1 gcd(a, b) = 1 \uff0c\u90a3\u4e48  \\phi(a * b) = \\phi(a) * \\phi(b) \\phi(a * b) = \\phi(a) * \\phi(b) \n\u7279\u522b\u5730\uff0c\u5f53  n n  \u662f\u5947\u6570\u65f6  \\phi(2n) = 2 * \\phi(n) \\phi(2n) = 2 * \\phi(n)    n = \\sum_{d | n}{\\phi(d)} n = \\sum_{d | n}{\\phi(d)} \n\u5229\u7528  \u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14  \u76f8\u5173\u77e5\u8bc6\u53ef\u4ee5\u5f97\u51fa\n\u4e5f\u53ef\u4ee5\u8fd9\u6837\u8003\u8651\uff1a\u5982\u679c  gcd(k, n) = d gcd(k, n) = d \uff0c\u90a3\u4e48  gcd(k / d, n / d) = 1 gcd(k / d, n / d) = 1 \u3002\uff08 k < n k < n \uff09\n\u5982\u679c\u6211\u4eec\u8bbe  f(x) f(x)  \u8868\u793a  gcd(k, n) = x gcd(k, n) = x  \u7684\u6570\u7684\u4e2a\u6570\uff0c\u90a3\u4e48  n = \\sum_{i = 1}^n{f(x)} n = \\sum_{i = 1}^n{f(x)} \u3002\n\u6839\u636e\u4e0a\u9762\u7684\u8bc1\u660e\uff0c\u6211\u4eec\u53d1\u73b0\uff0c f(x) = phi(n / x) f(x) = phi(n / x) \uff0c\u4ece\u800c  n = \\sum_{d | n}\\phi(n / d) n = \\sum_{d | n}\\phi(n / d) \u3002\u6ce8\u610f\u5230\u7ea6\u6570  d d  \u548c  n / d n / d  \u5177\u6709\u5bf9\u79f0\u6027\uff0c\u6240\u4ee5\u4e0a\u5f0f\u5316\u4e3a  n = \\sum_{d | n}\\phi(d) n = \\sum_{d | n}\\phi(d)    \u82e5  n = p^k n = p^k \uff0c\u5176\u4e2d  p p  \u662f\u8d28\u6570\uff0c\u90a3\u4e48  \\phi(n) = p^k - p^{k - 1} \\phi(n) = p^k - p^{k - 1} \u3002\n\uff08\u6839\u636e\u5b9a\u4e49\u53ef\u77e5\uff09",
            "title": "\u6b27\u62c9\u51fd\u6570\u7684\u4e00\u4e9b\u795e\u5947\u6027\u8d28"
        },
        {
            "location": "/math/euler/#_2",
            "text": "\u5982\u679c\u53ea\u8981\u6c42\u4e00\u4e2a\u6570\u7684\u6b27\u62c9\u51fd\u6570\u503c\uff0c\u90a3\u4e48\u76f4\u63a5\u6839\u636e\u5b9a\u4e49\u8d28\u56e0\u6570\u5206\u89e3\u7684\u540c\u65f6\u6c42\u5c31\u597d\u4e86  \u5982\u679c\u662f\u591a\u4e2a\u6570\u7684\u6b27\u62c9\u51fd\u6570\u503c\uff0c\u53ef\u4ee5\u5229\u7528\u540e\u9762\u4f1a\u63d0\u5230\u7684\u7ebf\u6027\u7b5b\u6cd5\u6765\u6c42\u5f97\u3002",
            "title": "\u5982\u4f55\u6c42\u6b27\u62c9\u51fd\u6570\u503c"
        },
        {
            "location": "/math/sieve/",
            "text": "\u7d20\u6570\u7b5b\u6cd5\n\u00b6\n\n\n\u5982\u679c\u6211\u4eec\u60f3\u8981\u77e5\u9053\u5c0f\u4e8e\u7b49\u4e8e n \u6709\u591a\u5c11\u4e2a\u7d20\u6570\u5462\uff1f\n\n\n\u4e00\u4e2a\u81ea\u7136\u7684\u60f3\u6cd5\u662f\u6211\u4eec\u5bf9\u4e8e\u5c0f\u4e8e\u7b49\u4e8e n \u7684\u6bcf\u4e2a\u6570\u8fdb\u884c\u4e00\u6b21\u5224\u5b9a\u3002\u8fd9\u79cd\u66b4\u529b\u7684\u505a\u6cd5\u663e\u7136\u4e0d\u80fd\u8fbe\u5230\u6700\u4f18\u590d\u6742\u5ea6\uff0c\u8003\u8651\u5982\u4f55\u4f18\u5316\u5462\u3002\n\n\n\u8003\u8651\u8fd9\u6837\u4e00\u4ef6\u4e8b\u60c5\uff1a\u5982\u679c x \u662f\u5408\u6570\uff0c\u90a3\u4e48 x \u7684\u500d\u6570\u4e5f\u4e00\u5b9a\u662f\u5408\u6570\u3002\u5229\u7528\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u907f\u514d\u5f88\u591a\u6b21\u4e0d\u5fc5\u8981\u7684\u68c0\u6d4b\u3002\n\n\n\u5982\u679c\u6211\u4eec\u4ece\u5c0f\u5230\u5927\u8003\u8651\u6bcf\u4e2a\u6570\uff0c\u7136\u540e\u540c\u65f6\u628a\u5f53\u524d\u8fd9\u4e2a\u6570\u7684\u6240\u6709\uff08\u6bd4\u81ea\u5df1\u5927\u7684\uff09\u500d\u6570\u8bb0\u4e3a\u5408\u6570\uff0c\u90a3\u4e48\u8fd0\u884c\u7ed3\u675f\u7684\u65f6\u5019\u6ca1\u6709\u88ab\u6807\u8bb0\u7684\u6570\u5c31\u662f\u7d20\u6570\u4e86\u3002\n\n\nvoid\n \ngenPrimes\n()\n \n{\n\n  \nfor\n \n(\nint\n \ni\n \n=\n \n2\n;\n \ni\n \n<=\n \nn\n;\n \n++\ni\n)\n \n{\n\n    \nif\n \n(\n!\nvis\n[\ni\n])\n \npri\n[\ncnt\n++\n]\n \n=\n \ni\n;\n\n    \nfor\n \n(\nint\n \nj\n \n=\n \n0\n;\n \nj\n \n<\n \ncnt\n;\n \n++\nj\n)\n \n{\n\n      \nif\n \n(\ni\n \n*\n \npri\n[\nj\n]\n \n>\n \nn\n)\n \nbreak\n;\n\n      \nvis\n[\ni\n \n*\n \npri\n[\nj\n]]\n \n=\n \n1\n;\n\n      \nif\n \n(\ni\n \n%\n \npri\n[\nj\n]\n \n==\n \n0\n)\n \nbreak\n;\n\n    \n}\n\n  \n}\n\n\n}\n\n\n\n\n\n\u8fd9\u4e2a\u7b5b\u6cd5\u88ab\u6210\u4e3a eratosthenes \uff08\u5ff5\u4f5c\u201c\u57c3\u62c9\u6258\u65af\u7279\u5c3c\u201d\uff09\u7b5b\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f \nO(nloglogn)\nO(nloglogn)\n\u3002\n\n\n\u4ee5\u4e0a\u505a\u6cd5\u4ecd\u6709\u4f18\u5316\u7a7a\u95f4\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u91cc\u9762\u4f3c\u4e4e\u4f1a\u5bf9\u67d0\u4e9b\u6570\u6807\u8bb0\u4e86\u5f88\u591a\u6b21\u5176\u4e3a\u5408\u6570\u3002\u6709\u6ca1\u6709\u4ec0\u4e48\u529e\u6cd5\u7701\u6389\u65e0\u610f\u4e49\u7684\u6b65\u9aa4\u5462\uff1f\n\n\n\u7b54\u6848\u5f53\u7136\u662f\uff1a\u6709\uff01\n\n\n\u5982\u679c\u80fd\u8ba9\u6bcf\u4e2a\u5408\u6570\u90fd\u53ea\u88ab\u6807\u8bb0\u4e00\u6b21\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u53ef\u4ee5\u964d\u5230 \nO(n)\nO(n)\n \u4e86\n\n\nvoid\n \ninit\n()\n \n{\n\n    \nphi\n[\n1\n]\n \n=\n \n1\n;\n\n    \nf\n(\ni\n,\n \n2\n,\n \nMAXN\n)\n \n{\n\n        \nif\n \n(\n!\nvis\n[\ni\n])\n \n{\n\n            \nphi\n[\ni\n]\n \n=\n \ni\n \n-\n \n1\n;\n \npri\n[\ncnt\n++\n]\n \n=\n \ni\n;\n\n        \n}\n\n        \nf\n(\nj\n,\n \n0\n,\n \ncnt\n)\n \n{\n\n            \nif\n \n((\nLL\n)\ni\n \n*\n \npri\n[\nj\n]\n \n>=\n \nMAXN\n)\n \nbreak\n;\n\n            \nvis\n[\ni\n \n*\n \npri\n[\nj\n]]\n \n=\n \n1\n;\n\n            \nif\n \n(\ni\n \n%\n \npri\n[\nj\n])\n \n{\n\n                \nphi\n[\ni\n \n*\n \npri\n[\nj\n]]\n \n=\n \nphi\n[\ni\n]\n \n*\n \n(\npri\n[\nj\n]\n \n-\n \n1\n);\n\n            \n}\n \nelse\n \n{\n\n        \n// i % pri[j] == 0\n\n        \n// \u6362\u8a00\u4e4b\uff0ci \u4e4b\u524d\u88ab pri[j] \u7b5b\u8fc7\u4e86\n\n        \n// \u7531\u4e8e pri \u91cc\u9762\u8d28\u6570\u662f\u4ece\u5c0f\u5230\u5927\u7684\uff0c\u6240\u4ee5 i \u4e58\u4e0a\u5176\u4ed6\u7684\u8d28\u6570\u7684\u7ed3\u679c\u4e00\u5b9a\u4e5f\u662f pri[j] \u7684\u500d\u6570\n\n        \n// \u5b83\u4eec\u90fd\u88ab\u7b5b\u8fc7\u4e86\uff0c\u5c31\u4e0d\u9700\u8981\u518d\u7b5b\u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u76f4\u63a5 break \u6389\u5c31\u597d\u4e86\n\n                \nphi\n[\ni\n \n*\n \npri\n[\nj\n]]\n \n=\n \nphi\n[\ni\n]\n \n*\n \npri\n[\nj\n];\n\n                \nbreak\n;\n\n            \n}\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684 phi \u6570\u7ec4\uff0c\u4f1a\u5728\u4e0b\u9762\u63d0\u5230\u3002\n\n\n\u8fd9\u79cd\u7ebf\u6027\u7b5b\u4e5f\u79f0\u4e3a\u6b27\u62c9\u7b5b\u6cd5\n\n\n\u7b5b\u6cd5\u6c42\u6b27\u62c9\u51fd\u6570\n\u00b6\n\n\n\u6ce8\u610f\u5230\u5728\u7ebf\u6027\u7b5b\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u5408\u6570\u90fd\u662f\u88ab\u6700\u5c0f\u7684\u8d28\u56e0\u5b50\u7b5b\u6389\u3002\u6bd4\u5982\u8bbe \np_1\np_1\n \u662f \nn\nn\n \u7684\u6700\u5c0f\u8d28\u56e0\u5b50\uff0c\nn' = \\frac{n}{p_1}\nn' = \\frac{n}{p_1}\n\uff0c\u90a3\u4e48\u7ebf\u6027\u7b5b\u7684\u8fc7\u7a0b\u4e2d \nn\nn\n \u901a\u8fc7 \nn' * p_1\nn' * p_1\n \u7b5b\u6389\u3002\n\n\n\u89c2\u5bdf\u7ebf\u6027\u7b5b\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5904\u7406\u4e24\u4e2a\u90e8\u5206\uff0c\u4e0b\u9762\u5bf9\nn' \\bmod p_1\nn' \\bmod p_1\n \u5206\u60c5\u51b5\u8ba8\u8bba\u3002\n\n\n\u5982\u679c \nn' \\bmod p_1 = 0\nn' \\bmod p_1 = 0\n\uff0c\u90a3\u4e48 \nn'\nn'\n \u5305\u542b\u4e86 \nn\nn\n \u7684\u6240\u6709\u8d28\u56e0\u5b50\u3002\n\n\n\n\n\n\\begin{aligned}\n\\phi(n) & = n * \\prod_{i = 1}^s{\\frac{p_i - 1}{p_i}} \\\\\\\\\n& = p_1 * n' * \\prod_{i = 1}^s{\\frac{p_i - 1}{p_i}} \\\\\\\\\n& = p_1 * \\phi(n')\n\\end{aligned}\n\n\n\n\n\\begin{aligned}\n\\phi(n) & = n * \\prod_{i = 1}^s{\\frac{p_i - 1}{p_i}} \\\\\\\\\n& = p_1 * n' * \\prod_{i = 1}^s{\\frac{p_i - 1}{p_i}} \\\\\\\\\n& = p_1 * \\phi(n')\n\\end{aligned}\n\n\n\n\n\n\u90a3\u5982\u679c \nn' \\bmod p_1 \\neq 0\nn' \\bmod p_1 \\neq 0\n \u5462\uff0c\u8fd9\u65f6 \nn'\nn'\n \u548c \nn\nn\n \u662f\u4e92\u8d28\u7684\uff0c\u6839\u636e\u6b27\u62c9\u51fd\u6570\u6027\u8d28\uff0c\u6211\u4eec\u6709\uff1a\n\n\n\n\n\n\\begin{aligned}\n\\phi(n) & = \\phi(p_1) * \\phi(n') \\\\\\\\\n& = (p_1 - 1) * \\phi(n')\n\\end{aligned}\n\n\n\n\n\\begin{aligned}\n\\phi(n) & = \\phi(p_1) * \\phi(n') \\\\\\\\\n& = (p_1 - 1) * \\phi(n')\n\\end{aligned}\n\n\n\n\n\n\u7b5b\u6cd5\u6c42\u83ab\u6bd4\u4e4c\u65af\u51fd\u6570\n\u00b6\n\n\n\u7b5b\u6cd5\u6c42\u7ea6\u6570\u4e2a\u6570\n\u00b6\n\n\n\u5176\u4ed6\u7ebf\u6027\u51fd\u6570\n\u00b6",
            "title": "\u7b5b\u6cd5"
        },
        {
            "location": "/math/sieve/#_1",
            "text": "\u5982\u679c\u6211\u4eec\u60f3\u8981\u77e5\u9053\u5c0f\u4e8e\u7b49\u4e8e n \u6709\u591a\u5c11\u4e2a\u7d20\u6570\u5462\uff1f  \u4e00\u4e2a\u81ea\u7136\u7684\u60f3\u6cd5\u662f\u6211\u4eec\u5bf9\u4e8e\u5c0f\u4e8e\u7b49\u4e8e n \u7684\u6bcf\u4e2a\u6570\u8fdb\u884c\u4e00\u6b21\u5224\u5b9a\u3002\u8fd9\u79cd\u66b4\u529b\u7684\u505a\u6cd5\u663e\u7136\u4e0d\u80fd\u8fbe\u5230\u6700\u4f18\u590d\u6742\u5ea6\uff0c\u8003\u8651\u5982\u4f55\u4f18\u5316\u5462\u3002  \u8003\u8651\u8fd9\u6837\u4e00\u4ef6\u4e8b\u60c5\uff1a\u5982\u679c x \u662f\u5408\u6570\uff0c\u90a3\u4e48 x \u7684\u500d\u6570\u4e5f\u4e00\u5b9a\u662f\u5408\u6570\u3002\u5229\u7528\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u907f\u514d\u5f88\u591a\u6b21\u4e0d\u5fc5\u8981\u7684\u68c0\u6d4b\u3002  \u5982\u679c\u6211\u4eec\u4ece\u5c0f\u5230\u5927\u8003\u8651\u6bcf\u4e2a\u6570\uff0c\u7136\u540e\u540c\u65f6\u628a\u5f53\u524d\u8fd9\u4e2a\u6570\u7684\u6240\u6709\uff08\u6bd4\u81ea\u5df1\u5927\u7684\uff09\u500d\u6570\u8bb0\u4e3a\u5408\u6570\uff0c\u90a3\u4e48\u8fd0\u884c\u7ed3\u675f\u7684\u65f6\u5019\u6ca1\u6709\u88ab\u6807\u8bb0\u7684\u6570\u5c31\u662f\u7d20\u6570\u4e86\u3002  void   genPrimes ()   { \n   for   ( int   i   =   2 ;   i   <=   n ;   ++ i )   { \n     if   ( ! vis [ i ])   pri [ cnt ++ ]   =   i ; \n     for   ( int   j   =   0 ;   j   <   cnt ;   ++ j )   { \n       if   ( i   *   pri [ j ]   >   n )   break ; \n       vis [ i   *   pri [ j ]]   =   1 ; \n       if   ( i   %   pri [ j ]   ==   0 )   break ; \n     } \n   }  }   \u8fd9\u4e2a\u7b5b\u6cd5\u88ab\u6210\u4e3a eratosthenes \uff08\u5ff5\u4f5c\u201c\u57c3\u62c9\u6258\u65af\u7279\u5c3c\u201d\uff09\u7b5b\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f  O(nloglogn) O(nloglogn) \u3002  \u4ee5\u4e0a\u505a\u6cd5\u4ecd\u6709\u4f18\u5316\u7a7a\u95f4\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u91cc\u9762\u4f3c\u4e4e\u4f1a\u5bf9\u67d0\u4e9b\u6570\u6807\u8bb0\u4e86\u5f88\u591a\u6b21\u5176\u4e3a\u5408\u6570\u3002\u6709\u6ca1\u6709\u4ec0\u4e48\u529e\u6cd5\u7701\u6389\u65e0\u610f\u4e49\u7684\u6b65\u9aa4\u5462\uff1f  \u7b54\u6848\u5f53\u7136\u662f\uff1a\u6709\uff01  \u5982\u679c\u80fd\u8ba9\u6bcf\u4e2a\u5408\u6570\u90fd\u53ea\u88ab\u6807\u8bb0\u4e00\u6b21\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u53ef\u4ee5\u964d\u5230  O(n) O(n)  \u4e86  void   init ()   { \n     phi [ 1 ]   =   1 ; \n     f ( i ,   2 ,   MAXN )   { \n         if   ( ! vis [ i ])   { \n             phi [ i ]   =   i   -   1 ;   pri [ cnt ++ ]   =   i ; \n         } \n         f ( j ,   0 ,   cnt )   { \n             if   (( LL ) i   *   pri [ j ]   >=   MAXN )   break ; \n             vis [ i   *   pri [ j ]]   =   1 ; \n             if   ( i   %   pri [ j ])   { \n                 phi [ i   *   pri [ j ]]   =   phi [ i ]   *   ( pri [ j ]   -   1 ); \n             }   else   { \n         // i % pri[j] == 0 \n         // \u6362\u8a00\u4e4b\uff0ci \u4e4b\u524d\u88ab pri[j] \u7b5b\u8fc7\u4e86 \n         // \u7531\u4e8e pri \u91cc\u9762\u8d28\u6570\u662f\u4ece\u5c0f\u5230\u5927\u7684\uff0c\u6240\u4ee5 i \u4e58\u4e0a\u5176\u4ed6\u7684\u8d28\u6570\u7684\u7ed3\u679c\u4e00\u5b9a\u4e5f\u662f pri[j] \u7684\u500d\u6570 \n         // \u5b83\u4eec\u90fd\u88ab\u7b5b\u8fc7\u4e86\uff0c\u5c31\u4e0d\u9700\u8981\u518d\u7b5b\u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u76f4\u63a5 break \u6389\u5c31\u597d\u4e86 \n                 phi [ i   *   pri [ j ]]   =   phi [ i ]   *   pri [ j ]; \n                 break ; \n             } \n         } \n     }  }   \u4e0a\u9762\u4ee3\u7801\u4e2d\u7684 phi \u6570\u7ec4\uff0c\u4f1a\u5728\u4e0b\u9762\u63d0\u5230\u3002  \u8fd9\u79cd\u7ebf\u6027\u7b5b\u4e5f\u79f0\u4e3a\u6b27\u62c9\u7b5b\u6cd5",
            "title": "\u7d20\u6570\u7b5b\u6cd5"
        },
        {
            "location": "/math/sieve/#_2",
            "text": "\u6ce8\u610f\u5230\u5728\u7ebf\u6027\u7b5b\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u5408\u6570\u90fd\u662f\u88ab\u6700\u5c0f\u7684\u8d28\u56e0\u5b50\u7b5b\u6389\u3002\u6bd4\u5982\u8bbe  p_1 p_1  \u662f  n n  \u7684\u6700\u5c0f\u8d28\u56e0\u5b50\uff0c n' = \\frac{n}{p_1} n' = \\frac{n}{p_1} \uff0c\u90a3\u4e48\u7ebf\u6027\u7b5b\u7684\u8fc7\u7a0b\u4e2d  n n  \u901a\u8fc7  n' * p_1 n' * p_1  \u7b5b\u6389\u3002  \u89c2\u5bdf\u7ebf\u6027\u7b5b\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5904\u7406\u4e24\u4e2a\u90e8\u5206\uff0c\u4e0b\u9762\u5bf9 n' \\bmod p_1 n' \\bmod p_1  \u5206\u60c5\u51b5\u8ba8\u8bba\u3002  \u5982\u679c  n' \\bmod p_1 = 0 n' \\bmod p_1 = 0 \uff0c\u90a3\u4e48  n' n'  \u5305\u542b\u4e86  n n  \u7684\u6240\u6709\u8d28\u56e0\u5b50\u3002   \n\\begin{aligned}\n\\phi(n) & = n * \\prod_{i = 1}^s{\\frac{p_i - 1}{p_i}} \\\\\\\\\n& = p_1 * n' * \\prod_{i = 1}^s{\\frac{p_i - 1}{p_i}} \\\\\\\\\n& = p_1 * \\phi(n')\n\\end{aligned}  \n\\begin{aligned}\n\\phi(n) & = n * \\prod_{i = 1}^s{\\frac{p_i - 1}{p_i}} \\\\\\\\\n& = p_1 * n' * \\prod_{i = 1}^s{\\frac{p_i - 1}{p_i}} \\\\\\\\\n& = p_1 * \\phi(n')\n\\end{aligned}   \u90a3\u5982\u679c  n' \\bmod p_1 \\neq 0 n' \\bmod p_1 \\neq 0  \u5462\uff0c\u8fd9\u65f6  n' n'  \u548c  n n  \u662f\u4e92\u8d28\u7684\uff0c\u6839\u636e\u6b27\u62c9\u51fd\u6570\u6027\u8d28\uff0c\u6211\u4eec\u6709\uff1a   \n\\begin{aligned}\n\\phi(n) & = \\phi(p_1) * \\phi(n') \\\\\\\\\n& = (p_1 - 1) * \\phi(n')\n\\end{aligned}  \n\\begin{aligned}\n\\phi(n) & = \\phi(p_1) * \\phi(n') \\\\\\\\\n& = (p_1 - 1) * \\phi(n')\n\\end{aligned}",
            "title": "\u7b5b\u6cd5\u6c42\u6b27\u62c9\u51fd\u6570"
        },
        {
            "location": "/math/sieve/#_3",
            "text": "",
            "title": "\u7b5b\u6cd5\u6c42\u83ab\u6bd4\u4e4c\u65af\u51fd\u6570"
        },
        {
            "location": "/math/sieve/#_4",
            "text": "",
            "title": "\u7b5b\u6cd5\u6c42\u7ea6\u6570\u4e2a\u6570"
        },
        {
            "location": "/math/sieve/#_5",
            "text": "",
            "title": "\u5176\u4ed6\u7ebf\u6027\u51fd\u6570"
        },
        {
            "location": "/math/mobius/",
            "text": "",
            "title": "\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14"
        },
        {
            "location": "/math/fermat/",
            "text": "\u8d39\u9a6c\u5c0f\u5b9a\u7406\n\u00b6\n\n\n\u82e5 \np\np\n \u4e3a\u7d20\u6570\uff0c\ngcd(a, p) = 1\ngcd(a, p) = 1\n\uff0c\u5219 \na^{p - 1} \\equiv 1 \\pmod{p}\na^{p - 1} \\equiv 1 \\pmod{p}\n\u3002\n\n\n\u53e6\u4e00\u4e2a\u5f62\u5f0f\uff1a\u5bf9\u4e8e\u4efb\u610f\u6574\u6570 \na\na\n\uff0c\u6709 \na^p \\equiv a \\pmod{p}\na^p \\equiv a \\pmod{p}\n\u3002\n\n\n\u6b27\u62c9\u5b9a\u7406\n\u00b6\n\n\n\u82e5 \ngcd(a, m) = 1\ngcd(a, m) = 1\n\uff0c\u5219 \na^{\\phi(m)} \\equiv 1 \\pmod{m}\na^{\\phi(m)} \\equiv 1 \\pmod{m}\n\u3002\n\n\n\u8bc1\u660e\n\u00b6\n\n\n\u8bbe \nr_1, r_2, \\cdots, r_{\\phi(m)}\nr_1, r_2, \\cdots, r_{\\phi(m)}\n \u4e3a\u6a21 \nm\nm\n \u610f\u4e49\u4e0b\u7684\u4e00\u4e2a\u7b80\u5316\u5269\u4f59\u7cfb\uff0c\u5219 \nar_1, ar_2, \\cdots, ar_{\\phi(m)}\nar_1, ar_2, \\cdots, ar_{\\phi(m)}\n \u4e5f\u4e3a\u6a21 \nm\nm\n \u610f\u4e49\u4e0b\u7684\u4e00\u4e2a\u7b80\u5316\u5269\u4f59\u7cfb\u3002\u6240\u4ee5 \nr_1r_2 \\cdots r_{\\phi(m)} \\equiv ar_1 \\cdot ar_2 \\cdots ar_{\\phi(m)} = a^{\\phi(m)}r_1r_2 \\cdots r_{\\phi(m)} \\pmod{m}\nr_1r_2 \\cdots r_{\\phi(m)} \\equiv ar_1 \\cdot ar_2 \\cdots ar_{\\phi(m)} = a^{\\phi(m)}r_1r_2 \\cdots r_{\\phi(m)} \\pmod{m}\n\uff0c\u53ef\u7ea6\u53bb \nr_1r_2 \\cdots r_{\\phi(m)}\nr_1r_2 \\cdots r_{\\phi(m)}\n\uff0c\u5373\u5f97 \na^{\\phi(m)} \\equiv 1 \\pmod{m}\na^{\\phi(m)} \\equiv 1 \\pmod{m}\n\u3002\n\n\n\u5f53 \nm\nm\n \u4e3a\u7d20\u6570\u65f6\uff0c\u7531\u4e8e \n\\phi(m) = m - 1\n\\phi(m) = m - 1\n\uff0c\u4ee3\u5165\u6b27\u62c9\u5b9a\u7406\u53ef\u7acb\u5373\u5f97\u5230\u8d39\u9a6c\u5c0f\u5b9a\u7406\u3002",
            "title": "\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff08\u6b27\u62c9\u5b9a\u7406\uff09"
        },
        {
            "location": "/math/fermat/#_1",
            "text": "\u82e5  p p  \u4e3a\u7d20\u6570\uff0c gcd(a, p) = 1 gcd(a, p) = 1 \uff0c\u5219  a^{p - 1} \\equiv 1 \\pmod{p} a^{p - 1} \\equiv 1 \\pmod{p} \u3002  \u53e6\u4e00\u4e2a\u5f62\u5f0f\uff1a\u5bf9\u4e8e\u4efb\u610f\u6574\u6570  a a \uff0c\u6709  a^p \\equiv a \\pmod{p} a^p \\equiv a \\pmod{p} \u3002",
            "title": "\u8d39\u9a6c\u5c0f\u5b9a\u7406"
        },
        {
            "location": "/math/fermat/#_2",
            "text": "\u82e5  gcd(a, m) = 1 gcd(a, m) = 1 \uff0c\u5219  a^{\\phi(m)} \\equiv 1 \\pmod{m} a^{\\phi(m)} \\equiv 1 \\pmod{m} \u3002",
            "title": "\u6b27\u62c9\u5b9a\u7406"
        },
        {
            "location": "/math/fermat/#_3",
            "text": "\u8bbe  r_1, r_2, \\cdots, r_{\\phi(m)} r_1, r_2, \\cdots, r_{\\phi(m)}  \u4e3a\u6a21  m m  \u610f\u4e49\u4e0b\u7684\u4e00\u4e2a\u7b80\u5316\u5269\u4f59\u7cfb\uff0c\u5219  ar_1, ar_2, \\cdots, ar_{\\phi(m)} ar_1, ar_2, \\cdots, ar_{\\phi(m)}  \u4e5f\u4e3a\u6a21  m m  \u610f\u4e49\u4e0b\u7684\u4e00\u4e2a\u7b80\u5316\u5269\u4f59\u7cfb\u3002\u6240\u4ee5  r_1r_2 \\cdots r_{\\phi(m)} \\equiv ar_1 \\cdot ar_2 \\cdots ar_{\\phi(m)} = a^{\\phi(m)}r_1r_2 \\cdots r_{\\phi(m)} \\pmod{m} r_1r_2 \\cdots r_{\\phi(m)} \\equiv ar_1 \\cdot ar_2 \\cdots ar_{\\phi(m)} = a^{\\phi(m)}r_1r_2 \\cdots r_{\\phi(m)} \\pmod{m} \uff0c\u53ef\u7ea6\u53bb  r_1r_2 \\cdots r_{\\phi(m)} r_1r_2 \\cdots r_{\\phi(m)} \uff0c\u5373\u5f97  a^{\\phi(m)} \\equiv 1 \\pmod{m} a^{\\phi(m)} \\equiv 1 \\pmod{m} \u3002  \u5f53  m m  \u4e3a\u7d20\u6570\u65f6\uff0c\u7531\u4e8e  \\phi(m) = m - 1 \\phi(m) = m - 1 \uff0c\u4ee3\u5165\u6b27\u62c9\u5b9a\u7406\u53ef\u7acb\u5373\u5f97\u5230\u8d39\u9a6c\u5c0f\u5b9a\u7406\u3002",
            "title": "\u8bc1\u660e"
        },
        {
            "location": "/math/quick-pow/",
            "text": "\u5feb\u901f\u5e42\uff0c\u662f\u4e00\u79cd\u6c42 \na^b \\bmod p\na^b \\bmod p\n \u7684\u65b9\u6cd5\uff0c\u5f97\u76ca\u4e8e\u5c06\u6307\u6570\u6309\u4e8c\u8fdb\u5236\u62c6\u5f00\u7684\u601d\u60f3\u3002\n\n\n\u4e8b\u5b9e\u4e0a\uff0c\u6839\u636e\u6a21\u8fd0\u7b97\u7684\u6027\u8d28\uff0c\na * b \\bmod p = ((a \\bmod p) * b) \\bmod p\na * b \\bmod p = ((a \\bmod p) * b) \\bmod p\n\u3002\u90a3\u4e48\u6211\u4eec\u4e5f\u53ef\u4ee5\u628a2 \na^b \\mod p\na^b \\mod p\n \u5206\u89e3\u6210\u4e00\u7cfb\u5217\u6bd4\u8f83\u5c0f\u7684\u6570\u7684\u4e58\u79ef\u3002\n\n\n\u5982\u679c\u628a \nb\nb\n \u5199\u4f5c\u4e8c\u8fdb\u5236\u4e3a \na_ta_{t-1} \\cdots a_1a_0\na_ta_{t-1} \\cdots a_1a_0\n\uff0c\u90a3\u4e48\u6709\uff1a\n\n\n\n\n\nb = a_t2^2 + a_{t-1}2^{t-1} + a_{t-2}2^{t-2} + \\cdots + a_12^1 + a_02^0\n\n\n\n\nb = a_t2^2 + a_{t-1}2^{t-1} + a_{t-2}2^{t-2} + \\cdots + a_12^1 + a_02^0\n\n\n\n\n\n\uff0c\u5176\u4e2d \na_i\na_i\n \u662f 0 \u6216\u8005 1\u3002\n\u90a3\u4e48\u5c31\u6709\n\n\n\n\n\n\\begin{aligned}\na^b \\bmod p & = (a^{a_t 2^t + \\cdots + a_0 2^0}) \\bmod p \\\\\\\\\n& = (..(a^{a_0 2^0} \\bmod p) * \\cdots * a^{a_52^5}) \\bmod p\n\\end{aligned}\n\n\n\n\n\\begin{aligned}\na^b \\bmod p & = (a^{a_t 2^t + \\cdots + a_0 2^0}) \\bmod p \\\\\\\\\n& = (..(a^{a_0 2^0} \\bmod p) * \\cdots * a^{a_52^5}) \\bmod p\n\\end{aligned}\n\n\n\n\n\n\u6839\u636e\u4e0a\u5f0f\u6211\u4eec\u53d1\u73b0\uff0c\u539f\u95ee\u9898\u88ab\u6211\u4eec\u8f6c\u5316\u6210\u4e86\u5f62\u5f0f\u76f8\u540c\u7684\u5b50\u95ee\u9898\u7684\u4e58\u79ef\u3002\n\n\n\u6700\u91cd\u8981\u7684\u662f\uff0c\u6211\u4eec\u6ce8\u610f\u5230\uff0c\na^{2^{i+1}} \\bmod c = (a^{2^i})^2 \\bmod c\na^{2^{i+1}} \\bmod c = (a^{2^i})^2 \\bmod c\n\uff0c\u53ef\u4ee5\u518d\u5e38\u6570\u65f6\u95f4\u5185\u4ece \n2^i\n2^i\n \u9879\u63a8\u51fa \n2^{i+1}\n2^{i+1}\n \u9879\u3002\u4e8e\u662f\uff0c\u539f\u95ee\u9898\u603b\u7684\u590d\u6742\u5ea6\u5c31\u662f \nO(logb)\nO(logb)\n\n\n\u5728\u7b97\u6cd5\u7ade\u8d5b\u4e2d\uff0c\u5feb\u901f\u5e42\u7684\u601d\u60f3\u4e0d\u4ec5\u7528\u4e8e\u6574\u6570\u4e58\u6cd5\uff0c\u4e5f\u53ef\u7528\u4e8e\u5927\u6574\u6570\u52a0\u6cd5\uff0c\u77e9\u9635\u5e42\u8fd0\u7b97\u7b49\u573a\u5408\u4e2d\u3002\n\n\nint\n \nquickPow\n(\nint\n \na\n,\n \nint\n \nb\n,\n \nint\n \nc\n)\n \n{\n\n  \n// calculates a^b mod c\n\n  \nint\n \nres\n \n=\n \n1\n,\n \nbas\n \n=\n \na\n;\n\n  \nwhile\n \n(\nb\n)\n \n{\n\n    \nif\n \n(\nb\n \n&\n \n1\n)\n \nres\n \n=\n \n(\nLL\n)\nres\n \n*\n \nbas\n \n%\n \nc\n;\n\n    \n// Transform to long long in case of overflow.\n\n    \nbas\n \n=\n \nbas\n \n*\n \nbas\n \n%\n \nc\n;\n\n    \nb\n \n>>=\n \n1\n;\n\n  \n}\n\n  \nreturn\n \nres\n;\n\n\n}",
            "title": "\u5feb\u901f\u5e42"
        },
        {
            "location": "/math/crt/",
            "text": "",
            "title": "\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406"
        },
        {
            "location": "/math/dictionary/",
            "text": "",
            "title": "\u5206\u6bb5\u6253\u8868"
        },
        {
            "location": "/math/euclid/",
            "text": "",
            "title": "\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5"
        },
        {
            "location": "/math/matrix/",
            "text": "",
            "title": "\u77e9\u9635"
        },
        {
            "location": "/math/bit/",
            "text": "",
            "title": "\u4f4d\u8fd0\u7b97"
        },
        {
            "location": "/math/inverse/",
            "text": "",
            "title": "\u4e58\u6cd5\u9006\u5143"
        },
        {
            "location": "/math/primitive-root/",
            "text": "",
            "title": "\u9636 \u539f\u6839"
        },
        {
            "location": "/math/bsgs/",
            "text": "\u5927\u6b65\u5c0f\u6b65\u7b97\u6cd5\n\u00b6\n\n\n1.0 \u57fa\u7840\u7bc7\n\u00b6\n\n\n\u5927\u6b65\u5c0f\u6b65\u7b97\u6cd5\u82f1\u6587\u540d\uff1a\nbaby-step gaint-step (BSGS)\n.\n\n\n\u8be5\u7b97\u6cd5\u53ef\u4ee5\u5728 \nO(\\sqrt{q})\nO(\\sqrt{q})\n \u7528\u4e8e\u6c42\u89e3\n\n\n\n\n\na^x \\equiv b \\bmod p\n\n\n\n\na^x \\equiv b \\bmod p\n\n\n\n\n\n\u5176\u4e2d \np\np\n \u662f\u4e2a\u8d28\u6570\u7684\u65b9\u7a0b\u7684\u89e3 \nx\nx\n \u6ee1\u8db3 \n0 \\le x < p\n0 \\le x < p\n .\n\n\n\u4ee4 \nx = A \\lceil \\sqrt p \\rceil - B\nx = A \\lceil \\sqrt p \\rceil - B\n\uff0c\u5176\u4e2d \n0\\le A,B \\le \\lceil \\sqrt p \\rceil\n0\\le A,B \\le \\lceil \\sqrt p \\rceil\n\uff0c\n\n\n\u5219\u6709 \na^{A\\lceil \\sqrt p \\rceil -B} \\equiv b\na^{A\\lceil \\sqrt p \\rceil -B} \\equiv b\n\uff0c\u7a0d\u52a0\u53d8\u6362\uff0c\u5219\u6709 \na^{A\\lceil \\sqrt p \\rceil} \\equiv ba^B\na^{A\\lceil \\sqrt p \\rceil} \\equiv ba^B\n.\n\n\n\u6211\u4eec\u5df2\u77e5\u7684\u662f \na,b\na,b\n\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u7b97\u51fa\u7b49\u5f0f\u53f3\u8fb9\u7684 \nba^B\nba^B\n \u7684\u6240\u6709\u53d6\u503c\uff0c\u679a\u4e3e \nB\nB\n\uff0c\u7528 hash/map \u5b58\u4e0b\u6765\uff0c\u7136\u540e\u9010\u4e00\u8ba1\u7b97 \na^{A\\lceil \\sqrt p \\rceil}\na^{A\\lceil \\sqrt p \\rceil}\n\uff0c\u679a\u4e3e \nA\nA\n\uff0c\u5bfb\u627e\u662f\u5426\u6709\u4e0e\u4e4b\u76f8\u7b49\u7684 \nba^B\nba^B\n\uff0c\u4ece\u800c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u6240\u6709\u7684 \nx\nx\n\uff0c\nx=A \\lceil \\sqrt p \\rceil - B\nx=A \\lceil \\sqrt p \\rceil - B\n.\n\n\n\u6ce8\u610f\u5230 \nA,B\nA,B\n \u5747\u5c0f\u4e8e \n\\lceil \\sqrt p \\rceil\n\\lceil \\sqrt p \\rceil\n\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \nO(\\sqrt q)\nO(\\sqrt q)\n\uff0c\u7528 map \u7684\u8bdd\u4f1a\u591a\u4e00\u4e2a \n\\log\n\\log\n.\n\n\nBZOJ-2480\n \u662f\u4e00\u9053\u6a21\u677f\u9898\uff08\u53ef\u80fd\u662f\u6743\u9650\u9898\uff09\uff0c\nBZOJ-3122\n \u662f\u4e00\u9053\u7565\u52a0\u53d8\u5316\u7684\u9898\uff0c\u4ee3\u7801\u53ef\u4ee5\u5728 \nSteaunk\u7684\u535a\u5ba2\n \u4e2d\u770b\u5230.\n\n\n2.0 \u7565\u5fae\u8fdb\u9636\u7bc7\n\u00b6\n\n\n\u6c42\u89e3\n\n\n\n\n x^a \\equiv b \\bmod p \n\n\n x^a \\equiv b \\bmod p \n\n\n\n\n\u5176\u4e2d \np\np\n \u662f\u4e2a\u8d28\u6570.\n\n\n\u8be5\u6a21\u578b\u53ef\u4ee5\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u8f6c\u5316\u4e3a\u6210\n\u57fa\u7840\u7bc7\n\u4e2d\u7684\u6a21\u578b\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u5173\u4e8e \n\u539f\u6839\n \u7684\u6982\u5ff5.\n\n\n\u539f\u6839\u7684\u5b9a\u4e49\n\u4e3a\uff1a\u5bf9\u4e8e\u4efb\u610f\u6570 \na\na\n\uff0c\u6ee1\u8db3 \n(a,p)=1\n(a,p)=1\n\uff0c\u4e14 \nt\nt\n \u4e3a\u6700\u5c0f\u7684\n\u6b63\u6574\u6570\n\u6ee1\u8db3 \na^t \\equiv 1 \\bmod p\na^t \\equiv 1 \\bmod p\n\uff0c\u5219\u79f0 \nt\nt\n \u662f \na\na\n \u6a21 \np\np\n \u610f\u4e49\u4e0b\u7684\u6b21\u6570\uff0c\u82e5 \nt=\\varphi(p)\nt=\\varphi(p)\n\uff0c\u5219\u79f0 \na\na\n \u662f \np\np\n \u7684\u539f\u6839.\n\n\n\u9996\u5148\u6839\u636e\n\u539f\u6839\u5b58\u5728\u7684\u6761\u4ef6\n\uff0c\u5bf9\u4e0e\u6240\u6709\u7684\u7d20\u6570 \np>2\np>2\n \u548c\u6b63\u6574\u6570 \ne\ne\n\uff0c\u5f53\u4e14\u4ec5\u5f53 \nn=1,2,4,p^e,2p^e\nn=1,2,4,p^e,2p^e\n \u65f6\u6709\u539f\u6839\uff0c\n\n\n\u90a3\u4e48\u7531\u4e8e\u5f0f\u5b50\u4e2d\u7684\u6a21\u6570 \np\np\n \uff0c\u90a3\u4e48\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a \ng\ng\n \u6ee1\u8db3 \ng\ng\n \u662f \np\np\n \u7684\u539f\u6839\uff0c\u5373\u5bf9\u4e8e\u4efb\u610f\u7684\u6570 \nx\nx\n \u5728\u6a21 \np\np\n \u610f\u4e49\u4e0b\u4e00\u5b9a\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u6570 \ni\ni\n\uff0c\u6ee1\u8db3 \nx = g^i\nx = g^i\n\uff0c\u4e14 \n0 \\le x,i < p\n0 \\le x,i < p\n.\n\n\n\u6240\u4ee5\u6211\u4eec\u4ee4 \nx=g^c\nx=g^c\n\uff0c\ng\ng\n \u662f \np\np\n \u7684\u539f\u6839\uff08\u6211\u4eec\u4e00\u5b9a\u53ef\u4ee5\u627e\u5230\u8fd9\u4e2a \ng\ng\n \u548c \nc\nc\n\uff09\uff0c\u5219\u4e3a\u6c42 \n(g^c)^a \\equiv b \\bmod p\n(g^c)^a \\equiv b \\bmod p\n \u7684\u5173\u4e8e \nc\nc\n \u7684\u89e3\u96c6\uff0c\u7a0d\u52a0\u53d8\u6362\uff0c\u5219\u6709 \n(g^a)^c \\equiv b \\bmod p\n(g^a)^c \\equiv b \\bmod p\n \uff0c\u4e8e\u662f\u5c31\u8f6c\u6362\u6210\u4e86\u6211\u4eec\u719f\u77e5\u7684 \nBSGS\n \u7684\u57fa\u672c\u6a21\u578b\u4e86\uff0c\u5373\u53ef\u5728 \nO(\\sqrt p)\nO(\\sqrt p)\n \u89e3\u51b3.\n\n\n\u90a3\u4e48\u5173\u952e\u7684\u95ee\u9898\u5c31\u5728\u4e8e\u5982\u4f55\u627e\u5230\u8fd9\u4e2a \ng\ng\n \u4e86\uff1f\n\n\n\u5173\u4e8e\u5bf9\u4e8e\u5b58\u5728\u539f\u6839\u7684\u6570 \np\np\n \u6709\u8fd9\u6837\u7684\n\u6027\u8d28\n\uff1a\u82e5 \nt\nt\n \u662f \na\na\n \u6a21 \np\np\n \u7684\u6b21\u6570\uff08\u8fd9\u91cc\u8574\u542b\u4e86 \n(a,p)=1\n(a,p)=1\n\uff09\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u7684\u6570 \nd\nd\n\uff0c\u6ee1\u8db3 \na^d \\equiv 1 \\bmod p\na^d \\equiv 1 \\bmod p\n\uff0c\u5219 \nt \\mid d\nt \\mid d\n.\n\n\nPROOF\n\n\n\u8bb0 \nd = tq+r\nd = tq+r\n\uff0c\n0 \\le r < t\n0 \\le r < t\n.\n\n\n\\because a^d \\equiv a^{xq+r} \\equiv (a^t)^qa^r \\equiv a^r \\equiv 1\n\\because a^d \\equiv a^{xq+r} \\equiv (a^t)^qa^r \\equiv a^r \\equiv 1\n.\n\n\n\\because 0 \\le r < t\n\\because 0 \\le r < t\n\uff0c\nt\nt\n \u662f \na\na\n \u6a21 \np\np\n \u7684\u6b21\u6570\uff0c\u5373 \nt\nt\n \u662f\u6700\u5c0f\u7684\n\u6b63\u6574\u6570\n\u6ee1\u8db3 \na^t \\equiv 1\na^t \\equiv 1\n.\n\n\n\\therefore r = 0\n\\therefore r = 0\n.\n\n\n\u5373 \nd = tq\nd = tq\n\uff0c\nt \\mid d\nt \\mid d\n\n\nQ.E.D.\n\n\n\u7531\u6b64\u5f53 \np\np\n \u662f\u8d28\u6570\u7684\u65f6\u5019\u8fd8\u6709\u8fd9\u6837\u7684\u63a8\u8bba\uff1a\u5982\u679c\u4e0d\u5b58\u5728\u5c0f\u4e8e \np\np\n \u4e14\u6574\u9664 \np-1\np-1\n \u6b63\u6574\u6570 \nt\nt\n, \u6ee1\u8db3 \na^t \\equiv 1\na^t \\equiv 1\n\uff0c\u90a3\u4e48\u53c8\u6839\u636e\n\u8d39\u9a6c\u5c0f\u5b9a\u7406\n\uff0c\u6709 \na^{p-1} \\equiv 1\na^{p-1} \\equiv 1\n\uff0c\u6240\u4ee5 \np-1\np-1\n \u662f \na\na\n \u6a21 \np\np\n \u7684\u6b21\u6570\uff0c\u5373 \na\na\n \u662f \np\np\n \u7684\u539f\u6839.\n\n\n\u4e8e\u662f\u53ef\u4ee5\u5f97\u5230\u4e00\u79cd\u57fa\u4e8e\n\u539f\u6839\u5206\u5e03\n\u7684\u7b97\u6cd5\u6765\u627e\u539f\u6839\uff0c\u9996\u5148\u628a \np-1\np-1\n \u7684\u56e0\u6570\u5168\u90e8\u6c42\u51fa\u6765\uff0c\u7136\u540e\u4ece \n2\n2\n \u5230 \np-1\np-1\n \u679a\u4e3e\uff0c\u5224\u65ad\u662f\u5426\u4e3a\u539f\u6839\uff0c\u5982\u679c\u5bf9\u4e8e\u6570 \ng\ng\n\uff0c\n\\exists g^t \\equiv 1 \\bmod p\n\\exists g^t \\equiv 1 \\bmod p\n\uff0c\nt\nt\n \u662f \np-1\np-1\n \u7684\u56e0\u6570\uff0c\u5219 \ng\ng\n \u4e00\u5b9a\u4e0d\u662f \np\np\n \u7684\u539f\u6839.\n\n\n\u770b\u4e0a\u53bb\u590d\u6742\u5ea6\u597d\u50cf\u5f88\u7206\u70b8\uff08\u53ef\u80fd\u786e\u5b9e\u662f\u7206\u70b8\u7684\uff0c\u4f46\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6700\u5c0f\u7684\u539f\u6839\u4e0d\u4f1a\u5f88\u5927\uff09.\n\n\n\u57fa\u4e8e\u4e00\u4e2a\n\u5047\u8bbe\n\uff0c\u539f\u8054\u7cfb\u6839\u662f\n\u5747\u5300\u5206\u5e03\n\u7684\uff0c\u6211\u4eec\n\u4f2a\u8bc1\u660e\n\u4e00\u4e0b\u603b\u590d\u6742\u5ea6\n\uff1a\u539f\u6839\u6570\u91cf\u5b9a\u7406\uff1a\u6570 \np\np\n \u8981\u4e48\u6ca1\u6709\u539f\u6839\uff0c\u8981\u4e48\u6709 \n\\varphi(\\varphi(p))\n\\varphi(\\varphi(p))\n \u4e2a\u539f\u6839.\n\n\n\u7531\u4e8e \np\np\n \u662f\u8d28\u6570\uff0c\u6240\u4ee5 \np\np\n \u6709 \n\\varphi(p-1)\n\\varphi(p-1)\n \u4e2a\u539f\u6839\uff0c\u6240\u4ee5\u5927\u6982\u6700\u5c0f\u7684\u539f\u6839\u4e3a \n\\frac{p}{\\varphi(p-1)}=O(\\log\\log n)\n\\frac{p}{\\varphi(p-1)}=O(\\log\\log n)\n\uff0c\u7531\u4e8e\u6c42\u6bcf\u4e00\u4e2a\u6570\u65f6\u8981\u679a\u4e3e\u4e00\u904d \np-1\np-1\n \u6240\u6709\u7684\u56e0\u6570 \nO(\\sqrt p)\nO(\\sqrt p)\n \u6765\u5224\u65ad\u5176\u662f\u5426\u4e3a\u539f\u6839\uff0c\u6700\u540e\u518d\u7b97\u4e0a \nBSGS\n \u7684\u590d\u6742\u5ea6 \nO(\\sqrt{p})\nO(\\sqrt{p})\n\uff0c\u5219\u590d\u6742\u5ea6\u7ea6\u4e3a \nO(\\sqrt{p}\\log \\log n)\nO(\\sqrt{p}\\log \\log n)\n.\n\n\nBZOJ-1319\n \u662f\u4e00\u9053\u6a21\u677f\u9898\uff0c\u4ee3\u7801\u53ef\u4ee5\u5728 \nSteaunk\u7684\u535a\u5ba2\n \u4e2d\u770b\u5230.",
            "title": "BSGS"
        },
        {
            "location": "/math/bsgs/#_1",
            "text": "",
            "title": "\u5927\u6b65\u5c0f\u6b65\u7b97\u6cd5"
        },
        {
            "location": "/math/bsgs/#10",
            "text": "\u5927\u6b65\u5c0f\u6b65\u7b97\u6cd5\u82f1\u6587\u540d\uff1a baby-step gaint-step (BSGS) .  \u8be5\u7b97\u6cd5\u53ef\u4ee5\u5728  O(\\sqrt{q}) O(\\sqrt{q})  \u7528\u4e8e\u6c42\u89e3   \na^x \\equiv b \\bmod p  \na^x \\equiv b \\bmod p   \u5176\u4e2d  p p  \u662f\u4e2a\u8d28\u6570\u7684\u65b9\u7a0b\u7684\u89e3  x x  \u6ee1\u8db3  0 \\le x < p 0 \\le x < p  .  \u4ee4  x = A \\lceil \\sqrt p \\rceil - B x = A \\lceil \\sqrt p \\rceil - B \uff0c\u5176\u4e2d  0\\le A,B \\le \\lceil \\sqrt p \\rceil 0\\le A,B \\le \\lceil \\sqrt p \\rceil \uff0c  \u5219\u6709  a^{A\\lceil \\sqrt p \\rceil -B} \\equiv b a^{A\\lceil \\sqrt p \\rceil -B} \\equiv b \uff0c\u7a0d\u52a0\u53d8\u6362\uff0c\u5219\u6709  a^{A\\lceil \\sqrt p \\rceil} \\equiv ba^B a^{A\\lceil \\sqrt p \\rceil} \\equiv ba^B .  \u6211\u4eec\u5df2\u77e5\u7684\u662f  a,b a,b \uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u7b97\u51fa\u7b49\u5f0f\u53f3\u8fb9\u7684  ba^B ba^B  \u7684\u6240\u6709\u53d6\u503c\uff0c\u679a\u4e3e  B B \uff0c\u7528 hash/map \u5b58\u4e0b\u6765\uff0c\u7136\u540e\u9010\u4e00\u8ba1\u7b97  a^{A\\lceil \\sqrt p \\rceil} a^{A\\lceil \\sqrt p \\rceil} \uff0c\u679a\u4e3e  A A \uff0c\u5bfb\u627e\u662f\u5426\u6709\u4e0e\u4e4b\u76f8\u7b49\u7684  ba^B ba^B \uff0c\u4ece\u800c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u6240\u6709\u7684  x x \uff0c x=A \\lceil \\sqrt p \\rceil - B x=A \\lceil \\sqrt p \\rceil - B .  \u6ce8\u610f\u5230  A,B A,B  \u5747\u5c0f\u4e8e  \\lceil \\sqrt p \\rceil \\lceil \\sqrt p \\rceil \uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a  O(\\sqrt q) O(\\sqrt q) \uff0c\u7528 map \u7684\u8bdd\u4f1a\u591a\u4e00\u4e2a  \\log \\log .  BZOJ-2480  \u662f\u4e00\u9053\u6a21\u677f\u9898\uff08\u53ef\u80fd\u662f\u6743\u9650\u9898\uff09\uff0c BZOJ-3122  \u662f\u4e00\u9053\u7565\u52a0\u53d8\u5316\u7684\u9898\uff0c\u4ee3\u7801\u53ef\u4ee5\u5728  Steaunk\u7684\u535a\u5ba2  \u4e2d\u770b\u5230.",
            "title": "1.0 \u57fa\u7840\u7bc7"
        },
        {
            "location": "/math/bsgs/#20",
            "text": "\u6c42\u89e3    x^a \\equiv b \\bmod p    x^a \\equiv b \\bmod p    \u5176\u4e2d  p p  \u662f\u4e2a\u8d28\u6570.  \u8be5\u6a21\u578b\u53ef\u4ee5\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u8f6c\u5316\u4e3a\u6210 \u57fa\u7840\u7bc7 \u4e2d\u7684\u6a21\u578b\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u5173\u4e8e  \u539f\u6839  \u7684\u6982\u5ff5.  \u539f\u6839\u7684\u5b9a\u4e49 \u4e3a\uff1a\u5bf9\u4e8e\u4efb\u610f\u6570  a a \uff0c\u6ee1\u8db3  (a,p)=1 (a,p)=1 \uff0c\u4e14  t t  \u4e3a\u6700\u5c0f\u7684 \u6b63\u6574\u6570 \u6ee1\u8db3  a^t \\equiv 1 \\bmod p a^t \\equiv 1 \\bmod p \uff0c\u5219\u79f0  t t  \u662f  a a  \u6a21  p p  \u610f\u4e49\u4e0b\u7684\u6b21\u6570\uff0c\u82e5  t=\\varphi(p) t=\\varphi(p) \uff0c\u5219\u79f0  a a  \u662f  p p  \u7684\u539f\u6839.  \u9996\u5148\u6839\u636e \u539f\u6839\u5b58\u5728\u7684\u6761\u4ef6 \uff0c\u5bf9\u4e0e\u6240\u6709\u7684\u7d20\u6570  p>2 p>2  \u548c\u6b63\u6574\u6570  e e \uff0c\u5f53\u4e14\u4ec5\u5f53  n=1,2,4,p^e,2p^e n=1,2,4,p^e,2p^e  \u65f6\u6709\u539f\u6839\uff0c  \u90a3\u4e48\u7531\u4e8e\u5f0f\u5b50\u4e2d\u7684\u6a21\u6570  p p  \uff0c\u90a3\u4e48\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a  g g  \u6ee1\u8db3  g g  \u662f  p p  \u7684\u539f\u6839\uff0c\u5373\u5bf9\u4e8e\u4efb\u610f\u7684\u6570  x x  \u5728\u6a21  p p  \u610f\u4e49\u4e0b\u4e00\u5b9a\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u6570  i i \uff0c\u6ee1\u8db3  x = g^i x = g^i \uff0c\u4e14  0 \\le x,i < p 0 \\le x,i < p .  \u6240\u4ee5\u6211\u4eec\u4ee4  x=g^c x=g^c \uff0c g g  \u662f  p p  \u7684\u539f\u6839\uff08\u6211\u4eec\u4e00\u5b9a\u53ef\u4ee5\u627e\u5230\u8fd9\u4e2a  g g  \u548c  c c \uff09\uff0c\u5219\u4e3a\u6c42  (g^c)^a \\equiv b \\bmod p (g^c)^a \\equiv b \\bmod p  \u7684\u5173\u4e8e  c c  \u7684\u89e3\u96c6\uff0c\u7a0d\u52a0\u53d8\u6362\uff0c\u5219\u6709  (g^a)^c \\equiv b \\bmod p (g^a)^c \\equiv b \\bmod p  \uff0c\u4e8e\u662f\u5c31\u8f6c\u6362\u6210\u4e86\u6211\u4eec\u719f\u77e5\u7684  BSGS  \u7684\u57fa\u672c\u6a21\u578b\u4e86\uff0c\u5373\u53ef\u5728  O(\\sqrt p) O(\\sqrt p)  \u89e3\u51b3.  \u90a3\u4e48\u5173\u952e\u7684\u95ee\u9898\u5c31\u5728\u4e8e\u5982\u4f55\u627e\u5230\u8fd9\u4e2a  g g  \u4e86\uff1f  \u5173\u4e8e\u5bf9\u4e8e\u5b58\u5728\u539f\u6839\u7684\u6570  p p  \u6709\u8fd9\u6837\u7684 \u6027\u8d28 \uff1a\u82e5  t t  \u662f  a a  \u6a21  p p  \u7684\u6b21\u6570\uff08\u8fd9\u91cc\u8574\u542b\u4e86  (a,p)=1 (a,p)=1 \uff09\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u7684\u6570  d d \uff0c\u6ee1\u8db3  a^d \\equiv 1 \\bmod p a^d \\equiv 1 \\bmod p \uff0c\u5219  t \\mid d t \\mid d .  PROOF  \u8bb0  d = tq+r d = tq+r \uff0c 0 \\le r < t 0 \\le r < t .  \\because a^d \\equiv a^{xq+r} \\equiv (a^t)^qa^r \\equiv a^r \\equiv 1 \\because a^d \\equiv a^{xq+r} \\equiv (a^t)^qa^r \\equiv a^r \\equiv 1 .  \\because 0 \\le r < t \\because 0 \\le r < t \uff0c t t  \u662f  a a  \u6a21  p p  \u7684\u6b21\u6570\uff0c\u5373  t t  \u662f\u6700\u5c0f\u7684 \u6b63\u6574\u6570 \u6ee1\u8db3  a^t \\equiv 1 a^t \\equiv 1 .  \\therefore r = 0 \\therefore r = 0 .  \u5373  d = tq d = tq \uff0c t \\mid d t \\mid d  Q.E.D.  \u7531\u6b64\u5f53  p p  \u662f\u8d28\u6570\u7684\u65f6\u5019\u8fd8\u6709\u8fd9\u6837\u7684\u63a8\u8bba\uff1a\u5982\u679c\u4e0d\u5b58\u5728\u5c0f\u4e8e  p p  \u4e14\u6574\u9664  p-1 p-1  \u6b63\u6574\u6570  t t , \u6ee1\u8db3  a^t \\equiv 1 a^t \\equiv 1 \uff0c\u90a3\u4e48\u53c8\u6839\u636e \u8d39\u9a6c\u5c0f\u5b9a\u7406 \uff0c\u6709  a^{p-1} \\equiv 1 a^{p-1} \\equiv 1 \uff0c\u6240\u4ee5  p-1 p-1  \u662f  a a  \u6a21  p p  \u7684\u6b21\u6570\uff0c\u5373  a a  \u662f  p p  \u7684\u539f\u6839.  \u4e8e\u662f\u53ef\u4ee5\u5f97\u5230\u4e00\u79cd\u57fa\u4e8e \u539f\u6839\u5206\u5e03 \u7684\u7b97\u6cd5\u6765\u627e\u539f\u6839\uff0c\u9996\u5148\u628a  p-1 p-1  \u7684\u56e0\u6570\u5168\u90e8\u6c42\u51fa\u6765\uff0c\u7136\u540e\u4ece  2 2  \u5230  p-1 p-1  \u679a\u4e3e\uff0c\u5224\u65ad\u662f\u5426\u4e3a\u539f\u6839\uff0c\u5982\u679c\u5bf9\u4e8e\u6570  g g \uff0c \\exists g^t \\equiv 1 \\bmod p \\exists g^t \\equiv 1 \\bmod p \uff0c t t  \u662f  p-1 p-1  \u7684\u56e0\u6570\uff0c\u5219  g g  \u4e00\u5b9a\u4e0d\u662f  p p  \u7684\u539f\u6839.  \u770b\u4e0a\u53bb\u590d\u6742\u5ea6\u597d\u50cf\u5f88\u7206\u70b8\uff08\u53ef\u80fd\u786e\u5b9e\u662f\u7206\u70b8\u7684\uff0c\u4f46\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6700\u5c0f\u7684\u539f\u6839\u4e0d\u4f1a\u5f88\u5927\uff09.  \u57fa\u4e8e\u4e00\u4e2a \u5047\u8bbe \uff0c\u539f\u8054\u7cfb\u6839\u662f \u5747\u5300\u5206\u5e03 \u7684\uff0c\u6211\u4eec \u4f2a\u8bc1\u660e \u4e00\u4e0b\u603b\u590d\u6742\u5ea6 \uff1a\u539f\u6839\u6570\u91cf\u5b9a\u7406\uff1a\u6570  p p  \u8981\u4e48\u6ca1\u6709\u539f\u6839\uff0c\u8981\u4e48\u6709  \\varphi(\\varphi(p)) \\varphi(\\varphi(p))  \u4e2a\u539f\u6839.  \u7531\u4e8e  p p  \u662f\u8d28\u6570\uff0c\u6240\u4ee5  p p  \u6709  \\varphi(p-1) \\varphi(p-1)  \u4e2a\u539f\u6839\uff0c\u6240\u4ee5\u5927\u6982\u6700\u5c0f\u7684\u539f\u6839\u4e3a  \\frac{p}{\\varphi(p-1)}=O(\\log\\log n) \\frac{p}{\\varphi(p-1)}=O(\\log\\log n) \uff0c\u7531\u4e8e\u6c42\u6bcf\u4e00\u4e2a\u6570\u65f6\u8981\u679a\u4e3e\u4e00\u904d  p-1 p-1  \u6240\u6709\u7684\u56e0\u6570  O(\\sqrt p) O(\\sqrt p)  \u6765\u5224\u65ad\u5176\u662f\u5426\u4e3a\u539f\u6839\uff0c\u6700\u540e\u518d\u7b97\u4e0a  BSGS  \u7684\u590d\u6742\u5ea6  O(\\sqrt{p}) O(\\sqrt{p}) \uff0c\u5219\u590d\u6742\u5ea6\u7ea6\u4e3a  O(\\sqrt{p}\\log \\log n) O(\\sqrt{p}\\log \\log n) .  BZOJ-1319  \u662f\u4e00\u9053\u6a21\u677f\u9898\uff0c\u4ee3\u7801\u53ef\u4ee5\u5728  Steaunk\u7684\u535a\u5ba2  \u4e2d\u770b\u5230.",
            "title": "2.0 \u7565\u5fae\u8fdb\u9636\u7bc7"
        },
        {
            "location": "/math/game/",
            "text": "",
            "title": "\u535a\u5f08\u8bba"
        },
        {
            "location": "/math/poly/",
            "text": "",
            "title": "\u591a\u9879\u5f0f\u9ed1\u79d1\u6280"
        },
        {
            "location": "/math/catalan/",
            "text": "",
            "title": "\u5361\u7279\u5170\u6570"
        },
        {
            "location": "/math/combination/",
            "text": "\u6392\u5217\u7ec4\u5408\n\u00b6\n\n\n\n\n\u6392\u5217\u7ec4\u5408\u7b80\u4ecb\n\u00b6\n\n\n\u6392\u5217\u7ec4\u5408\u662f\u7ec4\u5408\u6570\u5b66\u4e2d\u7684\u4e00\u79cd\u3002\u6392\u5217\u5c31\u662f\u6307\u4ece\u7ed9\u5b9a\u4e2a\u6570\u7684\u5143\u7d20\u4e2d\u53d6\u51fa\u6307\u5b9a\u4e2a\u6570\u7684\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\uff1b\u7ec4\u5408\u5219\u662f\u6307\u4ece\u7ed9\u5b9a\u4e2a\u6570\u7684\u5143\u7d20\u4e2d\u4ec5\u4ec5\u53d6\u51fa\u6307\u5b9a\u4e2a\u6570\u7684\u5143\u7d20\uff0c\u4e0d\u8003\u8651\u6392\u5e8f\u3002\u6392\u5217\u7ec4\u5408\u7684\u4e2d\u5fc3\u95ee\u9898\u662f\u7814\u7a76\u7ed9\u5b9a\u8981\u6c42\u7684\u6392\u5217\u548c\u7ec4\u5408\u53ef\u80fd\u51fa\u73b0\u7684\u60c5\u51b5\u603b\u6570\u3002 \u6392\u5217\u7ec4\u5408\u4e0e\u53e4\u5178\u6982\u7387\u8bba\u5173\u7cfb\u5bc6\u5207\u3002\n\n\n\u5728\u9ad8\u4e2d\u521d\u7b49\u6570\u5b66\u4e2d\uff0c\u6392\u5217\u7ec4\u5408\u591a\u662f\u5229\u7528\u5217\u8868\u3001\u679a\u4e3e\u7b49\u65b9\u6cd5\u89e3\u9898\u3002\n\n\n\n\n\u6392\u5217\u7ec4\u5408\u516c\u5f0f\u53ca\u5b9a\u4e49\n\u00b6\n\n\n\u6392\u5217\u7684\u5b9a\u4e49\n\u00b6\n\n\n\u4ece\nn\nn\n\u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\uff0c\u4efb\u53d6\nm\nm\n(\nm\u2264n\nm\u2264n\n,\nm\nm\n\u4e0e\nn\nn\n\u5747\u4e3a\u81ea\u7136\u6570,\u4e0b\u540c\uff09\u4e2a\u5143\u7d20\u6309\u7167\u4e00\u5b9a\u7684\u987a\u5e8f\u6392\u6210\u4e00\u5217\uff0c\u53eb\u505a\u4ece\nn\nn\n\u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u53d6\u51fa\nm\nm\n\u4e2a\u5143\u7d20\u7684\u4e00\u4e2a\u6392\u5217\uff1b\u4ece\nn\nn\n\u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u53d6\u51fa\nm\nm\n(\nm\u2264n\nm\u2264n\n\uff09\u4e2a\u5143\u7d20\u7684\u6240\u6709\u6392\u5217\u7684\u4e2a\u6570\uff0c\u53eb\u505a\u4ece\nn\nn\n\u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u53d6\u51fa\nm\nm\n\u4e2a\u5143\u7d20\u7684\u6392\u5217\u6570\uff0c\u7528\u7b26\u53f7 \nA_n^m\nA_n^m\n \u8868\u793a\u3002\n\n\n\u6392\u5217\u7684\u8ba1\u7b97\u516c\u5f0f\n\u00b6\n\n\n\n\nA_n^m = n(n-1)(n-2)......(n-m+1) = \\frac{n!}{(n - m)!}\n\n\nA_n^m = n(n-1)(n-2)......(n-m+1) = \\frac{n!}{(n - m)!}\n\n\n\n\nn\nn\n!\u4ee3\u8868\nn\nn\n\u7684\u9636\u4e58\uff0c\u53736! = 1 \u00d7 2 \u00d7 3 \u00d7 4 \u00d7 5 \u00d7 6.\n\n\n\u7ec4\u5408\u7684\u5b9a\u4e49\n\u00b6\n\n\n\u4ecen\u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\uff0c\u4efb\u53d6m(m\u2264n\uff09\u4e2a\u5143\u7d20\u5e76\u6210\u4e00\u7ec4\uff0c\u53eb\u505a\u4ecen\u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u53d6\u51fam\u4e2a\u5143\u7d20\u7684\u4e00\u4e2a\u7ec4\u5408\uff1b\u4ecen\u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u53d6\u51fam(m\u2264n\uff09\u4e2a\u5143\u7d20\u7684\u6240\u6709\u7ec4\u5408\u7684\u4e2a\u6570\uff0c\u53eb\u505a\u4ecen\u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u53d6\u51fam\u4e2a\u5143\u7d20\u7684\u7ec4\u5408\u6570\u3002\u7528\u7b26\u53f7 \nC_n^m\nC_n^m\n \u8868\u793a\u3002\n\n\n\u7ec4\u5408\u7684\u8ba1\u7b97\u516c\u5f0f\n\u00b6\n\n\n\n\n\\binom{n}{m} = n(n-1)(n-2)......(n-m+1) = \\frac{n!}{(n - m)!}\n\n\n\\binom{n}{m} = n(n-1)(n-2)......(n-m+1) = \\frac{n!}{(n - m)!}\n\n\n\n\n\u6392\u5217\u7ec4\u5408\u7684\u5206\u7c7b\n\u00b6\n\n\n\u6392\u5217\n\u00b6\n\n\n\u5168\u6392\u5217\n:\n\n\nn\nn\n\u4e2a\u4eba\u5168\u90e8\u6765\u6392\u961f\uff0c\u961f\u957f\u4e3a\nn\nn\n\u3002\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u9009\nn\nn\n\u4e2a\uff0c\u7b2c\u4e8c\u4f4d\u7f6e\u53ef\u4ee5\u9009\nn-1\nn-1\n\u4e2a\uff0c\u4ee5\u6b64\u7c7b\u63a8\u5f97\uff1a\n\n\n\n\nA_n^n = n(n-1)(n-2)......3 \u00d7 2 \u00d7 1 = n!\n\n\nA_n^n = n(n-1)(n-2)......3 \u00d7 2 \u00d7 1 = n!\n\n\n\n\n\u90e8\u5206\u6392\u5217\n:\n\n\nn\nn\n\u4e2a\u4eba\u9009\nm\nm\n\u4e2a\u6765\u6392\u961f(\nm<=n\nm<=n\n)\u3002\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u9009\nn\nn\n\u4e2a\uff0c\u7b2c\u4e8c\u4f4d\u7f6e\u53ef\u4ee5\u9009\nn-1\nn-1\n\u4e2a\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u7b2c\nm\nm\n\u4e2a\uff08\u6700\u540e\u4e00\u4e2a\uff09\u53ef\u4ee5\u9009(\nn-m+1\nn-m+1\n)\u4e2a\uff0c\u5f97\uff1a\n\n\n\n\nA_n^m = n(n-1)(n-2)......(n-m+1) = \\frac{n!}{(n - m)!}\n\n\nA_n^m = n(n-1)(n-2)......(n-m+1) = \\frac{n!}{(n - m)!}\n\n\n\n\n\u7ec4\u5408\n\u00b6\n\n\nn\nn\n\u4e2a\u4eba\nm\nm\n(\nm<=n\nm<=n\n)\u4e2a\u51fa\u6765\uff0c\u4e0d\u6392\u961f\uff0c\u4e0d\u5728\u4e4e\u987a\u5e8f\nC_n^m\nC_n^m\n\u3002\u5982\u679c\u5728\u4e4e\u6392\u5217\u90a3\u4e48\u5c31\u662f\nA_n^m\nA_n^m\n\uff0c\u5982\u679c\u4e0d\u5728\u4e4e\u90a3\u4e48\u5c31\u8981\u9664\u6389\u91cd\u590d\uff0c\u90a3\u4e48\u91cd\u590d\u4e86\u591a\u5c11\uff1f\u540c\u6837\u9009\u51fa\u7684\u6765\u7684\nm\nm\n\u4e2a\u4eba\uff0c\u4ed6\u4eec\u8fd8\u8981\u201c\u5168\u6392\u201d\u5f97\nA_n^m\nA_n^m\n\uff0c\u6240\u4ee5\u5f97\uff1a\n\n\n\n\n\\binom{n}{m} * m! = A_n,m\n\n\n\\binom{n}{m} * m! = A_n,m\n\n\n\n\n\n\n\\binom{n}{m} = \\frac{A_n^m}{m!} = \\frac{n!}{(n-m)! * m!}\n\n\n\\binom{n}{m} = \\frac{A_n^m}{m!} = \\frac{n!}{(n-m)! * m!}\n\n\n\n\n\u7ec4\u5408\u6570\u7684\u6027\u8d28\n\u00b6\n\n\n\n\n\\binom{n}{m} = \\binom{n}{n-m}\n\n\n\\binom{n}{m} = \\binom{n}{n-m}\n\n\n\n\n\n\n\\binom{n}{m} = \\binom{n-1}{m} + \\binom{n-1}{m-1}\n\n\n\\binom{n}{m} = \\binom{n-1}{m} + \\binom{n-1}{m-1}\n\n\n\n\n\u5982\u679c\u7f16\u7a0b\u5b9e\u73b0\uff0c\u4ee5\u4e0a\u4e24\u4e2a\u516c\u5f0f\u6709\u6ca1\u6709\u5e2e\u52a9\uff1f\n\n\n\u5706\u6392\u5217\n\u00b6\n\n\nn\u4e2a\u4eba\u5168\u90e8\u6765\u56f4\u6210\u4e00\u5708\u4e3a\nQ_n^n\nQ_n^n\n\uff0c\u5176\u4e2d\u5df2\u7ecf\u6392\u597d\u7684\u4e00\u5708\uff0c\u4ece\u4e0d\u540c\u4f4d\u7f6e\u65ad\u5f00\uff0c\u53c8\u53d8\u6210\u4e0d\u540c\u7684\u961f\u5217\u3002\n\n\u6240\u4ee5\uff1a\n\n\n\n\nQ_n^n * n = A_n^n \u2192 Q_n = \\frac{A_n^n}{n} = (n-1)!\n\n\nQ_n^n * n = A_n^n \u2192 Q_n = \\frac{A_n^n}{n} = (n-1)!\n\n\n\n\n\u7531\u6b64\u53ef\u77e5\uff1a\u90e8\u5206\u5706\u6392\n\n\n\n\nQ_n^r = \\frac{A_n^r}{r} = \\frac{n!}{r * (n-r)!}\n\n\nQ_n^r = \\frac{A_n^r}{r} = \\frac{n!}{r * (n-r)!}",
            "title": "\u6392\u5217\u7ec4\u5408"
        },
        {
            "location": "/math/combination/#_1",
            "text": "",
            "title": "\u6392\u5217\u7ec4\u5408"
        },
        {
            "location": "/math/combination/#_2",
            "text": "\u6392\u5217\u7ec4\u5408\u662f\u7ec4\u5408\u6570\u5b66\u4e2d\u7684\u4e00\u79cd\u3002\u6392\u5217\u5c31\u662f\u6307\u4ece\u7ed9\u5b9a\u4e2a\u6570\u7684\u5143\u7d20\u4e2d\u53d6\u51fa\u6307\u5b9a\u4e2a\u6570\u7684\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\uff1b\u7ec4\u5408\u5219\u662f\u6307\u4ece\u7ed9\u5b9a\u4e2a\u6570\u7684\u5143\u7d20\u4e2d\u4ec5\u4ec5\u53d6\u51fa\u6307\u5b9a\u4e2a\u6570\u7684\u5143\u7d20\uff0c\u4e0d\u8003\u8651\u6392\u5e8f\u3002\u6392\u5217\u7ec4\u5408\u7684\u4e2d\u5fc3\u95ee\u9898\u662f\u7814\u7a76\u7ed9\u5b9a\u8981\u6c42\u7684\u6392\u5217\u548c\u7ec4\u5408\u53ef\u80fd\u51fa\u73b0\u7684\u60c5\u51b5\u603b\u6570\u3002 \u6392\u5217\u7ec4\u5408\u4e0e\u53e4\u5178\u6982\u7387\u8bba\u5173\u7cfb\u5bc6\u5207\u3002  \u5728\u9ad8\u4e2d\u521d\u7b49\u6570\u5b66\u4e2d\uff0c\u6392\u5217\u7ec4\u5408\u591a\u662f\u5229\u7528\u5217\u8868\u3001\u679a\u4e3e\u7b49\u65b9\u6cd5\u89e3\u9898\u3002",
            "title": "\u6392\u5217\u7ec4\u5408\u7b80\u4ecb"
        },
        {
            "location": "/math/combination/#_3",
            "text": "",
            "title": "\u6392\u5217\u7ec4\u5408\u516c\u5f0f\u53ca\u5b9a\u4e49"
        },
        {
            "location": "/math/combination/#_4",
            "text": "\u4ece n n \u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\uff0c\u4efb\u53d6 m m ( m\u2264n m\u2264n , m m \u4e0e n n \u5747\u4e3a\u81ea\u7136\u6570,\u4e0b\u540c\uff09\u4e2a\u5143\u7d20\u6309\u7167\u4e00\u5b9a\u7684\u987a\u5e8f\u6392\u6210\u4e00\u5217\uff0c\u53eb\u505a\u4ece n n \u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u53d6\u51fa m m \u4e2a\u5143\u7d20\u7684\u4e00\u4e2a\u6392\u5217\uff1b\u4ece n n \u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u53d6\u51fa m m ( m\u2264n m\u2264n \uff09\u4e2a\u5143\u7d20\u7684\u6240\u6709\u6392\u5217\u7684\u4e2a\u6570\uff0c\u53eb\u505a\u4ece n n \u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u53d6\u51fa m m \u4e2a\u5143\u7d20\u7684\u6392\u5217\u6570\uff0c\u7528\u7b26\u53f7  A_n^m A_n^m  \u8868\u793a\u3002",
            "title": "\u6392\u5217\u7684\u5b9a\u4e49"
        },
        {
            "location": "/math/combination/#_5",
            "text": "A_n^m = n(n-1)(n-2)......(n-m+1) = \\frac{n!}{(n - m)!}  A_n^m = n(n-1)(n-2)......(n-m+1) = \\frac{n!}{(n - m)!}   n n !\u4ee3\u8868 n n \u7684\u9636\u4e58\uff0c\u53736! = 1 \u00d7 2 \u00d7 3 \u00d7 4 \u00d7 5 \u00d7 6.",
            "title": "\u6392\u5217\u7684\u8ba1\u7b97\u516c\u5f0f"
        },
        {
            "location": "/math/combination/#_6",
            "text": "\u4ecen\u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\uff0c\u4efb\u53d6m(m\u2264n\uff09\u4e2a\u5143\u7d20\u5e76\u6210\u4e00\u7ec4\uff0c\u53eb\u505a\u4ecen\u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u53d6\u51fam\u4e2a\u5143\u7d20\u7684\u4e00\u4e2a\u7ec4\u5408\uff1b\u4ecen\u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u53d6\u51fam(m\u2264n\uff09\u4e2a\u5143\u7d20\u7684\u6240\u6709\u7ec4\u5408\u7684\u4e2a\u6570\uff0c\u53eb\u505a\u4ecen\u4e2a\u4e0d\u540c\u5143\u7d20\u4e2d\u53d6\u51fam\u4e2a\u5143\u7d20\u7684\u7ec4\u5408\u6570\u3002\u7528\u7b26\u53f7  C_n^m C_n^m  \u8868\u793a\u3002",
            "title": "\u7ec4\u5408\u7684\u5b9a\u4e49"
        },
        {
            "location": "/math/combination/#_7",
            "text": "\\binom{n}{m} = n(n-1)(n-2)......(n-m+1) = \\frac{n!}{(n - m)!}  \\binom{n}{m} = n(n-1)(n-2)......(n-m+1) = \\frac{n!}{(n - m)!}",
            "title": "\u7ec4\u5408\u7684\u8ba1\u7b97\u516c\u5f0f"
        },
        {
            "location": "/math/combination/#_8",
            "text": "",
            "title": "\u6392\u5217\u7ec4\u5408\u7684\u5206\u7c7b"
        },
        {
            "location": "/math/combination/#_9",
            "text": "\u5168\u6392\u5217 :  n n \u4e2a\u4eba\u5168\u90e8\u6765\u6392\u961f\uff0c\u961f\u957f\u4e3a n n \u3002\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u9009 n n \u4e2a\uff0c\u7b2c\u4e8c\u4f4d\u7f6e\u53ef\u4ee5\u9009 n-1 n-1 \u4e2a\uff0c\u4ee5\u6b64\u7c7b\u63a8\u5f97\uff1a   A_n^n = n(n-1)(n-2)......3 \u00d7 2 \u00d7 1 = n!  A_n^n = n(n-1)(n-2)......3 \u00d7 2 \u00d7 1 = n!   \u90e8\u5206\u6392\u5217 :  n n \u4e2a\u4eba\u9009 m m \u4e2a\u6765\u6392\u961f( m<=n m<=n )\u3002\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u9009 n n \u4e2a\uff0c\u7b2c\u4e8c\u4f4d\u7f6e\u53ef\u4ee5\u9009 n-1 n-1 \u4e2a\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u7b2c m m \u4e2a\uff08\u6700\u540e\u4e00\u4e2a\uff09\u53ef\u4ee5\u9009( n-m+1 n-m+1 )\u4e2a\uff0c\u5f97\uff1a   A_n^m = n(n-1)(n-2)......(n-m+1) = \\frac{n!}{(n - m)!}  A_n^m = n(n-1)(n-2)......(n-m+1) = \\frac{n!}{(n - m)!}",
            "title": "\u6392\u5217"
        },
        {
            "location": "/math/combination/#_10",
            "text": "n n \u4e2a\u4eba m m ( m<=n m<=n )\u4e2a\u51fa\u6765\uff0c\u4e0d\u6392\u961f\uff0c\u4e0d\u5728\u4e4e\u987a\u5e8f C_n^m C_n^m \u3002\u5982\u679c\u5728\u4e4e\u6392\u5217\u90a3\u4e48\u5c31\u662f A_n^m A_n^m \uff0c\u5982\u679c\u4e0d\u5728\u4e4e\u90a3\u4e48\u5c31\u8981\u9664\u6389\u91cd\u590d\uff0c\u90a3\u4e48\u91cd\u590d\u4e86\u591a\u5c11\uff1f\u540c\u6837\u9009\u51fa\u7684\u6765\u7684 m m \u4e2a\u4eba\uff0c\u4ed6\u4eec\u8fd8\u8981\u201c\u5168\u6392\u201d\u5f97 A_n^m A_n^m \uff0c\u6240\u4ee5\u5f97\uff1a   \\binom{n}{m} * m! = A_n,m  \\binom{n}{m} * m! = A_n,m    \\binom{n}{m} = \\frac{A_n^m}{m!} = \\frac{n!}{(n-m)! * m!}  \\binom{n}{m} = \\frac{A_n^m}{m!} = \\frac{n!}{(n-m)! * m!}",
            "title": "\u7ec4\u5408"
        },
        {
            "location": "/math/combination/#_11",
            "text": "\\binom{n}{m} = \\binom{n}{n-m}  \\binom{n}{m} = \\binom{n}{n-m}    \\binom{n}{m} = \\binom{n-1}{m} + \\binom{n-1}{m-1}  \\binom{n}{m} = \\binom{n-1}{m} + \\binom{n-1}{m-1}   \u5982\u679c\u7f16\u7a0b\u5b9e\u73b0\uff0c\u4ee5\u4e0a\u4e24\u4e2a\u516c\u5f0f\u6709\u6ca1\u6709\u5e2e\u52a9\uff1f",
            "title": "\u7ec4\u5408\u6570\u7684\u6027\u8d28"
        },
        {
            "location": "/math/combination/#_12",
            "text": "n\u4e2a\u4eba\u5168\u90e8\u6765\u56f4\u6210\u4e00\u5708\u4e3a Q_n^n Q_n^n \uff0c\u5176\u4e2d\u5df2\u7ecf\u6392\u597d\u7684\u4e00\u5708\uff0c\u4ece\u4e0d\u540c\u4f4d\u7f6e\u65ad\u5f00\uff0c\u53c8\u53d8\u6210\u4e0d\u540c\u7684\u961f\u5217\u3002 \n\u6240\u4ee5\uff1a   Q_n^n * n = A_n^n \u2192 Q_n = \\frac{A_n^n}{n} = (n-1)!  Q_n^n * n = A_n^n \u2192 Q_n = \\frac{A_n^n}{n} = (n-1)!   \u7531\u6b64\u53ef\u77e5\uff1a\u90e8\u5206\u5706\u6392   Q_n^r = \\frac{A_n^r}{r} = \\frac{n!}{r * (n-r)!}  Q_n^r = \\frac{A_n^r}{r} = \\frac{n!}{r * (n-r)!}",
            "title": "\u5706\u6392\u5217"
        },
        {
            "location": "/math/cantor/",
            "text": "",
            "title": "\u5eb7\u6258\u5c55\u5f00"
        },
        {
            "location": "/math/expectation/",
            "text": "",
            "title": "\u6982\u7387\u4e0e\u671f\u671b"
        },
        {
            "location": "/math/permutation-group/",
            "text": "",
            "title": "\u7f6e\u6362\u7fa4"
        },
        {
            "location": "/math/gauss/",
            "text": "\u9ad8\u65af\u6d88\u5143\n\u00b6\n\n\n\n\n\u9ad8\u65af\u6d88\u5143\u6cd5\u662f\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4\u7684\u7ecf\u5178\u7b97\u6cd5\uff0c\u5b83\u5728\u5f53\u4ee3\u6570\u5b66\u4e2d\u6709\u7740\u91cd\u8981\u7684\u5730\u4f4d\u548c\u4ef7\u503c\uff0c\u662f\u7ebf\u6027\u4ee3\u6570\u8bfe\u7a0b\u6559\u5b66\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u3002\n\n\n\u9ad8\u65af\u6d88\u5143\u6cd5\u9664\u4e86\u7528\u4e8e\u7ebf\u6027\u65b9\u7a0b\u7ec4\u6c42\u89e3\u5916\uff0c\u8fd8\u53ef\u4ee5\u7528\u4e8e\u884c\u5217\u5f0f\u8ba1\u7b97\u3001\u6c42\u77e9\u9635\u7684\u9006\uff0c\u4ee5\u53ca\u5176\u4ed6\u8ba1\u7b97\u673a\u548c\u5de5\u7a0b\u65b9\u9762\u3002\n\n\n\u590f\u5efa\u660e\u7b49\u4eba\u4e4b\u524d\u63d0\u51fa\u4e86\u5e94\u7528\u56fe\u5f62\u5904\u7406\u5668(CPU)\u52a0\u901f\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4\u7684\u9ad8\u65af\u6d88\u5143\u6cd5\uff0c\u6240\u63d0\u51fa\u7684\u7b97\u6cd5\u4e0e\u57fa\u4e8eCPU\u7684\u7b97\u6cd5\u76f8\u6bd4\u8f83\u53d6\u5f97\u66f4\u5feb\u7684\u8fd0\u7b97\u901f\u5ea6\u3002\u4e8c\u662f\u63d0\u51fa\u5404\u79cd\u53d8\u5f02\u9ad8\u65af\u6d88\u5143\u6cd5\u4ee5\u6ee1\u8db3\u7279\u5b9a\u5de5\u4f5c\u7684\u9700\u8981\u3002\n\n\n\n\n\n\n\u6d88\u5143\u6cd5\u53ca\u9ad8\u65af\u6d88\u5143\u6cd5\u601d\u60f3\n\u00b6\n\n\n1.1\u6d88\u5143\u6cd5\u8bf4\u660e\n\u00b6\n\n\n\u6d88\u5143\u6cd5\u662f\u5c06\u65b9\u7a0b\u7ec4\u4e2d\u7684\u4e00\u65b9\u7a0b\u7684\u672a\u77e5\u6570\u7528\u542b\u6709\u53e6\u4e00\u672a\u77e5\u6570\u7684\u4ee3\u6570\u5f0f\u8868\u793a\uff0c\u5e76\u5c06\u5176\u5e26\u5165\u5230\u53e6\u4e00\u65b9\u7a0b\u4e2d\uff0c\u8fd9\u5c31\u6d88\u53bb\u4e86\u4e00\u672a\u77e5\u6570\uff0c\u5f97\u5230\u4e00\u89e3\uff1b\u6216\u5c06\u65b9\u7a0b\u7ec4\u4e2d\u7684\u4e00\u65b9\u7a0b\u500d\u4e58\u67d0\u4e2a\u5e38\u6570\u52a0\u5230\u53e6\u5916\u4e00\u65b9\u7a0b\u4e2d\u53bb\uff0c\u4e5f\u53ef\u8fbe\u5230\u6d88\u53bb\u4e00\u672a\u77e5\u6570\u7684\u6bcd\u7684\u3002\u6d88\u5143\u6cd5\u4e3b\u8981\u7528\u4e8e\u4e8c\u5143\u4e00\u6b21\u65b9\u7a0b\u7ec4\u7684\u6c42\u89e3\u3002\n\n\n\u4f8b\u4e00\uff1a\u5229\u7528\u6d88\u5143\u6cd5\u6c42\u89e3\u4e8c\u5143\u4e00\u6b21\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff1a\n\n\n\n\n\u89e3\uff1a\u5c06\u65b9\u7a0b\u7ec4\u4e2d\u4e24\u65b9\u7a0b\u76f8\u52a0\uff0c\u6d88\u5143y\u53ef\u5f97\uff1a\n\n\n5x\n5x\n = 200\n\n\n\u89e3\u5f97\uff1a\n\n\nx\nx\n = 40\n\n\n\u5c06\nx\nx\n = 40\u4ee3\u5165\u65b9\u7a0b\u7ec4\u4e2d\u7b2c\u4e8c\u4e2a\u65b9\u7a0b\u53ef\u5f97\uff1a\n\n\ny\ny\n = -60\n\n\n1.2  \u6d88\u5143\u6cd5\u7406\u8bba\u7684\u6838\u5fc3\n\u00b6\n\n\n\u6d88\u5143\u6cd5\u7406\u8bba\u7684\u6838\u5fc3\u4e3b\u8981\u5982\u4e0b\uff1a\n\n\n \u4e24\u65b9\u7a0b\u4e92\u6362\uff0c\u89e3\u4e0d\u53d8\uff1b\n\n\n \u4e00\u65b9\u7a0b\u4e58\u4ee5\u975e\u96f6\u6570\nk\nk\n\uff0c\u89e3\u4e0d\u53d8\uff1b\n\n* \u4e00\u65b9\u7a0b\u4e58\u4ee5\u6570\nk\nk\n\u52a0\u4e0a\u53e6\u4e00\u65b9\u7a0b\uff0c\u89e3\u4e0d\u53d8\u3002\n\n\n1.3  \u9ad8\u65af\u6d88\u5143\u6cd5\u601d\u60f3\u6982\u5ff5\n\u00b6\n\n\n\u5fb7\u56fd\u6570\u5b66\u5bb6\u9ad8\u65af\u5bf9\u6d88\u5143\u6cd5\u8fdb\u884c\u4e86\u601d\u8003\u5206\u6790\uff0c\u5f97\u51fa\u4e86\u5982\u4e0b\u7ed3\u8bba\uff1a\n\n\n \u5728\u6d88\u5143\u6cd5\u4e2d\uff0c\u53c2\u4e0e\u8ba1\u7b97\u548c\u53d1\u751f\u6539\u53d8\u7684\u662f\u65b9\u7a0b\u4e2d\u5404\u53d8\u91cf\u7684\u7cfb\u6570\uff1b\n\n\n \u5404\u53d8\u91cf\u5e76\u672a\u53c2\u4e0e\u8ba1\u7b97\uff0c\u4e14\u6ca1\u6709\u53d1\u751f\u6539\u53d8\uff1b\n\n\n \u53ef\u4ee5\u5229\u7528\u7cfb\u6570\u7684\u4f4d\u7f6e\u8868\u793a\u53d8\u91cf\uff0c\u4ece\u800c\u7701\u7565\u53d8\u91cf\uff1b\n\n\n \u5728\u8ba1\u7b97\u4e2d\u5c06\u53d8\u91cf\u7b80\u5316\u7701\u7565\uff0c\u65b9\u7a0b\u7684\u89e3\u4e0d\u53d8\u3002\n\n\n\n\n\u9ad8\u65af\u5728\u8fd9\u4e9b\u7ed3\u8bba\u7684\u57fa\u7840\u4e0a\uff0c\u63d0\u51fa\u4e86\u9ad8\u65af\u6d88\u5143\u6cd5\uff0c\u9996\u5148\u5c06\u65b9\u7a0b\u7684\u589e\u5e7f\u77e9\u9635\u5229\u7528\u884c\u521d\u7b49\u53d8\u6362\u5316\u4e3a\u884c\u6700\u7b80\u5f62\uff0c\u7136\u540e\u4ee5\u7ebf\u6027\u65e0\u5173\u4e3a\u51c6\u5219\u5bf9\u81ea\u7531\u672a\u77e5\u91cf\u8d4b\u503c\uff0c\u6700\u540e\u5217\u51fa\u8868\u8fbe\u65b9\u7a0b\u7ec4\u901a\u89e3\u3002\n\n\n\n\n\u9ad8\u65af\u6d88\u5143\u4e94\u6b65\u9aa4\u6cd5\n\u00b6\n\n\n\u9ad8\u65af\u6d88\u5143\u6cd5\u5728\u5c06\u589e\u5e7f\u77e9\u9635\u5316\u4e3a\u6700\u7b80\u5f62\u540e\u5bf9\u4e8e\u81ea\u7531\u672a\u77e5\u91cf\u7684\u8d4b\u503c\uff0c\u9700\u8981\u638c\u63e1\u7ebf\u6027\u76f8\u5173\u77e5\u8bc6\uff0c\u4e14\u8d4b\u503c\u5b58\u5728\u4eba\u5de5\u7ecf\u9a8c\u7684\u56e0\u7d20\uff0c\u4f7f\u5f97\u5728\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u6709\u4e00\u5b9a\u7684\u56f0\u96be\uff0c\u5c06\u9ad8\u65af\u6d88\u5143\u6cd5\u5212\u5206\u4e3a\u4e94\u6b65\u9aa4\uff0c\u4ece\u800c\u63d0\u51fa\u4e94\u6b65\u9aa4\u6cd5\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a\n\n\n Step1 \u589e\u5e7f\u77e9\u9635\u884c\u521d\u7b49\u884c\u53d8\u6362\u4e3a\u884c\u6700\u7b80\u5f62\uff1b\n\n\n Step2 \u8fd8\u539f\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff1b\n\n\n Step3 \u6c42\u89e3\u7b2c\u4e00\u4e2a\u53d8\u91cf\uff1b\n\n\n Step4 \u8865\u5145\u81ea\u7531\u672a\u77e5\u91cf\uff1b\n\n* Step5 \u5217\u8868\u793a\u65b9\u7a0b\u7ec4\u901a\u89e3\u3002\n\n\n\u5229\u7528\u5b9e\u4f8b\u8fdb\u4e00\u6b65\u8bf4\u660e\u8be5\u7b97\u6cd5\u7684\u8fd0\u4f5c\u60c5\u51b5\u3002\n\n\n\u4f8b\u4e8c\uff1a\u5229\u7528\u9ad8\u65af\u6d88\u5143\u6cd5\u4e94\u6b65\u9aa4\u6cd5\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff1a\n\n\n\n\n\u7b2c1\u6b65  \u589e\u5e7f\u77e9\u9635\u884c\uff08\u521d\u7b49\uff09\u53d8\u6362\u4e3a\u884c\u6700\u7b80\u5f62\n\u00b6\n\n\n\u6240\u8c13\u589e\u5e7f\u77e9\u9635\uff0c\u5373\u4e3a\u65b9\u7a0b\u7ec4\u7cfb\u6570\u77e9\u9635A\u4e0e\u5e38\u6570\u5217b\u7684\u5e76\u751f\u6210\u7684\u65b0\u77e9\u9635\uff0c\u5373(A | b)\uff0c\u589e\u5e7f\u77e9\u9635\u884c\u521d\u7b49\u53d8\u6362\u5316\u4e3a\u884c\u6700\u7b80\u5f62\uff0c\u5373\u662f\u5229\u7528\u4e86\u9ad8\u65af\u6d88\u5143\u6cd5\u7684\u601d\u60f3\u7406\u5ff5\uff0c\u7701\u7565\u4e86\u53d8\u91cf\u800c\u7528\u53d8\u91cf\u7684\u7cfb\u6570\u4f4d\u7f6e\u8868\u793a\u53d8\u91cf\uff0c\u589e\u5e7f\u77e9\u9635\u4e2d\u7528\u7ad6\u7ebf\u9694\u5f00\u4e86\u7cfb\u6570\u77e9\u9635\u548c\u5e38\u6570\u5217\uff0c\u4ee3\u8868\u4e86\u7b49\u4e8e\u7b26\u53f7\u3002\n\n\n\n\n\n\n\u5316\u4e3a\u884c\u9636\u68af\u5f62 \n\n\n\n\n\n\n\u5316\u4e3a\u6700\u7b80\u5f62\n\n\n\u7b2c2\u6b65  \u8fd8\u539f\u7ebf\u6027\u65b9\u7a0b\u7ec4\n\u00b6\n\n\n\n\n\u89e3\u91ca  \n\n\n\n\n\u6240\u8c13\u7684\u8fd8\u539f\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff0c\u5373\u662f\u5728\u884c\u6700\u7b80\u5f62\u7684\u57fa\u7840\u4e0a\uff0c\u5c06\u4e4b\u91cd\u65b0\u4e66\u5199\u4e3a\u7ebf\u6027\u65b9\u7a0b\u7ec4\u7684\u5f62\u5f0f\uff0c\u5373\u5c06\u884c\u6700\u7b80\u5f62\u4e2d\u5404\u4f4d\u7f6e\u7684\u7cfb\u6570\u91cd\u65b0\u8d4b\u4e88\u53d8\u91cf\uff0c\u4e2d\u95f4\u7684\u7ad6\u7ebf\u8fd8\u539f\u4e3a\u7b49\u53f7\u3002\n\n\n\n\n\u7b2c3\u6b65  \u6c42\u89e3\u7b2c\u4e00\u4e2a\u53d8\u91cf\n\u00b6\n\n\n\n\n\u89e3\u91ca  \n\n\n\n\n\u5373\u662f\u5bf9\u4e8e\u6240\u8fd8\u539f\u7684\u7ebf\u6027\u65b9\u7a0b\u7ec4\u800c\u8a00\uff0c\u5c06\u65b9\u7a0b\u7ec4\u4e2d\u6bcf\u4e2a\u65b9\u7a0b\u7684\u7b2c\u4e00\u4e2a\u53d8\u91cf\uff0c\u7528\u5176\u4ed6\u91cf\u8868\u8fbe\u51fa\u6765\u3002\u5982\u65b9\u7a0b\u7ec4\u4e24\u65b9\u7a0b\u4e2d\u7684\u7b2c\u4e00\u4e2a\u53d8\u91cf\nx_1\nx_1\n\u548c\nx_3\nx_3\n\n\n\n\n\u7b2c4\u6b65  \u8865\u5145\u81ea\u7531\u672a\u77e5\u91cf\n\u00b6\n\n\n\n\n\u89e3\u91ca  \n\n\n\n\n\u7b2c3\u6b65\u4e2d\uff0c\u6c42\u89e3\u51fa\u53d8\u91cf\nx_1\nx_1\n\u548c\nx_3\nx_3\n\uff0c\u4ece\u800c\u8bf4\u660e\u4e86\u65b9\u7a0b\u5269\u4f59\u7684\u53d8\u91cf\nx_2\nx_2\n\u548c\nx_4\nx_4\n\u4e0d\u53d7\u65b9\u7a0b\u7ec4\u7684\u7ea6\u675f\uff0c\u662f\u81ea\u7531\u672a\u77e5\u91cf\uff0c\u53ef\u4ee5\u53d6\u4efb\u610f\u503c\uff0c\u6240\u4ee5\u9700\u8981\u5728\u7b2c3\u6b65\u9aa4\u89e3\u5f97\u57fa\u7840\u4e0a\u8fdb\u884c\u89e3\u5f97\u8865\u5145\uff0c\u8865\u5145\u7684\u65b9\u6cd5\u4e3a\nx_2\nx_2\n = \nx_2\nx_2\n\u3001\nx_4\nx_4\n = \nx_4\nx_4\n\uff0c\u8fd9\u79cd\u89e3\u5f97\u8865\u5145\u65b9\u5f0f\u7b26\u5408\u81ea\u7531\u672a\u77e5\u91cf\u5b9a\u4e49\uff0c\u5e76\u6613\u4e8e\u7406\u89e3\uff0c\u56e0\u4e3a\u662f\u81ea\u7531\u672a\u77e5\u91cf\u800c\u4e0d\u53d7\u7ea6\u675f\uff0c\u6240\u4ee5\u53ea\u80fd\u81ea\u5df1\u7b49\u4e8e\u81ea\u5df1\u3002\n\n\n\n\n\u7b2c5\u6b65  \u5217\u8868\u793a\u65b9\u7a0b\u7ec4\u7684\u901a\u89e3\n\u00b6\n\n\n\n\n\u5176\u4e2d\nC_1\nC_1\n\u548c\nC_2\nC_2\n\u4e3a\u4efb\u610f\u5e38\u6570\u3002\n\n\n\u89e3\u91ca  \n\n\n\n\n\u5373\u5728\u7b2c4\u6b65\u7684\u57fa\u7840\u4e0a\uff0c\u5c06\u89e3\u8868\u8fbe\u4e3a\u5217\u5411\u91cf\u7ec4\u5408\u7684\u8868\u793a\u5f62\u5f0f\uff0c\u540c\u65f6\u7531\u4e8e\nx_2\nx_2\n\u548c\nx_4\nx_4\n\u662f\u81ea\u7531\u672a\u77e5\u91cf\uff0c\u53ef\u4ee5\u53d6\u4efb\u610f\u503c\uff0c\u6240\u4ee5\u5728\u89e3\u5f97\u53f3\u8fb9\uff0c\u4ee4\u4e8c\u8005\u5206\u522b\u4e3a\u4efb\u610f\u5e38\u6570\nC_1\nC_1\n\u548c\nC_2\nC_2\n\uff0c\u5373\u5b9e\u73b0\u4e86\u5bf9\u65b9\u7a0b\u7ec4\u7684\u6c42\u89e3\u3002\n\n\n\n\n\n\n\u884c\u5217\u5f0f\n\u00b6\n\n\nN\nN\n\u00d7\nN\nN\n\u65b9\u9635\u884c\u5217\u5f0f\u53ef\u4ee5\u7406\u89e3\u4e3a\u6240\u6709\u5217\u5411\u91cf\u6240\u5939\u7684\u51e0\u4f55\u4f53\u7684\u6709\u5411\u4f53\u79ef\n\n\n\u4f8b\u5982\uff1a\n\n\n\n\n\u884c\u5217\u5f0f\u6709\u516c\u5f0f\n\n\n\n\n\n\n\u5176\u4e2dv\u4e3a\nl_1\nl_1\n, \nl_2\nl_2\n,\u2026\u2026, \nl_n\nl_n\n\u4e2d\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u3002\n\n\n\n\n\u901a\u8fc7\u4f53\u79ef\u6982\u5ff5\u7406\u89e3\u884c\u5217\u5f0f\u4e0d\u53d8\u6027\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u529e\u6cd5\uff1a\n\n\n \u77e9\u9635\u8f6c\u7f6e\uff0c\u884c\u5217\u5f0f\u4e0d\u53d8\uff1b\n\n\n \u77e9\u9635\u884c\u4ea4\u6362\uff0c\u884c\u5217\u5f0f\u53d6\u53cd\uff1b\n\n\n \u77e9\u9635\u884c\u53e0\u52a0\uff0c\u884c\u5217\u5f0f\u4e0d\u53d8\uff1b\n\n\n \u77e9\u9635\u884c\u4f38\u957f\uff0c\u884c\u5217\u5f0f\u7b49\u6bd4\u4f8b\u53d8\u5927\u3002\n\n\n\n\n\u7531\u6b64\uff0c\u53d1\u73b0\u9ad8\u65af\u6d88\u5143\u4e0d\u6539\u53d8\u77e9\u9635\u884c\u5217\u5f0f\uff0c\u4e14\u6700\u7ec8\u884c\u5217\u5f0f\u7b49\u4e8e\u5012\u4e09\u89d2\u77e9\u9635\u7684\u5bf9\u89d2\u7ebf\u4e58\u79ef\u3002\n\n\n\n\n\n\n\u751f\u6210\u6811\u8ba1\u6570\n\u00b6\n\n\n\u4e00\u4e2a\u65e0\u5411\u56fe\u7684\u751f\u6210\u6811\u4e2a\u6570\u4e3a\u90bb\u63a5\u77e9\u9635\u5ea6\u6570\u77e9\u9635\u53bb\u4e00\u884c\u4e00\u5217\u7684\u884c\u5217\u5f0f\u3002\n\n\n\u4f8b\u5982\uff0c\u4e00\u4e2a\u6b63\u65b9\u5f62\u56fe\u7684\u751f\u6210\u6811\u4e2a\u6570\n\n\n\n\n\u9644\u4e00\u4e2a\u5197\u957f\u7684\u590d\u6742\u7684\u4ee4\u4eba\u96be\u8fc7\u7684\u9ad8\u65af\u6d88\u5143\u4e0eMatrix Tree\u8ba1\u6570\u4ee3\u7801\uff1a\n\n\n#include\n<iostream>\n\n\n#include\n<cstring>\n\n\n#include\n<cstdio>\n\n\n#include\n<algorithm>\n\n\n#include\n<cassert>\n\n\n#include\n<cmath>\n\n\nusing\n \nnamespace\n \nstd\n;\n\n\n#define MOD 100000007\n\n\n#define eps 1e-7\n\n\nstruct\n \nmatrix\n\n\n{\n\n    \nstatic\n \nconst\n \nint\n \nmaxn\n \n=\n \n20\n;\n\n    \nint\n \nn\n,\nm\n;\n\n    \ndouble\n \nmat\n[\nmaxn\n][\nmaxn\n];\n\n    \nmatrix\n()\n\n    \n{\n\n        \nmemset\n(\nmat\n,\n0\n,\nsizeof\n(\nmat\n));\n\n    \n}\n\n    \nvoid\n \nprint\n()\n\n    \n{\n\n        \ncout\n<<\n\"MATRIX \"\n<<\nn\n<<\n\" \"\n<<\nm\n<<\nendl\n;\n\n        \nfor\n \n(\nint\n \ni\n=\n0\n;\n \ni\n<\nn\n;\n \ni\n++\n)\n\n        \n{\n\n            \nfor\n \n(\nint\n \nj\n=\n0\n;\n \nj\n<\nm\n;\n \nj\n++\n)\n\n            \n{\n\n                \ncout\n<<\nmat\n[\ni\n][\nj\n]\n<<\n\"\n\\t\n\"\n;\n\n            \n}\n\n            \ncout\n<<\nendl\n;\n\n        \n}\n\n    \n}\n\n    \nvoid\n \nrandom\n(\nint\n \nn\n)\n\n    \n{\n\n        \nthis\n->\nn\n \n=\n \nn\n;\n\n        \nthis\n->\nm\n \n=\n \nn\n;\n\n        \nfor\n \n(\nint\n \ni\n=\n0\n;\n \ni\n<\nn\n;\n \ni\n++\n)\n\n            \nfor\n \n(\nint\n \nj\n=\n0\n;\n \nj\n<\nn\n;\n \nj\n++\n)\n\n                \nmat\n[\ni\n][\nj\n]\n \n=\n \nrand\n()\n%\n100\n;\n\n    \n}\n\n    \nvoid\n \ninitSquare\n()\n\n    \n{\n\n        \nthis\n->\nn\n \n=\n \n4\n;\n\n        \nthis\n->\nm\n \n=\n \n4\n;\n\n        \nmemset\n(\nmat\n,\n0\n,\nsizeof\n(\nmat\n));\n\n        \nmat\n[\n0\n][\n1\n]\n \n=\n \nmat\n[\n0\n][\n3\n]\n \n=\n \n1\n;\n\n        \nmat\n[\n1\n][\n0\n]\n \n=\n \nmat\n[\n1\n][\n2\n]\n \n=\n \n1\n;\n\n        \nmat\n[\n2\n][\n1\n]\n \n=\n \nmat\n[\n2\n][\n3\n]\n \n=\n \n1\n;\n\n        \nmat\n[\n3\n][\n0\n]\n \n=\n \nmat\n[\n3\n][\n2\n]\n \n=\n \n1\n;\n\n        \nmat\n[\n0\n][\n0\n]\n \n=\n \nmat\n[\n1\n][\n1\n]\n \n=\n \nmat\n[\n2\n][\n2\n]\n \n=\n \nmat\n[\n3\n][\n3\n]\n \n=\n \n-\n2\n;\n\n        \nthis\n->\nn\n \n--\n;\n//\u53bb\u4e00\u884c\n\n        \nthis\n->\nm\n \n--\n;\n//\u53bb\u4e00\u5217\n\n    \n}\n\n    \ndouble\n \ngauss\n()\n\n    \n{\n\n        \ndouble\n \nans\n \n=\n \n1\n;\n\n        \nfor\n \n(\nint\n \ni\n=\n0\n;\n \ni\n<\nn\n;\n \ni\n++\n)\n\n        \n{\n\n            \nint\n \nsid\n \n=\n \n-\n1\n;\n\n            \nfor\n \n(\nint\n \nj\n=\ni\n;\n \nj\n<\nn\n;\n \nj\n++\n)\n\n                \nif\n \n(\nabs\n(\nmat\n[\nj\n][\ni\n])\n \n>\n \neps\n)\n\n                \n{\n\n                    \nsid\n \n=\n \nj\n;\n\n                    \nbreak\n;\n\n                \n}\n\n            \nif\n \n(\nsid\n \n==\n \n-\n1\n)\n\n                \ncontinue\n;\n\n            \nif\n \n(\nsid\n \n!=\n \ni\n)\n\n            \n{\n\n                \nfor\n \n(\nint\n \nj\n=\n0\n;\n \nj\n<\nn\n;\n \nj\n++\n)\n\n                \n{\n\n                    \nswap\n(\nmat\n[\nsid\n][\nj\n],\nmat\n[\ni\n][\nj\n]);\n\n                    \nans\n \n=\n \n-\n \nans\n;\n\n                \n}\n\n            \n}\n\n            \nfor\n \n(\nint\n \nj\n=\ni\n+\n1\n;\n \nj\n<\nn\n;\n \nj\n++\n)\n\n            \n{\n\n                \ndouble\n \nratio\n \n=\n \nmat\n[\nj\n][\ni\n]\n/\nmat\n[\ni\n][\ni\n];\n\n                \nfor\n \n(\nint\n \nk\n=\n0\n;\n \nk\n<\nn\n;\n \nk\n++\n)\n\n                \n{\n\n                    \nmat\n[\nj\n][\nk\n]\n \n-=\n \nmat\n[\ni\n][\nk\n]\n \n*\n \nratio\n;\n\n                \n}\n\n            \n}\n\n            \n//print();\n\n        \n}\n\n        \nfor\n \n(\nint\n \ni\n=\n0\n;\n \ni\n<\nn\n;\n \ni\n++\n)\n\n            \nans\n \n*=\n \nmat\n[\ni\n][\ni\n];\n\n        \nreturn\n \nabs\n(\nans\n);\n\n    \n}\n\n\n};\n\n\n\n\nint\n \nmain\n()\n\n\n{\n\n    \nsrand\n(\n1\n);\n\n    \nmatrix\n \nT\n;\n\n    \n//T.random(2);\n\n    \nT\n.\ninitSquare\n();\n\n    \nT\n.\nprint\n();\n\n    \ndouble\n \nans\n \n=\n \nT\n.\ngauss\n();\n\n    \nT\n.\nprint\n();\n\n    \ncout\n<<\nans\n<<\nendl\n;\n\n\n}",
            "title": "\u9ad8\u65af\u6d88\u5143"
        },
        {
            "location": "/math/gauss/#_1",
            "text": "\u9ad8\u65af\u6d88\u5143\u6cd5\u662f\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4\u7684\u7ecf\u5178\u7b97\u6cd5\uff0c\u5b83\u5728\u5f53\u4ee3\u6570\u5b66\u4e2d\u6709\u7740\u91cd\u8981\u7684\u5730\u4f4d\u548c\u4ef7\u503c\uff0c\u662f\u7ebf\u6027\u4ee3\u6570\u8bfe\u7a0b\u6559\u5b66\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u3002  \u9ad8\u65af\u6d88\u5143\u6cd5\u9664\u4e86\u7528\u4e8e\u7ebf\u6027\u65b9\u7a0b\u7ec4\u6c42\u89e3\u5916\uff0c\u8fd8\u53ef\u4ee5\u7528\u4e8e\u884c\u5217\u5f0f\u8ba1\u7b97\u3001\u6c42\u77e9\u9635\u7684\u9006\uff0c\u4ee5\u53ca\u5176\u4ed6\u8ba1\u7b97\u673a\u548c\u5de5\u7a0b\u65b9\u9762\u3002  \u590f\u5efa\u660e\u7b49\u4eba\u4e4b\u524d\u63d0\u51fa\u4e86\u5e94\u7528\u56fe\u5f62\u5904\u7406\u5668(CPU)\u52a0\u901f\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4\u7684\u9ad8\u65af\u6d88\u5143\u6cd5\uff0c\u6240\u63d0\u51fa\u7684\u7b97\u6cd5\u4e0e\u57fa\u4e8eCPU\u7684\u7b97\u6cd5\u76f8\u6bd4\u8f83\u53d6\u5f97\u66f4\u5feb\u7684\u8fd0\u7b97\u901f\u5ea6\u3002\u4e8c\u662f\u63d0\u51fa\u5404\u79cd\u53d8\u5f02\u9ad8\u65af\u6d88\u5143\u6cd5\u4ee5\u6ee1\u8db3\u7279\u5b9a\u5de5\u4f5c\u7684\u9700\u8981\u3002",
            "title": "\u9ad8\u65af\u6d88\u5143"
        },
        {
            "location": "/math/gauss/#_2",
            "text": "",
            "title": "\u6d88\u5143\u6cd5\u53ca\u9ad8\u65af\u6d88\u5143\u6cd5\u601d\u60f3"
        },
        {
            "location": "/math/gauss/#11",
            "text": "\u6d88\u5143\u6cd5\u662f\u5c06\u65b9\u7a0b\u7ec4\u4e2d\u7684\u4e00\u65b9\u7a0b\u7684\u672a\u77e5\u6570\u7528\u542b\u6709\u53e6\u4e00\u672a\u77e5\u6570\u7684\u4ee3\u6570\u5f0f\u8868\u793a\uff0c\u5e76\u5c06\u5176\u5e26\u5165\u5230\u53e6\u4e00\u65b9\u7a0b\u4e2d\uff0c\u8fd9\u5c31\u6d88\u53bb\u4e86\u4e00\u672a\u77e5\u6570\uff0c\u5f97\u5230\u4e00\u89e3\uff1b\u6216\u5c06\u65b9\u7a0b\u7ec4\u4e2d\u7684\u4e00\u65b9\u7a0b\u500d\u4e58\u67d0\u4e2a\u5e38\u6570\u52a0\u5230\u53e6\u5916\u4e00\u65b9\u7a0b\u4e2d\u53bb\uff0c\u4e5f\u53ef\u8fbe\u5230\u6d88\u53bb\u4e00\u672a\u77e5\u6570\u7684\u6bcd\u7684\u3002\u6d88\u5143\u6cd5\u4e3b\u8981\u7528\u4e8e\u4e8c\u5143\u4e00\u6b21\u65b9\u7a0b\u7ec4\u7684\u6c42\u89e3\u3002  \u4f8b\u4e00\uff1a\u5229\u7528\u6d88\u5143\u6cd5\u6c42\u89e3\u4e8c\u5143\u4e00\u6b21\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff1a   \u89e3\uff1a\u5c06\u65b9\u7a0b\u7ec4\u4e2d\u4e24\u65b9\u7a0b\u76f8\u52a0\uff0c\u6d88\u5143y\u53ef\u5f97\uff1a  5x 5x  = 200  \u89e3\u5f97\uff1a  x x  = 40  \u5c06 x x  = 40\u4ee3\u5165\u65b9\u7a0b\u7ec4\u4e2d\u7b2c\u4e8c\u4e2a\u65b9\u7a0b\u53ef\u5f97\uff1a  y y  = -60",
            "title": "1.1\u6d88\u5143\u6cd5\u8bf4\u660e"
        },
        {
            "location": "/math/gauss/#12",
            "text": "\u6d88\u5143\u6cd5\u7406\u8bba\u7684\u6838\u5fc3\u4e3b\u8981\u5982\u4e0b\uff1a   \u4e24\u65b9\u7a0b\u4e92\u6362\uff0c\u89e3\u4e0d\u53d8\uff1b   \u4e00\u65b9\u7a0b\u4e58\u4ee5\u975e\u96f6\u6570 k k \uff0c\u89e3\u4e0d\u53d8\uff1b \n* \u4e00\u65b9\u7a0b\u4e58\u4ee5\u6570 k k \u52a0\u4e0a\u53e6\u4e00\u65b9\u7a0b\uff0c\u89e3\u4e0d\u53d8\u3002",
            "title": "1.2  \u6d88\u5143\u6cd5\u7406\u8bba\u7684\u6838\u5fc3"
        },
        {
            "location": "/math/gauss/#13",
            "text": "\u5fb7\u56fd\u6570\u5b66\u5bb6\u9ad8\u65af\u5bf9\u6d88\u5143\u6cd5\u8fdb\u884c\u4e86\u601d\u8003\u5206\u6790\uff0c\u5f97\u51fa\u4e86\u5982\u4e0b\u7ed3\u8bba\uff1a   \u5728\u6d88\u5143\u6cd5\u4e2d\uff0c\u53c2\u4e0e\u8ba1\u7b97\u548c\u53d1\u751f\u6539\u53d8\u7684\u662f\u65b9\u7a0b\u4e2d\u5404\u53d8\u91cf\u7684\u7cfb\u6570\uff1b   \u5404\u53d8\u91cf\u5e76\u672a\u53c2\u4e0e\u8ba1\u7b97\uff0c\u4e14\u6ca1\u6709\u53d1\u751f\u6539\u53d8\uff1b   \u53ef\u4ee5\u5229\u7528\u7cfb\u6570\u7684\u4f4d\u7f6e\u8868\u793a\u53d8\u91cf\uff0c\u4ece\u800c\u7701\u7565\u53d8\u91cf\uff1b   \u5728\u8ba1\u7b97\u4e2d\u5c06\u53d8\u91cf\u7b80\u5316\u7701\u7565\uff0c\u65b9\u7a0b\u7684\u89e3\u4e0d\u53d8\u3002   \u9ad8\u65af\u5728\u8fd9\u4e9b\u7ed3\u8bba\u7684\u57fa\u7840\u4e0a\uff0c\u63d0\u51fa\u4e86\u9ad8\u65af\u6d88\u5143\u6cd5\uff0c\u9996\u5148\u5c06\u65b9\u7a0b\u7684\u589e\u5e7f\u77e9\u9635\u5229\u7528\u884c\u521d\u7b49\u53d8\u6362\u5316\u4e3a\u884c\u6700\u7b80\u5f62\uff0c\u7136\u540e\u4ee5\u7ebf\u6027\u65e0\u5173\u4e3a\u51c6\u5219\u5bf9\u81ea\u7531\u672a\u77e5\u91cf\u8d4b\u503c\uff0c\u6700\u540e\u5217\u51fa\u8868\u8fbe\u65b9\u7a0b\u7ec4\u901a\u89e3\u3002",
            "title": "1.3  \u9ad8\u65af\u6d88\u5143\u6cd5\u601d\u60f3\u6982\u5ff5"
        },
        {
            "location": "/math/gauss/#_3",
            "text": "\u9ad8\u65af\u6d88\u5143\u6cd5\u5728\u5c06\u589e\u5e7f\u77e9\u9635\u5316\u4e3a\u6700\u7b80\u5f62\u540e\u5bf9\u4e8e\u81ea\u7531\u672a\u77e5\u91cf\u7684\u8d4b\u503c\uff0c\u9700\u8981\u638c\u63e1\u7ebf\u6027\u76f8\u5173\u77e5\u8bc6\uff0c\u4e14\u8d4b\u503c\u5b58\u5728\u4eba\u5de5\u7ecf\u9a8c\u7684\u56e0\u7d20\uff0c\u4f7f\u5f97\u5728\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u6709\u4e00\u5b9a\u7684\u56f0\u96be\uff0c\u5c06\u9ad8\u65af\u6d88\u5143\u6cd5\u5212\u5206\u4e3a\u4e94\u6b65\u9aa4\uff0c\u4ece\u800c\u63d0\u51fa\u4e94\u6b65\u9aa4\u6cd5\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a   Step1 \u589e\u5e7f\u77e9\u9635\u884c\u521d\u7b49\u884c\u53d8\u6362\u4e3a\u884c\u6700\u7b80\u5f62\uff1b   Step2 \u8fd8\u539f\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff1b   Step3 \u6c42\u89e3\u7b2c\u4e00\u4e2a\u53d8\u91cf\uff1b   Step4 \u8865\u5145\u81ea\u7531\u672a\u77e5\u91cf\uff1b \n* Step5 \u5217\u8868\u793a\u65b9\u7a0b\u7ec4\u901a\u89e3\u3002  \u5229\u7528\u5b9e\u4f8b\u8fdb\u4e00\u6b65\u8bf4\u660e\u8be5\u7b97\u6cd5\u7684\u8fd0\u4f5c\u60c5\u51b5\u3002  \u4f8b\u4e8c\uff1a\u5229\u7528\u9ad8\u65af\u6d88\u5143\u6cd5\u4e94\u6b65\u9aa4\u6cd5\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff1a",
            "title": "\u9ad8\u65af\u6d88\u5143\u4e94\u6b65\u9aa4\u6cd5"
        },
        {
            "location": "/math/gauss/#1",
            "text": "\u6240\u8c13\u589e\u5e7f\u77e9\u9635\uff0c\u5373\u4e3a\u65b9\u7a0b\u7ec4\u7cfb\u6570\u77e9\u9635A\u4e0e\u5e38\u6570\u5217b\u7684\u5e76\u751f\u6210\u7684\u65b0\u77e9\u9635\uff0c\u5373(A | b)\uff0c\u589e\u5e7f\u77e9\u9635\u884c\u521d\u7b49\u53d8\u6362\u5316\u4e3a\u884c\u6700\u7b80\u5f62\uff0c\u5373\u662f\u5229\u7528\u4e86\u9ad8\u65af\u6d88\u5143\u6cd5\u7684\u601d\u60f3\u7406\u5ff5\uff0c\u7701\u7565\u4e86\u53d8\u91cf\u800c\u7528\u53d8\u91cf\u7684\u7cfb\u6570\u4f4d\u7f6e\u8868\u793a\u53d8\u91cf\uff0c\u589e\u5e7f\u77e9\u9635\u4e2d\u7528\u7ad6\u7ebf\u9694\u5f00\u4e86\u7cfb\u6570\u77e9\u9635\u548c\u5e38\u6570\u5217\uff0c\u4ee3\u8868\u4e86\u7b49\u4e8e\u7b26\u53f7\u3002    \u5316\u4e3a\u884c\u9636\u68af\u5f62     \u5316\u4e3a\u6700\u7b80\u5f62",
            "title": "\u7b2c1\u6b65  \u589e\u5e7f\u77e9\u9635\u884c\uff08\u521d\u7b49\uff09\u53d8\u6362\u4e3a\u884c\u6700\u7b80\u5f62"
        },
        {
            "location": "/math/gauss/#2",
            "text": "\u89e3\u91ca     \u6240\u8c13\u7684\u8fd8\u539f\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff0c\u5373\u662f\u5728\u884c\u6700\u7b80\u5f62\u7684\u57fa\u7840\u4e0a\uff0c\u5c06\u4e4b\u91cd\u65b0\u4e66\u5199\u4e3a\u7ebf\u6027\u65b9\u7a0b\u7ec4\u7684\u5f62\u5f0f\uff0c\u5373\u5c06\u884c\u6700\u7b80\u5f62\u4e2d\u5404\u4f4d\u7f6e\u7684\u7cfb\u6570\u91cd\u65b0\u8d4b\u4e88\u53d8\u91cf\uff0c\u4e2d\u95f4\u7684\u7ad6\u7ebf\u8fd8\u539f\u4e3a\u7b49\u53f7\u3002",
            "title": "\u7b2c2\u6b65  \u8fd8\u539f\u7ebf\u6027\u65b9\u7a0b\u7ec4"
        },
        {
            "location": "/math/gauss/#3",
            "text": "\u89e3\u91ca     \u5373\u662f\u5bf9\u4e8e\u6240\u8fd8\u539f\u7684\u7ebf\u6027\u65b9\u7a0b\u7ec4\u800c\u8a00\uff0c\u5c06\u65b9\u7a0b\u7ec4\u4e2d\u6bcf\u4e2a\u65b9\u7a0b\u7684\u7b2c\u4e00\u4e2a\u53d8\u91cf\uff0c\u7528\u5176\u4ed6\u91cf\u8868\u8fbe\u51fa\u6765\u3002\u5982\u65b9\u7a0b\u7ec4\u4e24\u65b9\u7a0b\u4e2d\u7684\u7b2c\u4e00\u4e2a\u53d8\u91cf x_1 x_1 \u548c x_3 x_3",
            "title": "\u7b2c3\u6b65  \u6c42\u89e3\u7b2c\u4e00\u4e2a\u53d8\u91cf"
        },
        {
            "location": "/math/gauss/#4",
            "text": "\u89e3\u91ca     \u7b2c3\u6b65\u4e2d\uff0c\u6c42\u89e3\u51fa\u53d8\u91cf x_1 x_1 \u548c x_3 x_3 \uff0c\u4ece\u800c\u8bf4\u660e\u4e86\u65b9\u7a0b\u5269\u4f59\u7684\u53d8\u91cf x_2 x_2 \u548c x_4 x_4 \u4e0d\u53d7\u65b9\u7a0b\u7ec4\u7684\u7ea6\u675f\uff0c\u662f\u81ea\u7531\u672a\u77e5\u91cf\uff0c\u53ef\u4ee5\u53d6\u4efb\u610f\u503c\uff0c\u6240\u4ee5\u9700\u8981\u5728\u7b2c3\u6b65\u9aa4\u89e3\u5f97\u57fa\u7840\u4e0a\u8fdb\u884c\u89e3\u5f97\u8865\u5145\uff0c\u8865\u5145\u7684\u65b9\u6cd5\u4e3a x_2 x_2  =  x_2 x_2 \u3001 x_4 x_4  =  x_4 x_4 \uff0c\u8fd9\u79cd\u89e3\u5f97\u8865\u5145\u65b9\u5f0f\u7b26\u5408\u81ea\u7531\u672a\u77e5\u91cf\u5b9a\u4e49\uff0c\u5e76\u6613\u4e8e\u7406\u89e3\uff0c\u56e0\u4e3a\u662f\u81ea\u7531\u672a\u77e5\u91cf\u800c\u4e0d\u53d7\u7ea6\u675f\uff0c\u6240\u4ee5\u53ea\u80fd\u81ea\u5df1\u7b49\u4e8e\u81ea\u5df1\u3002",
            "title": "\u7b2c4\u6b65  \u8865\u5145\u81ea\u7531\u672a\u77e5\u91cf"
        },
        {
            "location": "/math/gauss/#5",
            "text": "\u5176\u4e2d C_1 C_1 \u548c C_2 C_2 \u4e3a\u4efb\u610f\u5e38\u6570\u3002  \u89e3\u91ca     \u5373\u5728\u7b2c4\u6b65\u7684\u57fa\u7840\u4e0a\uff0c\u5c06\u89e3\u8868\u8fbe\u4e3a\u5217\u5411\u91cf\u7ec4\u5408\u7684\u8868\u793a\u5f62\u5f0f\uff0c\u540c\u65f6\u7531\u4e8e x_2 x_2 \u548c x_4 x_4 \u662f\u81ea\u7531\u672a\u77e5\u91cf\uff0c\u53ef\u4ee5\u53d6\u4efb\u610f\u503c\uff0c\u6240\u4ee5\u5728\u89e3\u5f97\u53f3\u8fb9\uff0c\u4ee4\u4e8c\u8005\u5206\u522b\u4e3a\u4efb\u610f\u5e38\u6570 C_1 C_1 \u548c C_2 C_2 \uff0c\u5373\u5b9e\u73b0\u4e86\u5bf9\u65b9\u7a0b\u7ec4\u7684\u6c42\u89e3\u3002",
            "title": "\u7b2c5\u6b65  \u5217\u8868\u793a\u65b9\u7a0b\u7ec4\u7684\u901a\u89e3"
        },
        {
            "location": "/math/gauss/#_4",
            "text": "N N \u00d7 N N \u65b9\u9635\u884c\u5217\u5f0f\u53ef\u4ee5\u7406\u89e3\u4e3a\u6240\u6709\u5217\u5411\u91cf\u6240\u5939\u7684\u51e0\u4f55\u4f53\u7684\u6709\u5411\u4f53\u79ef  \u4f8b\u5982\uff1a   \u884c\u5217\u5f0f\u6709\u516c\u5f0f    \u5176\u4e2dv\u4e3a l_1 l_1 ,  l_2 l_2 ,\u2026\u2026,  l_n l_n \u4e2d\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u3002   \u901a\u8fc7\u4f53\u79ef\u6982\u5ff5\u7406\u89e3\u884c\u5217\u5f0f\u4e0d\u53d8\u6027\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u529e\u6cd5\uff1a   \u77e9\u9635\u8f6c\u7f6e\uff0c\u884c\u5217\u5f0f\u4e0d\u53d8\uff1b   \u77e9\u9635\u884c\u4ea4\u6362\uff0c\u884c\u5217\u5f0f\u53d6\u53cd\uff1b   \u77e9\u9635\u884c\u53e0\u52a0\uff0c\u884c\u5217\u5f0f\u4e0d\u53d8\uff1b   \u77e9\u9635\u884c\u4f38\u957f\uff0c\u884c\u5217\u5f0f\u7b49\u6bd4\u4f8b\u53d8\u5927\u3002   \u7531\u6b64\uff0c\u53d1\u73b0\u9ad8\u65af\u6d88\u5143\u4e0d\u6539\u53d8\u77e9\u9635\u884c\u5217\u5f0f\uff0c\u4e14\u6700\u7ec8\u884c\u5217\u5f0f\u7b49\u4e8e\u5012\u4e09\u89d2\u77e9\u9635\u7684\u5bf9\u89d2\u7ebf\u4e58\u79ef\u3002",
            "title": "\u884c\u5217\u5f0f"
        },
        {
            "location": "/math/gauss/#_5",
            "text": "\u4e00\u4e2a\u65e0\u5411\u56fe\u7684\u751f\u6210\u6811\u4e2a\u6570\u4e3a\u90bb\u63a5\u77e9\u9635\u5ea6\u6570\u77e9\u9635\u53bb\u4e00\u884c\u4e00\u5217\u7684\u884c\u5217\u5f0f\u3002  \u4f8b\u5982\uff0c\u4e00\u4e2a\u6b63\u65b9\u5f62\u56fe\u7684\u751f\u6210\u6811\u4e2a\u6570   \u9644\u4e00\u4e2a\u5197\u957f\u7684\u590d\u6742\u7684\u4ee4\u4eba\u96be\u8fc7\u7684\u9ad8\u65af\u6d88\u5143\u4e0eMatrix Tree\u8ba1\u6570\u4ee3\u7801\uff1a  #include <iostream>  #include <cstring>  #include <cstdio>  #include <algorithm>  #include <cassert>  #include <cmath>  using   namespace   std ;  #define MOD 100000007  #define eps 1e-7  struct   matrix  { \n     static   const   int   maxn   =   20 ; \n     int   n , m ; \n     double   mat [ maxn ][ maxn ]; \n     matrix () \n     { \n         memset ( mat , 0 , sizeof ( mat )); \n     } \n     void   print () \n     { \n         cout << \"MATRIX \" << n << \" \" << m << endl ; \n         for   ( int   i = 0 ;   i < n ;   i ++ ) \n         { \n             for   ( int   j = 0 ;   j < m ;   j ++ ) \n             { \n                 cout << mat [ i ][ j ] << \" \\t \" ; \n             } \n             cout << endl ; \n         } \n     } \n     void   random ( int   n ) \n     { \n         this -> n   =   n ; \n         this -> m   =   n ; \n         for   ( int   i = 0 ;   i < n ;   i ++ ) \n             for   ( int   j = 0 ;   j < n ;   j ++ ) \n                 mat [ i ][ j ]   =   rand () % 100 ; \n     } \n     void   initSquare () \n     { \n         this -> n   =   4 ; \n         this -> m   =   4 ; \n         memset ( mat , 0 , sizeof ( mat )); \n         mat [ 0 ][ 1 ]   =   mat [ 0 ][ 3 ]   =   1 ; \n         mat [ 1 ][ 0 ]   =   mat [ 1 ][ 2 ]   =   1 ; \n         mat [ 2 ][ 1 ]   =   mat [ 2 ][ 3 ]   =   1 ; \n         mat [ 3 ][ 0 ]   =   mat [ 3 ][ 2 ]   =   1 ; \n         mat [ 0 ][ 0 ]   =   mat [ 1 ][ 1 ]   =   mat [ 2 ][ 2 ]   =   mat [ 3 ][ 3 ]   =   - 2 ; \n         this -> n   -- ; //\u53bb\u4e00\u884c \n         this -> m   -- ; //\u53bb\u4e00\u5217 \n     } \n     double   gauss () \n     { \n         double   ans   =   1 ; \n         for   ( int   i = 0 ;   i < n ;   i ++ ) \n         { \n             int   sid   =   - 1 ; \n             for   ( int   j = i ;   j < n ;   j ++ ) \n                 if   ( abs ( mat [ j ][ i ])   >   eps ) \n                 { \n                     sid   =   j ; \n                     break ; \n                 } \n             if   ( sid   ==   - 1 ) \n                 continue ; \n             if   ( sid   !=   i ) \n             { \n                 for   ( int   j = 0 ;   j < n ;   j ++ ) \n                 { \n                     swap ( mat [ sid ][ j ], mat [ i ][ j ]); \n                     ans   =   -   ans ; \n                 } \n             } \n             for   ( int   j = i + 1 ;   j < n ;   j ++ ) \n             { \n                 double   ratio   =   mat [ j ][ i ] / mat [ i ][ i ]; \n                 for   ( int   k = 0 ;   k < n ;   k ++ ) \n                 { \n                     mat [ j ][ k ]   -=   mat [ i ][ k ]   *   ratio ; \n                 } \n             } \n             //print(); \n         } \n         for   ( int   i = 0 ;   i < n ;   i ++ ) \n             ans   *=   mat [ i ][ i ]; \n         return   abs ( ans ); \n     }  };  int   main ()  { \n     srand ( 1 ); \n     matrix   T ; \n     //T.random(2); \n     T . initSquare (); \n     T . print (); \n     double   ans   =   T . gauss (); \n     T . print (); \n     cout << ans << endl ;  }",
            "title": "\u751f\u6210\u6811\u8ba1\u6570"
        },
        {
            "location": "/math/linear-equations/",
            "text": "",
            "title": "xor\u6a21\u7ebf\u6027\u65b9\u7a0b\u7ec4"
        },
        {
            "location": "/math/inclusion-exclusion-principle/",
            "text": "",
            "title": "\u5bb9\u65a5\u539f\u7406"
        },
        {
            "location": "/math/drawer-principle/",
            "text": "",
            "title": "\u62bd\u5c49\u539f\u7406"
        },
        {
            "location": "/math/integral/",
            "text": "",
            "title": "\u6570\u503c\u4e0e\u79ef\u5206"
        },
        {
            "location": "/math/fft/",
            "text": "",
            "title": "\u5feb\u901f\u5085\u91cc\u53f6\u53d8\u6362"
        },
        {
            "location": "/math/fnt/",
            "text": "",
            "title": "\u5feb\u901f\u6570\u8bba\u53d8\u6362"
        },
        {
            "location": "/math/linear-programming/",
            "text": "",
            "title": "\u7ebf\u6027\u89c4\u5212"
        },
        {
            "location": "/math/misc/",
            "text": "",
            "title": "\u6742\u9879"
        },
        {
            "location": "/data-structure/",
            "text": "\u6570\u636e\u7ed3\u6784\u662f\u8ba1\u7b97\u673a\u50a8\u5b58\u3001\u7ec4\u7ec7\u6570\u636e\u7684\u65b9\u5f0f\u3002\n\n\n\u6570\u636e\u7ed3\u6784\u662f\u6307\u4e92\u76f8\u4e4b\u95f4\u5b58\u5728\u4e00\u79cd\u6216\u591a\u79cd\u7279\u5b9a\u5173\u7cfb\u7684\u6570\u636e\u5143\u7d20\u7684\u96c6\u5408\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u7cbe\u5fc3\u9009\u62e9\u7684\u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u5e26\u6765\u66f4\u9ad8\u7684\u8fd0\u884c\u6216\u8005\u50a8\u5b58\u6548\u7387\u3002\u6570\u636e\u7ed3\u6784\u5f80\u5f80\u540c\u9ad8\u5c42\u6b21\u7684\u68c0\u7d22\u7b97\u6cd5\u548c\u7d22\u5f15\u6280\u672f\u6709\u5173\u3002\n\n\n\u5bf9\u4e8e\u7b97\u6cd5\u7ade\u8d5b\uff0c\u7531\u4e8e\u4e0d\u80fd\u643a\u5e26\u8d44\u6599\uff08\u5982NOIP\u3001IOI\u7b49\uff09\uff0c\u73b0\u573a\u7f16\u5199\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784\u662f\u4e00\u79cd\u5f88\u5927\u7684\u6311\u6218\u3002\n\n\n\u6570\u636e\u7ed3\u6784\u6709\u5f88\u591a\u79cd\uff0c\u5982\u6808\u3001\u961f\u5217\u3001\u5e76\u67e5\u96c6\u7b49\uff0c\u66f4\u9ad8\u7ea7\u7684\u5219\u4f1a\u51fa\u73b0\u6811\u3001\u5757\u3001\u94fe\u7b49\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u4e9b\u5728\u7b97\u6cd5\u7ade\u8d5b\u4e2d\u51fa\u73b0\u7684\u6570\u636e\u7ed3\u6784\u91cd\u70b9\u5728\u4e8e\u5982\u4f55\u5e94\u7528\uff0c\u800c\u4e0d\u662f\u719f\u8bb0\u6a21\u677f\u4ee3\u7801\uff0c\u6240\u4ee5\u900f\u5f7b\u5730\u638c\u63e1\u6570\u636e\u7ed3\u6784\u7684\u5904\u7406\u8fc7\u7a0b\u624d\u662f\u6700\u91cd\u8981\u7684\u3002\n\n\n\u53e6\u5916\u4e00\u4e2a\u91cd\u8981\u7684\u70b9\u662f\uff0c\u5728\u7b97\u6cd5\u7ade\u8d5b\u4e2d\uff0c\u5f80\u5f80\u662f\u5148\u601d\u8003\u9700\u8981\u4e00\u4e2a\u600e\u6837\u7684\u6570\u636e\u7ed3\u6784\uff0c\u518d\u8003\u8651\u53bb\u5982\u4f55\u5b9e\u73b0\uff08\u6216\u8005\u7528\u5df2\u6709\u7684\uff09\u3002\u901a\u4fd7\u5730\u8bf4\uff0c\u8fd9\u4e2a\u4e0e\u5b9e\u73b0\u65e0\u5173\u7684\u6570\u636e\u7ed3\u6784\u6210\u4e3a\u62bd\u8c61\u6570\u636e\u7c7b\u578b\uff08Abstract Data Type\uff0cADT\uff09\uff0c\u5b83\u63cf\u8ff0\u7684\u662f\u6570\u636e\u7ed3\u6784\u7684\u5916\u90e8\u7279\u5f81\uff0c\u53ca\u4f7f\u7528\u65b9\u6cd5\u3002",
            "title": "\u6570\u636e\u7ed3\u6784\u90e8\u5206\u7b80\u4ecb"
        },
        {
            "location": "/data-structure/stl/",
            "text": "",
            "title": "STL"
        },
        {
            "location": "/data-structure/pb-ds/",
            "text": "pb_ds \u5e93\u5168\u79f0 Policy-Based Data Structures\n\n\npb_ds \u5e93\u5c01\u88c5\u4e86\u5f88\u591a\u6570\u636e\u7ed3\u6784\uff0c\u6bd4\u5982\u54c8\u5e0c\uff08Hash\uff09\u8868\uff0c\u5e73\u8861\u4e8c\u53c9\u6811\uff0c\u5b57\u5178\u6811\uff08Trie\u6811\uff09\uff0c\u5806\uff08\u4f18\u5148\u961f\u5217\uff09\u7b49\n\n\n\u5c31\u50cf vector\u3001set\u3001map \u4e00\u6837\uff0c\u5176\u7ec4\u4ef6\u5747\u7b26\u5408 STL \u7684\u76f8\u5173\u63a5\u53e3\u89c4\u8303\u3002\u90e8\u5206\uff08\u5982\u4f18\u5148\u961f\u5217\uff09\u5305\u542b STL \u5185\u5bf9\u5e94\u7ec4\u4ef6\u7684\u6240\u6709\u529f\u80fd\uff0c\u4f46\u6bd4 STL \u529f\u80fd\u66f4\u591a\n\n\npb_ds \u53ea\u5728\u4f7f\u7528 libstdc++ \u4e3a\u6807\u51c6\u5e93\u7684\u7f16\u8bd1\u5668\u4e0b\u53ef\u4ee5\u7528\n\n\n\u53c2\u8003\u8d44\u6599\uff1a\u300aC++\u7684pb_ds\u5e93\u5728OI\u4e2d\u7684\u5e94\u7528\u300b",
            "title": "pb_ds"
        },
        {
            "location": "/data-structure/novice/linked-list/",
            "text": "",
            "title": "\u94fe\u8868"
        },
        {
            "location": "/data-structure/novice/hash/",
            "text": "",
            "title": "\u54c8\u5e0c\u8868"
        },
        {
            "location": "/data-structure/novice/dsu/",
            "text": "",
            "title": "\u5e76\u67e5\u96c6"
        },
        {
            "location": "/data-structure/novice/heap/",
            "text": "",
            "title": "\u5806"
        },
        {
            "location": "/data-structure/novice/square-root-decomposition/",
            "text": "",
            "title": "\u5206\u5757"
        },
        {
            "location": "/data-structure/novice/monotonous-stack/",
            "text": "",
            "title": "\u5355\u8c03\u6808"
        },
        {
            "location": "/data-structure/novice/monotonous-queue/",
            "text": "",
            "title": "\u5355\u8c03\u961f\u5217"
        },
        {
            "location": "/data-structure/intermediate/sparse-table/",
            "text": "",
            "title": "\u500d\u589e\u6cd5"
        },
        {
            "location": "/data-structure/intermediate/block-list/",
            "text": "\u5757\u72b6\u94fe\u8868\n\u00b6\n\n\n\n\n\u5927\u6982\u5c31\u957f\u8fd9\u6837\u3002\u3002\u3002\n\n\n\u4e0d\u96be\u53d1\u73b0\u5757\u72b6\u94fe\u8868\u5c31\u662f\u4e00\u4e2a\u94fe\u8868\uff0c\u6bcf\u4e2a\u8282\u70b9\u6307\u5411\u4e00\u4e2a\u6570\u7ec4\u3002\n\u6211\u4eec\u628a\u539f\u6765\u957f\u5ea6\u4e3an\u7684\u6570\u7ec4\u5206\u4e3a \n\\sqrt{n}\n\\sqrt{n}\n \u4e2a\u8282\u70b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u5bf9\u5e94\u7684\u6570\u7ec4\u5927\u5c0f\u4e3a \n\\sqrt{n}\n\\sqrt{n}\n \u3002\n\u6240\u4ee5\u6211\u4eec\u8fd9\u4e48\u5b9a\u4e49\u7ed3\u6784\u4f53\uff0c\u4ee3\u7801\u89c1\u4e0b\u3002\n\u5176\u4e2d sqn \u8868\u793a sqrt(n) \u5373 \n\\sqrt{n}\n\\sqrt{n}\n\uff0cpb \u8868\u793a push_back\uff0c\u5373\u5728\u8fd9\u4e2a node \u4e2d\u52a0\u5165\u4e00\u4e2a\u5143\u7d20\u3002\n\n\nstruct\n \nnode\n\n\n{\n\n    \nnode\n*\nnxt\n;\nint\n \nsize\n;\nchar\n \nd\n[(\nsqn\n<<\n1\n)\n+\n5\n];\n\n    \nnode\n(){\nsize\n=\n0\n,\nnxt\n=\nNULL\n,\nmemset\n(\nd\n,\n0\n,\nsizeof\n(\nd\n));}\n\n    \nvoid\n \npb\n(\nchar\n \nc\n){\nd\n[\nsize\n++\n]\n=\nc\n;}\n\n\n};\n\n\n\n\n\n\u5757\u72b6\u94fe\u8868\u5e94\u8be5\u81f3\u5c11\u652f\u6301\uff1a\u5206\u88c2\u3001\u63d2\u5165\u3001\u67e5\u627e\u3002\n\u4ec0\u4e48\u662f\u5206\u88c2\uff1f\u5206\u88c2\u5c31\u662f\u5206\u88c2\u4e00\u4e2a node\uff0c\u53d8\u6210\u4e24\u4e2a\u5c0f\u7684 node\uff0c\u4ee5\u4fdd\u8bc1\u6bcf\u4e2a node \u7684\u5927\u5c0f\u90fd\u63a5\u8fd1 \n\\sqrt{n}\n\\sqrt{n}\n \uff08\u5426\u5219\u53ef\u80fd\u9000\u5316\u6210\u666e\u901a\u6570\u7ec4\uff09\u3002\u5f53\u4e00\u4e2a node \u7684\u5927\u5c0f\u8d85\u8fc7 \n2* \\sqrt{n}\n2* \\sqrt{n}\n \u65f6\u6267\u884c\u5206\u88c2\u64cd\u4f5c\u3002\n\n\n\u5206\u88c2\u64cd\u4f5c\u600e\u4e48\u505a\u5462\uff1f\u5148\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\u518d\u628a\u88ab\u5206\u88c2\u7684\u8282\u70b9\u7684\u540e \n\\sqrt{n}\n\\sqrt{n}\n \u4e2a\u503c copy \u5230\u65b0\u8282\u70b9\uff0c\u7136\u540e\u628a\u88ab\u5206\u88c2\u7684\u8282\u70b9\u7684\u540e \n\\sqrt{n}\n\\sqrt{n}\n \u4e2a\u503c\u5220\u6389(size--)\uff0c\u6700\u540e\u628a\u65b0\u8282\u70b9\u63d2\u5165\u5230\u88ab\u5206\u88c2\u8282\u70b9\u7684\u540e\u9762\u5373\u53ef\u3002\n\n\n\u5757\u72b6\u94fe\u8868\u7684\u6240\u6709\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u90fd\u662f \n\\sqrt{n}\n\\sqrt{n}\n \u7684\u3002\n\n\n\u8fd8\u6709\u4e00\u4e2a\u8981\u8bf4\u7684\u3002\n\u968f\u7740\u5143\u7d20\u7684\u63d2\u5165\uff08\u6216\u5220\u9664\uff09\uff0cn \u4f1a\u53d8\uff0c \n\\sqrt{n}\n\\sqrt{n}\n \u4e5f\u4f1a\u53d8\u3002\u8fd9\u6837\u5757\u7684\u5927\u5c0f\u5c31\u4f1a\u53d8\u5316\uff0c\u6211\u4eec\u96be\u9053\u8fd8\u8981\u6bcf\u6b21\u7ef4\u62a4\u5757\u7684\u5927\u5c0f\uff1f\n\n\n\u5176\u5b9e\u4e0d\u7136\uff0c\u628a \n\\sqrt{n}\n\\sqrt{n}\n \u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u5b9a\u503c\u5373\u53ef\u3002\u6bd4\u5982\u9898\u76ee\u7ed9\u7684\u8303\u56f4\u662f \n10^6\n10^6\n\uff0c\u90a3\u4e48 \n\\sqrt{n}\n\\sqrt{n}\n \u5c31\u8bbe\u7f6e\u4e3a\u5927\u5c0f\u4e3a \n10^3\n10^3\n \u7684\u5e38\u91cf\uff0c\u4e0d\u7528\u66f4\u6539\u5b83\u3002\n\n\nlist\n<\nvector\n<\nchar\n>\n \n>\n \norz_list\n;\n\n\n\n\n\n\u4f8b\u9898\n\u00b6\n\n\nBig String POJ - 2887\n\n\n\u9898\u89e3\uff1a\n\u5f88\u7b80\u5355\u7684\u6a21\u677f\u9898\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n#include\n \n<cstdio>\n\n\n#include\n \n<cstring>\n\n\n#include\n \n<cctype>\n\n\nusing\n \nnamespace\n \nstd\n;\n\n\nstatic\n \nconst\n \nint\n \nsqn\n=\n1e3\n;\n\n\nstruct\n \nnode\n\n\n{\n\n    \nnode\n*\nnxt\n;\nint\n \nsize\n;\nchar\n \nd\n[(\nsqn\n<<\n1\n)\n+\n5\n];\n\n    \nnode\n(){\nsize\n=\n0\n,\nnxt\n=\nNULL\n;}\n\n    \nvoid\n \npb\n(\nchar\n \nc\n){\nd\n[\nsize\n++\n]\n=\nc\n;}\n\n\n}\n*\nhead\n=\nNULL\n;\n\n\nchar\n \ninits\n[(\nint\n)\n1e6\n+\n5\n];\n\n\nint\n \nllen\n,\nq\n;\n\n\nvoid\n \nreadch\n(\nchar\n \n&\n \nch\n){\ndo\n \nch\n=\ngetchar\n();\nwhile\n(\n!\nisalpha\n(\nch\n));}\n\n\nvoid\n \ncheck\n(\nnode\n*\np\n)\n\n\n{\n\n    \nif\n(\np\n->\nsize\n>=\n(\nsqn\n<<\n1\n))\n\n    \n{\n\n        \nnode\n*\nq\n=\nnew\n \nnode\n;\n\n        \nfor\n(\nint\n \ni\n=\nsqn\n;\ni\n<\np\n->\nsize\n;\ni\n++\n)\nq\n->\npb\n(\np\n->\nd\n[\ni\n]);\n\n        \np\n->\nsize\n=\nsqn\n,\nq\n->\nnxt\n=\np\n->\nnxt\n,\np\n->\nnxt\n=\nq\n;\n\n    \n}\n\n\n}\n\n\nvoid\n \ninsert\n(\nchar\n \nc\n,\nint\n \npos\n)\n\n\n{\n\n    \nnode\n*\np\n=\nhead\n;\nint\n \ntot\n,\ncnt\n;\n\n    \nif\n(\npos\n>\nllen\n++\n){\nwhile\n(\np\n->\nnxt\n!=\nNULL\n)\np\n=\np\n->\nnxt\n;\np\n->\npb\n(\nc\n),\ncheck\n(\np\n);\nreturn\n;}\n\n    \nfor\n(\ntot\n=\nhead\n->\nsize\n;\np\n!=\nNULL\n&&\ntot\n<\npos\n;\np\n=\np\n->\nnxt\n,\ntot\n+=\np\n->\nsize\n);\n\n    \ntot\n-=\np\n->\nsize\n,\ncnt\n=\npos\n-\ntot\n-\n1\n;\n\n    \nfor\n(\nint\n \ni\n=\np\n->\nsize\n-\n1\n;\ni\n>=\ncnt\n;\ni\n--\n)\np\n->\nd\n[\ni\n+\n1\n]\n=\np\n->\nd\n[\ni\n];\n\n    \np\n->\nd\n[\ncnt\n]\n=\nc\n,\np\n->\nsize\n++\n;\n\n    \ncheck\n(\np\n);\n\n\n}\n\n\nchar\n \nquery\n(\nint\n \npos\n)\n\n\n{\n\n    \nnode\n*\np\n;\nint\n \ntot\n,\ncnt\n;\n\n    \nfor\n(\np\n=\nhead\n,\ntot\n=\nhead\n->\nsize\n;\np\n!=\nNULL\n&&\ntot\n<\npos\n;\np\n=\np\n->\nnxt\n,\ntot\n+=\np\n->\nsize\n);\n\n    \ntot\n-=\np\n->\nsize\n;\nreturn\n \np\n->\nd\n[\npos\n-\ntot\n-\n1\n];\n\n\n}\n\n\nint\n \nmain\n()\n\n\n{\n\n    \nscanf\n(\n\"%s %d\"\n,\ninits\n,\n&\nq\n),\nllen\n=\nstrlen\n(\ninits\n);\n\n    \nnode\n*\np\n=\nnew\n \nnode\n;\nhead\n=\np\n;\n\n    \nfor\n(\nint\n \ni\n=\n0\n;\ni\n<\nllen\n;\ni\n++\n)\n\n    \n{\n\n        \nif\n(\ni\n%\nsqn\n==\n0\n&&\ni\n)\np\n->\nnxt\n=\nnew\n \nnode\n,\np\n=\np\n->\nnxt\n;\n\n        \np\n->\npb\n(\ninits\n[\ni\n]);\n\n    \n}\n\n    \nchar\n \na\n;\nint\n \nk\n;\n\n    \nwhile\n(\nq\n--\n)\n\n    \n{\n\n        \nreadch\n(\na\n);\n\n        \nif\n(\na\n==\n'Q'\n)\nscanf\n(\n\"%d\"\n,\n&\nk\n),\nprintf\n(\n\"%c\n\\n\n\"\n,\nquery\n(\nk\n));\n\n        \nelse\n \nreadch\n(\na\n),\nscanf\n(\n\"%d\"\n,\n&\nk\n),\ninsert\n(\na\n,\nk\n);\n\n    \n}\n\n    \nreturn\n \n0\n;\n\n\n}",
            "title": "\u5757\u72b6\u94fe\u8868"
        },
        {
            "location": "/data-structure/intermediate/block-list/#_1",
            "text": "\u5927\u6982\u5c31\u957f\u8fd9\u6837\u3002\u3002\u3002  \u4e0d\u96be\u53d1\u73b0\u5757\u72b6\u94fe\u8868\u5c31\u662f\u4e00\u4e2a\u94fe\u8868\uff0c\u6bcf\u4e2a\u8282\u70b9\u6307\u5411\u4e00\u4e2a\u6570\u7ec4\u3002\n\u6211\u4eec\u628a\u539f\u6765\u957f\u5ea6\u4e3an\u7684\u6570\u7ec4\u5206\u4e3a  \\sqrt{n} \\sqrt{n}  \u4e2a\u8282\u70b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u5bf9\u5e94\u7684\u6570\u7ec4\u5927\u5c0f\u4e3a  \\sqrt{n} \\sqrt{n}  \u3002\n\u6240\u4ee5\u6211\u4eec\u8fd9\u4e48\u5b9a\u4e49\u7ed3\u6784\u4f53\uff0c\u4ee3\u7801\u89c1\u4e0b\u3002\n\u5176\u4e2d sqn \u8868\u793a sqrt(n) \u5373  \\sqrt{n} \\sqrt{n} \uff0cpb \u8868\u793a push_back\uff0c\u5373\u5728\u8fd9\u4e2a node \u4e2d\u52a0\u5165\u4e00\u4e2a\u5143\u7d20\u3002  struct   node  { \n     node * nxt ; int   size ; char   d [( sqn << 1 ) + 5 ]; \n     node (){ size = 0 , nxt = NULL , memset ( d , 0 , sizeof ( d ));} \n     void   pb ( char   c ){ d [ size ++ ] = c ;}  };   \u5757\u72b6\u94fe\u8868\u5e94\u8be5\u81f3\u5c11\u652f\u6301\uff1a\u5206\u88c2\u3001\u63d2\u5165\u3001\u67e5\u627e\u3002\n\u4ec0\u4e48\u662f\u5206\u88c2\uff1f\u5206\u88c2\u5c31\u662f\u5206\u88c2\u4e00\u4e2a node\uff0c\u53d8\u6210\u4e24\u4e2a\u5c0f\u7684 node\uff0c\u4ee5\u4fdd\u8bc1\u6bcf\u4e2a node \u7684\u5927\u5c0f\u90fd\u63a5\u8fd1  \\sqrt{n} \\sqrt{n}  \uff08\u5426\u5219\u53ef\u80fd\u9000\u5316\u6210\u666e\u901a\u6570\u7ec4\uff09\u3002\u5f53\u4e00\u4e2a node \u7684\u5927\u5c0f\u8d85\u8fc7  2* \\sqrt{n} 2* \\sqrt{n}  \u65f6\u6267\u884c\u5206\u88c2\u64cd\u4f5c\u3002  \u5206\u88c2\u64cd\u4f5c\u600e\u4e48\u505a\u5462\uff1f\u5148\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\u518d\u628a\u88ab\u5206\u88c2\u7684\u8282\u70b9\u7684\u540e  \\sqrt{n} \\sqrt{n}  \u4e2a\u503c copy \u5230\u65b0\u8282\u70b9\uff0c\u7136\u540e\u628a\u88ab\u5206\u88c2\u7684\u8282\u70b9\u7684\u540e  \\sqrt{n} \\sqrt{n}  \u4e2a\u503c\u5220\u6389(size--)\uff0c\u6700\u540e\u628a\u65b0\u8282\u70b9\u63d2\u5165\u5230\u88ab\u5206\u88c2\u8282\u70b9\u7684\u540e\u9762\u5373\u53ef\u3002  \u5757\u72b6\u94fe\u8868\u7684\u6240\u6709\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u90fd\u662f  \\sqrt{n} \\sqrt{n}  \u7684\u3002  \u8fd8\u6709\u4e00\u4e2a\u8981\u8bf4\u7684\u3002\n\u968f\u7740\u5143\u7d20\u7684\u63d2\u5165\uff08\u6216\u5220\u9664\uff09\uff0cn \u4f1a\u53d8\uff0c  \\sqrt{n} \\sqrt{n}  \u4e5f\u4f1a\u53d8\u3002\u8fd9\u6837\u5757\u7684\u5927\u5c0f\u5c31\u4f1a\u53d8\u5316\uff0c\u6211\u4eec\u96be\u9053\u8fd8\u8981\u6bcf\u6b21\u7ef4\u62a4\u5757\u7684\u5927\u5c0f\uff1f  \u5176\u5b9e\u4e0d\u7136\uff0c\u628a  \\sqrt{n} \\sqrt{n}  \u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u5b9a\u503c\u5373\u53ef\u3002\u6bd4\u5982\u9898\u76ee\u7ed9\u7684\u8303\u56f4\u662f  10^6 10^6 \uff0c\u90a3\u4e48  \\sqrt{n} \\sqrt{n}  \u5c31\u8bbe\u7f6e\u4e3a\u5927\u5c0f\u4e3a  10^3 10^3  \u7684\u5e38\u91cf\uff0c\u4e0d\u7528\u66f4\u6539\u5b83\u3002  list < vector < char >   >   orz_list ;",
            "title": "\u5757\u72b6\u94fe\u8868"
        },
        {
            "location": "/data-structure/intermediate/block-list/#_2",
            "text": "Big String POJ - 2887  \u9898\u89e3\uff1a\n\u5f88\u7b80\u5355\u7684\u6a21\u677f\u9898\u3002\u4ee3\u7801\u5982\u4e0b\uff1a  #include   <cstdio>  #include   <cstring>  #include   <cctype>  using   namespace   std ;  static   const   int   sqn = 1e3 ;  struct   node  { \n     node * nxt ; int   size ; char   d [( sqn << 1 ) + 5 ]; \n     node (){ size = 0 , nxt = NULL ;} \n     void   pb ( char   c ){ d [ size ++ ] = c ;}  } * head = NULL ;  char   inits [( int ) 1e6 + 5 ];  int   llen , q ;  void   readch ( char   &   ch ){ do   ch = getchar (); while ( ! isalpha ( ch ));}  void   check ( node * p )  { \n     if ( p -> size >= ( sqn << 1 )) \n     { \n         node * q = new   node ; \n         for ( int   i = sqn ; i < p -> size ; i ++ ) q -> pb ( p -> d [ i ]); \n         p -> size = sqn , q -> nxt = p -> nxt , p -> nxt = q ; \n     }  }  void   insert ( char   c , int   pos )  { \n     node * p = head ; int   tot , cnt ; \n     if ( pos > llen ++ ){ while ( p -> nxt != NULL ) p = p -> nxt ; p -> pb ( c ), check ( p ); return ;} \n     for ( tot = head -> size ; p != NULL && tot < pos ; p = p -> nxt , tot += p -> size ); \n     tot -= p -> size , cnt = pos - tot - 1 ; \n     for ( int   i = p -> size - 1 ; i >= cnt ; i -- ) p -> d [ i + 1 ] = p -> d [ i ]; \n     p -> d [ cnt ] = c , p -> size ++ ; \n     check ( p );  }  char   query ( int   pos )  { \n     node * p ; int   tot , cnt ; \n     for ( p = head , tot = head -> size ; p != NULL && tot < pos ; p = p -> nxt , tot += p -> size ); \n     tot -= p -> size ; return   p -> d [ pos - tot - 1 ];  }  int   main ()  { \n     scanf ( \"%s %d\" , inits , & q ), llen = strlen ( inits ); \n     node * p = new   node ; head = p ; \n     for ( int   i = 0 ; i < llen ; i ++ ) \n     { \n         if ( i % sqn == 0 && i ) p -> nxt = new   node , p = p -> nxt ; \n         p -> pb ( inits [ i ]); \n     } \n     char   a ; int   k ; \n     while ( q -- ) \n     { \n         readch ( a ); \n         if ( a == 'Q' ) scanf ( \"%d\" , & k ), printf ( \"%c \\n \" , query ( k )); \n         else   readch ( a ), scanf ( \"%d\" , & k ), insert ( a , k ); \n     } \n     return   0 ;  }",
            "title": "\u4f8b\u9898"
        },
        {
            "location": "/data-structure/intermediate/block-array/",
            "text": "",
            "title": "\u5757\u72b6\u6570\u7ec4"
        },
        {
            "location": "/data-structure/intermediate/bit/",
            "text": "\u6811\u72b6\u6570\u7ec4\n\u00b6\n\n\n\u6811\u72b6\u6570\u7ec4\u7b80\u4ecb\n\u00b6\n\n\n\n\n\u6811\u72b6\u6570\u7ec4\u548c\u4e0b\u9762\u7684\u7ebf\u6bb5\u6811\u53ef\u662f\u4eb2\u5144\u5f1f\u4e86\uff0c\u4f46\u4ed6\u4fe9\u6bd5\u7adf\u8fd8\u6709\u4e00\u4e9b\u533a\u522b\uff1a\n\n\u6811\u72b6\u6570\u7ec4\u80fd\u6709\u7684\u64cd\u4f5c\uff0c\u7ebf\u6bb5\u6811\u4e00\u5b9a\u6709\uff1b\n\n\u7ebf\u6bb5\u6811\u6709\u7684\u64cd\u4f5c\uff0c\u6811\u72b6\u6570\u7ec4\u4e0d\u4e00\u5b9a\u6709\u3002\n\n\n\u8fd9\u4e48\u770b\u6765\u9009\u62e9\u7ebf\u6bb5\u6811\u4e0d\u5c31\n\u201c\u5f97\u5929\u4e0b\u4e86\u201d\n\uff1f\n\n\n\u4e8b\u5b9e\u4e0a\uff0c\u6811\u72b6\u6570\u7ec4\u7684\u4ee3\u7801\u8981\u6bd4\u7ebf\u6bb5\u6811\u77ed\u5f97\u591a\uff0c\u601d\u7ef4\u4e5f\u66f4\u6e05\u6670\uff0c\u5728\u89e3\u51b3\u4e00\u4e9b\u5355\u70b9\u4fee\u6539\u7684\u95ee\u9898\u65f6\uff0c\u6811\u72b6\u6570\u7ec4\u662f\u4e0d\u4e8c\u4e4b\u9009\u3002\n\n\n\n\n\u6811\u72b6\u6570\u7ec4\u539f\u7406\n\u00b6\n\n\n\u5982\u679c\u8981\u5177\u4f53\u4e86\u89e3\u6811\u72b6\u6570\u7ec4\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u8bf7\u770b\u4e0b\u9762\u8fd9\u5f20\u56fe\uff1a\n\n\n\n\n\u6700\u4e0b\u9762\u7684\u516b\u4e2a\u65b9\u5757\u5c31\u4ee3\u8868\u5b58\u5165a\u4e2d\u7684\u516b\u4e2a\u6570\uff0c\u73b0\u5728\u90fd\u662f\u5341\u8fdb\u5236\uff1b\n\n\n\u4ed6\u4eec\u4e0a\u9762\u7684\u53c2\u5dee\u4e0d\u9f50\u7684\u5269\u4e0b\u7684\u65b9\u5757\u5c31\u4ee3\u8868a\u7684\u4e0a\u7ea7\u2014\u2014c\u6570\u7ec4\uff1b\n\n\n\u5f88\u663e\u7136\u770b\u51fa\uff1a\n\n\nc[2]\nc[2]\n\u7ba1\u7406\u7684\u662f\na[1]\na[1]\n & \na[2]\na[2]\n \uff1b\n\n\nc[4]\nc[4]\n\u7ba1\u7406\u7684\u662f\na[1]\na[1]\n & \na[2]\na[2]\n & \na[3]\na[3]\n & \na[4]\na[4]\n \uff1b\n\n\nc[6]\nc[6]\n\u7ba1\u7406\u7684\u662f\na[5]\na[5]\n & \na[6]\na[6]\n \uff1b\nc[8]\nc[8]\n\u5219\u7ba1\u7406\u5168\u90e88\u4e2a\u6570\u3002\n\n\n\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u8981\u7b97\u533a\u95f4\u548c\u7684\u8bdd\uff0c\u6bd4\u5982\u8bf4\u8981\u7b97\na[51]\na[51]\n ~ \na[91]\na[91]\n\u7684\u533a\u95f4\u548c\uff0c\u66b4\u529b\u7b97\u5f53\u7136\u53ef\u4ee5\uff0c\u90a3\u4e0a\u767e\u4e07\u7684\u6570\uff0c\u90a3\u5c31RE\u55bd\u3002\n\n\n\u90a3\u4e48\u8fd9\u79cd\u7c7b\u4f3c\u4e8e\u8df3\u4e00\u8df3\u7684\u8fde\u7eed\u8df3\u5230\u4e2d\u5fc3\u70b9\u800c\u5206\u503c\u4e0d\u65ad\u53d8\u5927\u7684\u539f\u7406\u662f\u4e00\u6837\u7684(\u500d\u589e)\u3002\n\n\n\u4f60\u4ece91\u5f00\u59cb\u5f80\u524d\u8df3\uff0c\u53d1\u73b0\nc[n]\nc[n]\n\uff08n\u6211\u4e5f\u4e0d\u786e\u5b9a\u662f\u591a\u5c11\uff0c\u7b97\u8d77\u6765\u592a\u9ebb\u70e6\uff0c\u5c31\u610f\u601d\u4e00\u4e0b\uff09\u53ea\u7ba1\na[91]\na[91]\n\u8fd9\u4e2a\u70b9\uff0c\u90a3\u4e48\u4f60\u5c31\u4f1a\u627e\na[90]\na[90]\n\uff0c\u53d1\u73b0\nc[n - 1]\nc[n - 1]\n\u7ba1\u7684\u662f\na[90]\na[90]\n & \na[89]\na[89]\n \uff1b\u90a3\u4e48\u4f60\u5c31\u4f1a\u76f4\u63a5\u8df3\u5230\na[88]\na[88]\n \uff0c\nc[n - 2]\nc[n - 2]\n\u5c31\u4f1a\u7ba1\na[81]\na[81]\n ~ \na[88]\na[88]\n\u8fd9\u4e9b\u6570\uff0c\u4e0b\u6b21\u67e5\u8be2\u4ece\na[80]\na[80]\n\u5f80\u524d\u627e\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\n\n\n\u6811\u72b6\u6570\u7ec4\u7684\u7528\u6cd5\u53ca\u64cd\u4f5c\n\u00b6\n\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u4f60\u662f\u600e\u4e48\u77e5\u9053c\u7ba1\u7684a\u7684\u4e2a\u6570\u5206\u522b\u662f\u591a\u5c11\u5462\uff1f\u4f60\u90a3\u4e2a1\u4e2a 2\u4e2a 8\u4e2a\u2026\u2026\u662f\u600e\u4e48\u6765\u7684\u5462\uff1f\n\u8fd9\u65f6\uff0c\u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u51fd\u6570\u2014\u2014lowbit\uff1a\n\nint\n \nlowbit\n(\nint\n \nx\n)\n//\u7b97\u51fax\u4e8c\u8fdb\u5236\u7684\u4ece\u53f3\u5f80\u5de6\u51fa\u73b0\u7b2c\u4e00\u4e2a1\u4ee5\u53ca\u8fd9\u4e2a1\u4e4b\u540e\u7684\u90a3\u4e9b0\u7ec4\u6210\u6570\u7684\u4e8c\u8fdb\u5236\u5bf9\u5e94\u7684\u5341\u8fdb\u5236\u7684\u6570 \n\n\n{\n\n    \nreturn\n \nx\n \n&\n \n-\nx\n;\n\n\n}\n\n\n\nlowbit\u7684\u610f\u601d\u6ce8\u91ca\u8bf4\u660e\u4e86\uff0c\u54b1\u4eec\u5c31\u7528\u8fd9\u4e2a\u8bf4\u6cd5\u6765\u8bc1\u660e\u4e00\u4e0b\na[88]\na[88]\n\uff1a\n\n88 -> 1011000 B\uff08B\u4ee3\u8868\u4e8c\u8fdb\u5236\uff09\n\n\u53d1\u73b0\u7b2c\u4e00\u4e2a1\u4ee5\u53ca\u4ed6\u540e\u9762\u76840\u7ec4\u6210\u7684\u4e8c\u8fdb\u5236\u662f 1000\n\n1000 B -> 8\n\n1000\u5bf9\u5e94\u7684\u5341\u8fdb\u5236\u662f8\uff0c\u6240\u4ee5\nc\nc\n\u4e00\u5171\u7ba1\u74068\u4e2a\na\na\n\u3002\n\n\n\u8fd9\u5c31\u662f\nlowbit\nlowbit\n\u7684\u7528\u5904\uff0c\u4ec5\u6b64\u800c\u5df2\uff08\u4f46\u4e5f\u76f8\u5f53\u6709\u7528\uff09\u3002\n\n\n\u4f60\u53ef\u80fd\u53c8\u95ee\u4e86\uff1ax & -x \u662f\u4ec0\u4e48\u610f\u601d\u554a\uff1f\n\n\n\n\n-x \u4ee3\u8868x\u7684\u8d1f\u6570\uff0c\u8ba1\u7b97\u673a\u4e2d\u8d1f\u6570\u4f7f\u7528\u5bf9\u5e94\u7684\u6b63\u6570\u7684\u8865\u7801\u6765\u8868\u793a\u3002\n\n\n\n\n\u4f8b\u5982 :\n\nx =88\uff081011000\uff09;\n\n-x = -88 = (0100111 + 1) = (101000);\n\nx & (-x) = (1000) = 8.\n\n\n\u795e\u5947\u5427\uff0c\u6211\u4e5f\u89c9\u5f97\u795e\u5947\uff01\n\n\n\u90a3\u4e48\u5bf9\u4e8e\n\u5355\u70b9\u4fee\u6539\n\u5c31\u66f4\u8f7b\u677e\u4e86\uff1a\n\n\nvoid\n \nchange\n(\nint\n \nx\n \n,\nint\n \nk\n)\n\n\n{\n\n    \nwhile\n(\nx\n \n<=\n \nn\n)\n//\u4e0d\u80fd\u8d8a\u754c \n\n    \n{\n\n        \nc\n[\nx\n]\n \n=\n \nc\n[\nx\n]\n \n+\n \nk\n;\n\n        \nx\n \n=\n \nx\n \n+\n \nlowbit\n(\nx\n);\n\n    \n}\n\n\n}\n\n\n\n\n\n\u6bcf\u6b21\u53ea\u8981\u5728\u4ed6\u7684\u4e0a\u7ea7\u90a3\u91cc\u66f4\u65b0\u5c31\u884c\uff0c\u81ea\u5df1\u5c31\u53ef\u4ee5\u4e0d\u7528\u7ba1\u4e86\u3002\n\n\nint\n \ngetsum\n(\nint\n \nx\n)\n \n//a[1]\u2026\u2026a[x]\u7684\u548c \n\n\n{\n\n    \nint\n \nans\n \n=\n \n0\n;\n\n    \nwhile\n(\nx\n \n>=\n \n1\n)\n\n    \n{\n\n        \nans\n \n=\n \nans\n \n+\n \nc\n[\nx\n];\n\n        \nx\n \n=\n \nx\n \n-\n \nlowbit\n(\nx\n);\n\n    \n}\n\n    \nreturn\n \nans\n;\n\n\n}\n\n\n\n\n\n\u533a\u95f4\u548c\n\u4e5f\u4e0d\u7528\u8bf4\u4e86\u5427\uff0c\u4ee3\u7801\u5341\u5206\u6e05\u771f\u3002\n\n\n\u4f8b\u9898\n\u00b6\n\n\n\u4f20\u9001\u95e8\n\n\n\u4f20\u9001\u95e82",
            "title": "\u6811\u72b6\u6570\u7ec4"
        },
        {
            "location": "/data-structure/intermediate/bit/#_1",
            "text": "",
            "title": "\u6811\u72b6\u6570\u7ec4"
        },
        {
            "location": "/data-structure/intermediate/bit/#_2",
            "text": "\u6811\u72b6\u6570\u7ec4\u548c\u4e0b\u9762\u7684\u7ebf\u6bb5\u6811\u53ef\u662f\u4eb2\u5144\u5f1f\u4e86\uff0c\u4f46\u4ed6\u4fe9\u6bd5\u7adf\u8fd8\u6709\u4e00\u4e9b\u533a\u522b\uff1a \n\u6811\u72b6\u6570\u7ec4\u80fd\u6709\u7684\u64cd\u4f5c\uff0c\u7ebf\u6bb5\u6811\u4e00\u5b9a\u6709\uff1b \n\u7ebf\u6bb5\u6811\u6709\u7684\u64cd\u4f5c\uff0c\u6811\u72b6\u6570\u7ec4\u4e0d\u4e00\u5b9a\u6709\u3002  \u8fd9\u4e48\u770b\u6765\u9009\u62e9\u7ebf\u6bb5\u6811\u4e0d\u5c31 \u201c\u5f97\u5929\u4e0b\u4e86\u201d \uff1f  \u4e8b\u5b9e\u4e0a\uff0c\u6811\u72b6\u6570\u7ec4\u7684\u4ee3\u7801\u8981\u6bd4\u7ebf\u6bb5\u6811\u77ed\u5f97\u591a\uff0c\u601d\u7ef4\u4e5f\u66f4\u6e05\u6670\uff0c\u5728\u89e3\u51b3\u4e00\u4e9b\u5355\u70b9\u4fee\u6539\u7684\u95ee\u9898\u65f6\uff0c\u6811\u72b6\u6570\u7ec4\u662f\u4e0d\u4e8c\u4e4b\u9009\u3002",
            "title": "\u6811\u72b6\u6570\u7ec4\u7b80\u4ecb"
        },
        {
            "location": "/data-structure/intermediate/bit/#_3",
            "text": "\u5982\u679c\u8981\u5177\u4f53\u4e86\u89e3\u6811\u72b6\u6570\u7ec4\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u8bf7\u770b\u4e0b\u9762\u8fd9\u5f20\u56fe\uff1a   \u6700\u4e0b\u9762\u7684\u516b\u4e2a\u65b9\u5757\u5c31\u4ee3\u8868\u5b58\u5165a\u4e2d\u7684\u516b\u4e2a\u6570\uff0c\u73b0\u5728\u90fd\u662f\u5341\u8fdb\u5236\uff1b  \u4ed6\u4eec\u4e0a\u9762\u7684\u53c2\u5dee\u4e0d\u9f50\u7684\u5269\u4e0b\u7684\u65b9\u5757\u5c31\u4ee3\u8868a\u7684\u4e0a\u7ea7\u2014\u2014c\u6570\u7ec4\uff1b  \u5f88\u663e\u7136\u770b\u51fa\uff1a  c[2] c[2] \u7ba1\u7406\u7684\u662f a[1] a[1]  &  a[2] a[2]  \uff1b  c[4] c[4] \u7ba1\u7406\u7684\u662f a[1] a[1]  &  a[2] a[2]  &  a[3] a[3]  &  a[4] a[4]  \uff1b  c[6] c[6] \u7ba1\u7406\u7684\u662f a[5] a[5]  &  a[6] a[6]  \uff1b c[8] c[8] \u5219\u7ba1\u7406\u5168\u90e88\u4e2a\u6570\u3002  \u6240\u4ee5\uff0c\u5982\u679c\u4f60\u8981\u7b97\u533a\u95f4\u548c\u7684\u8bdd\uff0c\u6bd4\u5982\u8bf4\u8981\u7b97 a[51] a[51]  ~  a[91] a[91] \u7684\u533a\u95f4\u548c\uff0c\u66b4\u529b\u7b97\u5f53\u7136\u53ef\u4ee5\uff0c\u90a3\u4e0a\u767e\u4e07\u7684\u6570\uff0c\u90a3\u5c31RE\u55bd\u3002  \u90a3\u4e48\u8fd9\u79cd\u7c7b\u4f3c\u4e8e\u8df3\u4e00\u8df3\u7684\u8fde\u7eed\u8df3\u5230\u4e2d\u5fc3\u70b9\u800c\u5206\u503c\u4e0d\u65ad\u53d8\u5927\u7684\u539f\u7406\u662f\u4e00\u6837\u7684(\u500d\u589e)\u3002  \u4f60\u4ece91\u5f00\u59cb\u5f80\u524d\u8df3\uff0c\u53d1\u73b0 c[n] c[n] \uff08n\u6211\u4e5f\u4e0d\u786e\u5b9a\u662f\u591a\u5c11\uff0c\u7b97\u8d77\u6765\u592a\u9ebb\u70e6\uff0c\u5c31\u610f\u601d\u4e00\u4e0b\uff09\u53ea\u7ba1 a[91] a[91] \u8fd9\u4e2a\u70b9\uff0c\u90a3\u4e48\u4f60\u5c31\u4f1a\u627e a[90] a[90] \uff0c\u53d1\u73b0 c[n - 1] c[n - 1] \u7ba1\u7684\u662f a[90] a[90]  &  a[89] a[89]  \uff1b\u90a3\u4e48\u4f60\u5c31\u4f1a\u76f4\u63a5\u8df3\u5230 a[88] a[88]  \uff0c c[n - 2] c[n - 2] \u5c31\u4f1a\u7ba1 a[81] a[81]  ~  a[88] a[88] \u8fd9\u4e9b\u6570\uff0c\u4e0b\u6b21\u67e5\u8be2\u4ece a[80] a[80] \u5f80\u524d\u627e\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002",
            "title": "\u6811\u72b6\u6570\u7ec4\u539f\u7406"
        },
        {
            "location": "/data-structure/intermediate/bit/#_4",
            "text": "\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u4f60\u662f\u600e\u4e48\u77e5\u9053c\u7ba1\u7684a\u7684\u4e2a\u6570\u5206\u522b\u662f\u591a\u5c11\u5462\uff1f\u4f60\u90a3\u4e2a1\u4e2a 2\u4e2a 8\u4e2a\u2026\u2026\u662f\u600e\u4e48\u6765\u7684\u5462\uff1f\n\u8fd9\u65f6\uff0c\u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u51fd\u6570\u2014\u2014lowbit\uff1a int   lowbit ( int   x ) //\u7b97\u51fax\u4e8c\u8fdb\u5236\u7684\u4ece\u53f3\u5f80\u5de6\u51fa\u73b0\u7b2c\u4e00\u4e2a1\u4ee5\u53ca\u8fd9\u4e2a1\u4e4b\u540e\u7684\u90a3\u4e9b0\u7ec4\u6210\u6570\u7684\u4e8c\u8fdb\u5236\u5bf9\u5e94\u7684\u5341\u8fdb\u5236\u7684\u6570   { \n     return   x   &   - x ;  }  \nlowbit\u7684\u610f\u601d\u6ce8\u91ca\u8bf4\u660e\u4e86\uff0c\u54b1\u4eec\u5c31\u7528\u8fd9\u4e2a\u8bf4\u6cd5\u6765\u8bc1\u660e\u4e00\u4e0b a[88] a[88] \uff1a \n88 -> 1011000 B\uff08B\u4ee3\u8868\u4e8c\u8fdb\u5236\uff09 \n\u53d1\u73b0\u7b2c\u4e00\u4e2a1\u4ee5\u53ca\u4ed6\u540e\u9762\u76840\u7ec4\u6210\u7684\u4e8c\u8fdb\u5236\u662f 1000 \n1000 B -> 8 \n1000\u5bf9\u5e94\u7684\u5341\u8fdb\u5236\u662f8\uff0c\u6240\u4ee5 c c \u4e00\u5171\u7ba1\u74068\u4e2a a a \u3002  \u8fd9\u5c31\u662f lowbit lowbit \u7684\u7528\u5904\uff0c\u4ec5\u6b64\u800c\u5df2\uff08\u4f46\u4e5f\u76f8\u5f53\u6709\u7528\uff09\u3002  \u4f60\u53ef\u80fd\u53c8\u95ee\u4e86\uff1ax & -x \u662f\u4ec0\u4e48\u610f\u601d\u554a\uff1f   -x \u4ee3\u8868x\u7684\u8d1f\u6570\uff0c\u8ba1\u7b97\u673a\u4e2d\u8d1f\u6570\u4f7f\u7528\u5bf9\u5e94\u7684\u6b63\u6570\u7684\u8865\u7801\u6765\u8868\u793a\u3002   \u4f8b\u5982 : \nx =88\uff081011000\uff09; \n-x = -88 = (0100111 + 1) = (101000); \nx & (-x) = (1000) = 8.  \u795e\u5947\u5427\uff0c\u6211\u4e5f\u89c9\u5f97\u795e\u5947\uff01  \u90a3\u4e48\u5bf9\u4e8e \u5355\u70b9\u4fee\u6539 \u5c31\u66f4\u8f7b\u677e\u4e86\uff1a  void   change ( int   x   , int   k )  { \n     while ( x   <=   n ) //\u4e0d\u80fd\u8d8a\u754c  \n     { \n         c [ x ]   =   c [ x ]   +   k ; \n         x   =   x   +   lowbit ( x ); \n     }  }   \u6bcf\u6b21\u53ea\u8981\u5728\u4ed6\u7684\u4e0a\u7ea7\u90a3\u91cc\u66f4\u65b0\u5c31\u884c\uff0c\u81ea\u5df1\u5c31\u53ef\u4ee5\u4e0d\u7528\u7ba1\u4e86\u3002  int   getsum ( int   x )   //a[1]\u2026\u2026a[x]\u7684\u548c   { \n     int   ans   =   0 ; \n     while ( x   >=   1 ) \n     { \n         ans   =   ans   +   c [ x ]; \n         x   =   x   -   lowbit ( x ); \n     } \n     return   ans ;  }   \u533a\u95f4\u548c \u4e5f\u4e0d\u7528\u8bf4\u4e86\u5427\uff0c\u4ee3\u7801\u5341\u5206\u6e05\u771f\u3002",
            "title": "\u6811\u72b6\u6570\u7ec4\u7684\u7528\u6cd5\u53ca\u64cd\u4f5c"
        },
        {
            "location": "/data-structure/intermediate/bit/#_5",
            "text": "\u4f20\u9001\u95e8  \u4f20\u9001\u95e82",
            "title": "\u4f8b\u9898"
        },
        {
            "location": "/data-structure/intermediate/segment/",
            "text": "1. \u5199\u5728\u524d\u9762\n\u00b6\n\n\n\u7ebf\u6bb5\u6811\u662f\u4e2a\u597d\u4e1c\u897f\u554aQwQ\n\n\nOI\u4e2d\u6700\u5e38\u7528\u7684\u6570\u636e\u7ed3\u6784\u4e4b\u4e00\uff0c\u4e0d\u5b66\u4e0d\u884c\u554aOvO\n\n\n2. \u7ebf\u6bb5\u6811\u662f\u4ec0\u4e48\n\u00b6\n\n\n\n\n\u7ebf\u6bb5\u6811\u662f\u4e00\u79cd\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u4e0e\u533a\u95f4\u6811\u76f8\u4f3c\uff0c\u5b83\u5c06\u4e00\u4e2a\u533a\u95f4\u5212\u5206\u6210\u4e00\u4e9b\u5355\u5143\u533a\u95f4\uff0c\u6bcf\u4e2a\u5355\u5143\u533a\u95f4\u5bf9\u5e94\u7ebf\u6bb5\u6811\u4e2d\u7684\u4e00\u4e2a\u53f6\u7ed3\u70b9\u3002\u4f7f\u7528\u7ebf\u6bb5\u6811\u53ef\u4ee5\u5feb\u901f\u7684\u67e5\u627e\u67d0\u4e00\u4e2a\u8282\u70b9\u5728\u82e5\u5e72\u6761\u7ebf\u6bb5\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \nO(logN)\nO(logN)\n\u3002\u800c\u672a\u4f18\u5316\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a \n2N\n2N\n\uff0c\u56e0\u6b64\u6709\u65f6\u9700\u8981\u79bb\u6563\u5316\u8ba9\u7a7a\u95f4\u538b\u7f29\u3002\u2014\u2014From \u5ea6\u5a18\n\n\n\n\n\u53cd\u6b63\u5c31\u662f\u4e00\u79cd\u53ef\u4ee5\u5728\u5f88\u77ed\u7684\u65f6\u95f4\u5185\u5bf9\u67d0\u4e2a\u533a\u95f4\u8fdb\u884c\u64cd\u4f5c\u7684\u6570\u636e\u7ed3\u6784\u3002\n\n\n3. \u7ebf\u6bb5\u6811\u6709\u4ec0\u4e48\u7528\n\u00b6\n\n\n\u5728\nO(logN)\nO(logN)\n\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u5b9e\u73b0\u5982\uff1a\u5355\u70b9\u4fee\u6539\u3001\u533a\u95f4\u4fee\u6539\u3001\u533a\u95f4\u67e5\u8be2\uff08\u5982\uff1a\u533a\u95f4\u6c42\u548c\uff0c\u6c42\u533a\u95f4\u6700\u5927\u503c\uff0c\u6c42\u533a\u95f4\u6700\u5c0f\u503c\u2026\u2026\uff09\u8fd8\u6709\u5f88\u591a\u2026\u2026\n\n\n4. \u7ebf\u6bb5\u6811\u600e\u4e48\u5b9e\u73b0\n\u00b6\n\n\n(1) \u7ebf\u6bb5\u6811\u7684\u57fa\u672c\u7ed3\u6784\u4e0e\u5efa\u6811\n\u00b6\n\n\n\u60f3\u8981\u5efa\u7acb\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u4e0d\u7406\u89e3\u5b83\u7684\u7ed3\u6784\u3001\u539f\u7406\u662f\u80af\u5b9a\u884c\u4e0d\u901a\u7684\u3002\n\n\n\u4e0b\u9762\u6211\u6765\u4e3e\u4e2a\u6817\u5b50\uff1a\n\n\n\u6211\u4eec\u6709\u4e2a\u5927\u5c0f\u4e3a5\u7684\u6570\u7ec4a \n\\\\{10,11,12,13,14\\\\}\n\\\\{10,11,12,13,14\\\\}\n \u8981\u8fdb\u884c\u533a\u95f4\u6c42\u548c\u64cd\u4f5c\uff0c\u73b0\u5728\u6211\u4eec\u8981\u600e\u4e48\u628a\u8fd9\u4e2a\u6570\u7ec4\u5b58\u5230\u7ebf\u6bb5\u6811\u4e2d\uff08\u4e5f\u53ef\u4ee5\u8bf4\u662f\u8f6c\u5316\u6210\u7ebf\u6bb5\u6811\uff09\u5462\uff1f\u6211\u4eec\u8fd9\u6837\u5b50\u505a\uff1a\u8bbe\u7ebf\u6bb5\u6811\u7684\u6839\u8282\u70b9\u7f16\u53f7\u4e3a1\uff0c\u7528\u6570\u7ec4d\u6765\u4fdd\u5b58\u6211\u4eec\u7684\u7ebf\u6bb5\u6811\uff0cd[i]\u7528\u6765\u4fdd\u5b58\u7f16\u53f7\u4e3ai\u7684\u8282\u70b9\u7684\u503c\uff08\u8fd9\u91cc\u8282\u70b9\u7684\u503c\u5c31\u662f\u8fd9\u4e2a\u8282\u70b9\u6240\u8868\u793a\u7684\u533a\u95f4\u603b\u548c\uff09\uff0c\u5982\u56fe\u6240\u793a\uff1a\n\n\n\n\u56fe\u4e2d \nd[1]\nd[1]\n \u8868\u793a\u6839\u8282\u70b9\uff0c\u7d2b\u8272\u65b9\u6846\u662f\u6570\u7ec4 \na\na\n\uff0c\u7ea2\u8272\u65b9\u6846\u662f\u6570\u7ec4 \nd\nd\n\uff0c\u7ea2\u8272\u65b9\u6846\u4e2d\u7684\u62ec\u53f7\u4e2d\u7684\u9ec4\u8272\u6570\u5b57\u8868\u793a\u5b83\u6240\u5728\u7684\u90a3\u4e2a\u7ea2\u8272\u65b9\u6846\u8868\u793a\u7684\u7ebf\u6bb5\u6811\u8282\u70b9\u6240\u8868\u793a\u7684\u533a\u95f4\uff0c\u5982 \nd[1]\nd[1]\n \u6240\u8868\u793a\u7684\u533a\u95f4\u5c31\u662f \n1~5\uff08a[1]~a[5]\uff09\n1~5\uff08a[1]~a[5]\uff09\n\uff0c\u5373 \nd[1]\nd[1]\n \u6240\u4fdd\u5b58\u7684\u503c\u662f \na[1]+a[2]+...+a[5]\na[1]+a[2]+...+a[5]\n\uff0c\nd[1]=60\nd[1]=60\n \u8868\u793a\u7684\u662f \na[1]+a[2]+...+a[5]=60\na[1]+a[2]+...+a[5]=60\n\u3002\n\n\n\u901a\u8fc7\u89c2\u5bdf\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\nd[i]\nd[i]\n \u7684\u5de6\u513f\u5b50\u8282\u70b9\u5c31\u662f \nd[2\\times i]\nd[2\\times i]\n\uff0c\nd[i]\nd[i]\n \u7684\u53f3\u8282\u70b9\u5c31\u662f \nd[2\\times i+1]\nd[2\\times i+1]\n\u3002\u8fdb\u4e00\u6b65\u89c2\u5bdf\uff0c\u53ef\u4ee5\u770b\u51fa\u5982\u679c \nd[i]\nd[i]\n \u8868\u793a\u7684\u662f\u533a\u95f4 \n[s,t]\n[s,t]\n\uff08\u5373 $d[i]=a[s]+a[s+1]+...+a[t] $\uff09\u7684\u8bdd\uff0c\u90a3\u4e48 \nd[i]\nd[i]\n \u7684\u5de6\u513f\u5b50\u8282\u70b9\u8868\u793a\u7684\u662f\u533a\u95f4 \n[s,(s+t)/2]\n[s,(s+t)/2]\n\uff0cd[i]\u7684\u53f3\u513f\u5b50\u8868\u793a\u7684\u662f\u533a\u95f4 \n[(s+t)/2+1,t]\n[(s+t)/2+1,t]\n\u3002\n\n\n\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u8868\u793a\u5462\uff1f\u56e0\u4e3a\u7ebf\u6bb5\u6811\u5229\u7528\u4e86\u4e8c\u5206\u7684\u601d\u60f3\uff0c\u7ebf\u6bb5\u6811\u5b9e\u9645\u4e0a\u662f\u4e2a\u4e8c\u53c9\u6811\uff0c\u8fd9\u4e9b\u4e0d\u61c2\u7684\u8bdd\u5c31\u65e0\u6cd5\u7406\u89e3\u7ebf\u6bb5\u6811\u4e86\uff0c\u6240\u4ee5\u5982\u679c\u4e0d\u660e\u767d\u4e8c\u5206\u6216\u8005\u4e8c\u53c9\u6811\u7684\u8bdd\u2026\u2026\u5efa\u8bae\u53bb\u95ee\u95ee\u5ea6\u5a18\u3002\n\n\n\u5177\u4f53\u8981\u600e\u4e48\u7528\u4ee3\u7801\u5b9e\u73b0\u5462\uff1f\n\n\n\u6211\u4eec\u7ee7\u7eed\u89c2\u5bdf\uff0c\u6709\u6ca1\u6709\u53d1\u73b0\u5982\u679cd[i]\u8868\u793a\u7684\u533a\u95f4\u5927\u5c0f \n==1\n==1\n\uff08\u533a\u95f4\u5927\u5c0f\u6307\u7684\u662f\u533a\u95f4\u5305\u542b\u7684\u5143\u7d20\u7684\u4e2a\u6570\uff08\u5373a\u7684\u4e2a\u6570\uff09\uff09\u7684\u8bdd\uff08\u8bbe \nd[i]\nd[i]\n \u8868\u793a\u533a\u95f4 \n[s,t]\n[s,t]\n\uff0c\u5b83\u7684\u533a\u95f4\u5927\u5c0f\u5c31\u662f \nt-s+1\nt-s+1\n\uff0c\u4e0d\u4fe1\u4f60\u770b\u4e0a\u9762\u7684\u56fe\uff09\uff0c\u90a3\u4e48d[i]\u6240\u8868\u793a\u7684\u533a\u95f4 \n[s,t]\n[s,t]\n \u4e2d \ns\ns\n \u80af\u5b9a \n==t\n==t\n\uff08\u4e0d\u4fe1\u4f60\u8fd8\u662f\u770b\u56fe\uff09\uff0c\u4e14 \nd[i]=a[s]\nd[i]=a[s]\n\uff08\u5f53\u7136\u4e5f \n=a[t]\n=a[t]\n\uff09\n\u4e3a\u4ec0\u4e48\u8981\u8bb2\u8fd9\u4e2a\u4e1c\u897f\u5462\uff1f\u4f60\u6ca1\u53d1\u73b0\u8fd9\u4e2a\u662f\u4e2a\u9012\u5f52\u8fb9\u754c\u5417\uff1f\n\n\nO(\u2229_\u2229)O\u54c8\u54c8~\n\n\n\u601d\u8def\u5982\u4e0b\uff1a\n\n\n\n\n\n\n\n\n\u90a3\u4e48\u5c31\u8fd9\u6837\u5199\u4ee3\u7801\uff1a\n\n\n\u5efa\u6811\n(\ns\n,\nt\n,\ni\n)\n\n\n{\n\n    \n\u5982\u679c\n(\ns\n==\nt\n)\n\n    \n{\n\n        \nd\n[\ni\n]\n=\na\n[\ns\n];\n\n    \n}\n\n    \n\u5426\u5219\n\n    \n{\n\n        \n\u5efa\u6811\n(\ns\n,(\ns\n+\nt\n)\n/\n2\n,\n2\n*\ni\n);\n\n        \n\u5efa\u6811\n((\ns\n+\nt\n)\n/\n2\n+\n1\n,\nt\n,\n2\n*\ni\n+\n1\n);\n\n        \nd\n[\ni\n]\n=\nd\n[\n2\n*\ni\n]\n+\nd\n[\n2\n*\ni\n+\n1\n];\n\n    \n}\n\n\n}\n\n\n\n\n\n\u5177\u4f53\u4ee3\u7801\u5b9e\u73b0(c++)\uff1a\n\n\nvoid\n \nbuild\n(\nint\n \ns\n,\nint\n \nt\n,\nint\n \np\n)\n\n\n{\n\n    \nif\n(\ns\n==\nt\n){\nd\n[\np\n]\n=\na\n[\ns\n];\nreturn\n;}\n\n    \nint\n \nm\n=\n(\ns\n+\nt\n)\n/\n2\n;\n\n    \nbuild\n(\ns\n,\nm\n,\np\n*\n2\n),\nbuild\n(\nm\n+\n1\n,\nt\n,\np\n*\n2\n+\n1\n);\n\n    \nd\n[\np\n]\n=\nd\n[\np\n*\n2\n]\n+\nd\n[(\np\n*\n2\n)\n+\n1\n];\n\n\n}\n\n\n\n\n\n\u4e0a\u9762\u90a3\u77ed\u77ed7\u884c\u4ee3\u7801\u5c31\u80fd\u5efa\u7acb\u4e00\u4e2a\u7ebf\u6bb5\u6811\u3002\n\n\n\u5176\u5b9e\u8fd8\u6709\u4e00\u4e2a\u6bd4\u8f83\u4e25\u91cd\u7684\u95ee\u9898\uff1a\u6570\u7ec4 \nd\nd\n \u5230\u5e95\u5f00\u591a\u5927\uff1f\u5982\u679c \na\na\n \u6570\u7ec4\u4e2d\u5143\u7d20\u4e2a\u6570\u662f \nn\nn\n\uff0c\u90a3 \nd\nd\n \u6570\u7ec4\u7684\u5143\u7d20\u4e2a\u6570\u5e94\u8be5\u5b9a\u4e3a\u591a\u5c11\uff1f\u4fdd\u9669\u8d77\u89c1\uff0c\u4e3a\u4e86\u9632\u6b62\u4f60\u7684 \nd\nd\n \u6570\u7ec4\u8d8a\u754c\u3001\u7a0b\u5e8f\u7206\u70b8\u7684\u8bdd\uff0c\nd\nd\n \u6570\u7ec4\u5927\u5c0f\u5e94\u8be5\u4e3a\nn\\times 4\nn\\times 4\n\uff0c\u518d\u4fdd\u9669\u4e00\u70b9\u7684\u8bdd\u5b9a\u4e3a\nn\\times 4+5\nn\\times 4+5\n\u5427\u3002\u4e3a\u5565\u662f\nn\\times 4\nn\\times 4\n\u5462\uff1f\u8fd9\u91cc\u6211\u8f6c\u8f7d\u4e00\u4e0b\u4e00\u7bc7\u535a\u5ba2\uff0c\u91cc\u9762\u6709\u8be6\u7ec6\u7684\u8bb2\u89e3\uff0c\u6211\u5c31\u4e0d\u8bb2\u4e86\uff08\u6211\u61d2\u884c\u4e86\u5427\uff09\u2026\u2026\n\n\n\u4f20\u9001\u95e8\uff1a\nhttp://scinart.github.io/acm/2014/03/19/acm-segment-tree-space-analysis/\n\n\uff08\u94fe\u63a5\u5df2\u5931\u6548\uff09\n\n\n\n\n(2) \u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u67e5\u8be2\n\u00b6\n\n\n\u533a\u95f4\u67e5\u8be2\uff0c\u6bd4\u5982\u6c42\u533a\u95f4 \n[l,r]\n[l,r]\n \u7684\u603b\u548c\uff08\u5373 \na[l]+a[l+1]+...+a[r]\na[l]+a[l+1]+...+a[r]\n\uff09\u3001\u6c42\u533a\u95f4\u6700\u5927\u503c/\u6700\u5c0f\u503c\u2026\u2026\u8fd8\u6709\u5f88\u591a\u5f88\u591a\u2026\u2026\u600e\u4e48\u505a\u5462\uff1f\n\n\n\n\n\u62ff\u4e0a\u9762\u8fd9\u5f20\u56fe\u4e3e\u6817\uff01\n\n\n\n\n\uff08\u53d1\u535a\u5ba2\u7d2f\u6b7b\u4e86\u65e0\u804a\u4e00\u4e0b\uff09\n\u5982\u679c\u8981\u67e5\u8be2\u533a\u95f4 \n[1,5]\n[1,5]\n \u7684\u548c\uff0c\u90a3\u76f4\u63a5\u83b7\u53d6 \nd[1]\nd[1]\n \u7684\u503c\uff0860\uff09\u5373\u53ef\u3002\u90a3\u5982\u679c\u6211\u5c31\u4e0d\u67e5\u8be2\u533a\u95f4 \n[1,5]\n[1,5]\n\uff0c\u6211\u5c31\u67e5\u533a\u95f4 \n[3,5]\n[3,5]\n \u5462\uff1f\n\n\n\u03a3(\u2299\u25bd\u2299\"a\n\n\n\u61f5 B \u4e86\u5427\u3002\u4f46\u5176\u5b9e\u5462\u6211\u4eec\u80af\u5b9a\u8fd8\u662f\u6709\u529e\u6cd5\u7684\uff01\n\n\n<(\uffe3\u02c7\uffe3)/\n\n\n\u4f60\u8981\u67e5\u7684\u4e0d\u662f \n[3,5]\n[3,5]\n \u5417\uff1f\u6211\u628a \n[3,5]\n[3,5]\n \u62c6\u6210 \n[3,3]\n[3,3]\n \u548c \n[4,5]\n[4,5]\n \u4e0d\u5c31\u884c\u4e86\u5417\uff1f\n\n\n\u5177\u4f53\u601d\u8def\u89c1\u4ee3\u7801\uff1a\n\n\n\u6c42\u548c\uff08\u67e5\u8be2\u533a\u95f4\u7684\u5de6\u7aef\u70b9\nl\n,\n\u67e5\u8be2\u533a\u95f4\u7684\u53f3\u7aef\u70b9\nr\n,\n\u5f53\u524d\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u5de6\u7aef\u70b9\ns\n,\n\u5f53\u524d\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\nt\n,\n\u5f53\u524d\u8bbf\u95ee\u7684\u8282\u70b9\u7f16\u53f7\np\n\uff09\n\n\n{\n\n    \n\u5982\u679c\uff08\nl\n<=\ns\n&&\nt\n<=\nr\n\uff09\n//\u5f53\u524d\u8bbf\u95ee\u7684\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u5305\u542b\u5728\u67e5\u8be2\u533a\u95f4\u5185\n\n    \n{\n\n        \n\u8fd4\u56de\n \nd\n[\np\n]\n\uff1b\n\n    \n}\n\n    \n\u5426\u5219\n\n    \n{\n\n        \n\u4ee4\n \n\u8fd4\u56de\u503c\n=\n0\n\n        \n\u5982\u679c\uff08\nl\n<=\n(\ns\n+\nt\n)\n/\n2\n\uff09\n//\u5f53\u524d\u8bbf\u95ee\u7684\u8282\u70b9\u7684\u5de6\u513f\u5b50\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u5305\u542b\u5728\u67e5 \u8be2\u533a\u95f4\u5185,(s+t)/2\u5176\u5b9e\u662f\u5de6\u53f3\u513f\u5b50\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u7684\u5206\u5272\u7ebf\u4e14(s+t)/2\u5305\u542b\u5728\u5de6\u513f\u5b50\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u4e2d\n\n        \n{\n\n         \n\u8fd4\u56de\u503c\n+=\n\u6c42\u548c\uff08\nl\n,\nr\n,\ns\n,(\ns\n+\nt\n)\n/\n2\n,\np\n*\n2\n\uff09\n;\n//l\u548cr\u662f\u53ef\u4ee5\u4e0d\u7528\u53d8\u7684\uff01\u4e0d\u7ba1\u4f60\u4fe1\u4e0d\u4fe1\u6211\u53cd\u6b63\u662f\u4fe1\u4e86\u3002\u5f53\u524d\u8282\u70b9\u7684\u5de6\u513f\u5b50\u8282\u70b9\u7f16\u53f7\u662fp2\uff0c\u4e4b\u524d\u8bb2\u8fc7\u4e86\uff0c\u5de6\u513f\u5b50\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u5de6\u7aef\u70b9\u5c31\u662f\u5f53\u524d\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u7684\u5de6\u7aef\u70b9\uff0c(s+t)/2\u662f\u5de6\u513f\u5b50\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u7684\u53f3\u77ed\u70b9\n\n        \n}\n\n        \n\u5982\u679c\n(\nr\n>\n(\ns\n+\nt\n)\n/\n2\n)\n//\u5f53\u524d\u8bbf\u95ee\u7684\u8282\u70b9\u7684\u53f3\u513f\u5b50\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u5305\u542b\u5728\u67e5 \u8be2\u533a\u95f4\u5185\n\n        \n{\n\n          \n\u8fd4\u56de\u503c\n+=\n\u6c42\u548c\uff08\nl\n,\nr\n,(\ns\n+\nt\n)\n/\n2\n+\n1\n,\nt\n,\np\n*\n2\n+\n1\n\uff09\uff1b\n//(s+t)/2+1\u662f\u5f53\u524d\u8bbf\u95ee\u8282\u70b9\u7684\u53f3\u513f\u5b50\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u7684\u5de6\u7aef\u70b9\n\n        \n}\n\n        \n\u8fd4\u56de\n \n\u8fd4\u56de\u503c\uff1b\n\n    \n}\n\n\n}\n\n\n\n\n\n\u600e\u4e48\u6837\uff0c\u4ee3\u7801\u5f88\u4e11\u5427\uff1f\u5e9f\u8bdd\uff0c\u7528\u4e2d\u6587\u5199\u7684\u80fd\u4e0d\u4e11\u5417\uff1f\u73b0\u5728\u641e\u4e2a\u82f1(da)\u6587(xin)\u7684(wen)\uff1a\n\n\nint\n \ngetsum\n(\nint\n \nl\n,\nint\n \nr\n,\nint\n \ns\n,\nint\n \nt\n,\nint\n \np\n)\n\n\n{\n\n        \nif\n(\nl\n<=\ns\n&&\nt\n<=\nr\n)\nreturn\n \nd\n[\np\n];\n\n        \nint\n \nm\n=\n(\ns\n+\nt\n)\n/\n2\n,\nsum\n=\n0\n;\n\n        \nif\n(\nl\n<=\nm\n)\nsum\n+=\ngetsum\n(\nl\n,\nr\n,\ns\n,\nm\n,\np\n*\n2\n);\n\n        \nif\n(\nr\n>\nm\n)\nsum\n+=\ngetsum\n(\nl\n,\nr\n,\nm\n+\n1\n,\nt\n,\np\n*\n2\n+\n1\n);\n\n        \nreturn\n \nsum\n;\n\n\n}\n\n\n\n\n\n\u8fd8\u662f\u633a\u77ed\u7684\u5427\uff1f\u8fd9\u91cc\u7528\u5230\u7684\u4e3b\u8981\u601d\u8def\u5c31\u662f\u628a\u4e00\u4e2a\u533a\u95f4\u62c6\u6210\u5de6\u53f3\u4e24\u4e2a\u533a\u95f4\uff0c\u518d\u5206\u522b\u5904\u7406\u5de6\u53f3\u533a\u95f4\u3002\u4e5f\u662f\u4e8c\u5206\u7684\u601d\u60f3\u3002\n\n\n(3) \u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u4fee\u6539\u4e0e\u61d2\u60f0\u6807\u8bb0\n\u00b6\n\n\n\u533a\u95f4\u4fee\u6539\u662f\u4e2a\u5f88\u6709\u8da3\u7684\u4e1c\u897fo(\u256f\u25a1\u2570)o\u2026\u2026\u4f60\u60f3\u554a\uff0c\u5982\u679c\u4f60\u8981\u4fee\u6539\u533a\u95f4[l,r]\uff0c\u96be\u9053\u628a\u6240\u6709\u5305\u542b\u5728\u533a\u95f4[l,r]\u4e2d\u7684\u8282\u70b9\u90fd\u904d\u5386\u4e00\u6b21\u3001\u4fee\u6539\u4e00\u6b21\uff1f\u90a3\u4f30\u8ba1\u8fd9\u65f6\u95f4\u590d\u6742\u5ea6\u4f30\u8ba1\u4f1a\u4e0a\u5929|(*\u2032\u53e3`)\u3002\u8fd9\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u8fd9\u91cc\u8981\u5f15\u7528\u4e00\u4e2a\u53eb\u505a \n\u201c\u61d2\u60f0\u6807\u8bb0\u201d\n \u7684\u4e1c\u897f\u3002\n\n\n\u6211\u4eec\u8bbe\u4e00\u4e2a\u6570\u7ec4b\uff0cb[i]\u8868\u793a\u7f16\u53f7\u4e3ai\u7684\u8282\u70b9\u7684\u61d2\u60f0\u6807\u8bb0\u503c\u3002\u5565\u662f\u61d2\u60f0\u6807\u8bb0\u3001\u61d2\u60f0\u6807\u8bb0\u503c\u5462\uff1f(O_O)?\u8fd9\u91cc\u6211\u518d\u4e3e\u4e2a\u6817\u5b50\uff08\u539f\u521b\u5c0f\u6545\u4e8b\u6211\u771f\u6709\u624d\u54c8\u54c8\u54c8(\u25e1\u1d17\u25e1\u273f)\uff09\uff1a\n\n\n\n\nA\u6709\u4e24\u4e2a\u513f\u5b50\uff0c\u4e00\u4e2a\u662fB\uff0c\u4e00\u4e2a\u662fC\u3002\n\n\n\u6709\u4e00\u5929A\u8981\u5efa\u4e00\u4e2a\u65b0\u623f\u5b50\uff0c\u6ca1\u94b1\u3002\u521a\u597d\u8fc7\u5e74\u561b\uff0c\u6709\u4eba\u8981\u7ed9B\u548cC\u7ea2\u5305\uff0c\u4e24\u4e2a\u7ea2\u5305\u7684\u94b1\u6570\u76f8\u540c\u90fd\u662f(1000000000000001%2)\u5706\uff08\u597d\u591a\u554a\uff01\u2026\u2026\u4e0d\u5c31\u662f1\u5143\u5417\u2026\u2026\uff09\uff0c\u7136\u800c\u56e0\u4e3aA\u662f\u7236\u4eb2\u6240\u4ee5\u7ea2\u5305\u80af\u5b9a\u662f\u5148\u585e\u7ed9A\u54af~\n\n\n\u7406\u8bba\u4e0a\u6765\u8bb2A\u5e94\u8be5\u628a\u4e24\u4e2a\u7ea2\u5305\u5206\u522b\u7ed9B\u548cC\uff0c\u4f46\u662f\u2026\u2026\u7f3a\u94b1\u561b\uff0cA\u5c31\u628a\u7ea2\u5305\u5077\u5077\u6536\u5230\u81ea\u5df1\u53e3\u888b\u91cc\u4e86\u3002\n\n\nA\u9ad8\u5174\u2642\u5730\u8bf4\uff1a\u201c\u6211\u73b0\u5728\u67092\u4efd\u7ea2\u5305\u4e86\uff01\u6211\u53c8\u591a\u4e862\u00d7(1000000000000001%2)=2\u5706\u4e86\uff01\u54c8\u54c8\u54c8~\u201d\n\n\n\u4f46\u662fA\u77e5\u9053\uff0c\u5982\u679c\u4ed6\u4e0d\u628a\u7ea2\u5305\u7ed9B\u548cC\uff0c\u90a3B\u548cC\u80af\u5b9a\u4f1a\u4e0d\u723d\u7136\u540e\u5bfc\u81f4\u5bb6\u5ead\u77db\u76fe\u6700\u540e\u5d29\u6e83\uff0c\u6240\u4ee5A\u5bf9\u513f\u5b50B\u548cC\u8bf4\uff1a\u201c\u6211\u6b20\u4f60\u4eec\u6bcf\u4eba1\u4efd(1000000000000001%2)\u5706\u7684\u7ea2\u5305\uff0c\u4e0b\u6b21\u6709\u65b0\u7ea2\u5305\u7ed9\u8fc7\u6765\u7684\u65f6\u5019\u518d\u7ed9\u4f60\u4eec\uff01\u8fd9\u91cc\u6211\u5148\u505a\u4e0b\u8bb0\u5f55\u2026\u2026\u55ef\u2026\u2026\u6211\u94b1\u4f60\u4eec\u5404(1000000000000001%2)\u5706\u2026\u2026\u201d\u3002\n\n\n\u513f\u5b50B\u3001C\u6709\u70b9\u607c\u6012\uff1a\u201c\u53ef\u662f\u5982\u679c\u6709\u540c\u5b66\u95ee\u8d77\u6211\u4eec\u6211\u4eec\u6536\u5230\u4e86\u591a\u5c11\u7ea2\u5305\u548b\u529e\uff1f\u4f60\u628a\u6211\u4eec\u7684\u7ea2\u5305\u90fd\u6536\u4e86\uff0c\u6211\u4eec\u8fd8\u600e\u4e48\u88c5\u00d7\uff1f\u201d\n\n\n\u7236\u4eb2A\u8d76\u5fd9\u8bf4\uff1a\u201c\u6709\u540c\u5b66\u95ee\u8d77\u6765\u6211\u5c31\u4f1a\u7ed9\u4f60\u4eec\u7684\uff01\u6211\u6b20\u6761\u90fd\u5199\u597d\u4e86\u4e0d\u4f1a\u4e0d\u7b97\u8bdd\u7684\uff01\u201d\n\n\n\u8fd9\u6837B\u3001C\u624d\u653e\u4e86\u5fc3\u3002\uff08\u6ce8\uff1a%\u662f\u53d6\u4f59\u6570\u7684\u610f\u601d\uff0ca%b\u5c31\u662fa\u9664\u4ee5b\u7684\u4f59\u6570\uff0c\u6240\u4ee5\u2026\u20261000000000000001%2=1\uff09\n\n\n\n\n\u5728\u8fd9\u4e2a\u6545\u4e8b\u4e2d\u6211\u4eec\u4e0d\u96be\u770b\u51fa\uff0cA\u5c31\u662f\u7236\u4eb2\u8282\u70b9\uff0cB\u548cC\u662fA\u7684\u513f\u5b50\u8282\u70b9\uff0c\u800c\u4e14B\u548cC\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5206\u522b\u5bf9\u5e94\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u503c\uff08\u5c31\u662f\u4e4b\u524d\u8bb2\u7684\u6570\u7ec4 \na\na\n\uff09\uff0c\u6211\u4eec\u5047\u8bbe\u8282\u70b9A\u8868\u793a\u533a\u95f4 \n[1,2]\n[1,2]\n\uff08\u5373 \na[1]+a[2]\na[1]+a[2]\n\uff09\uff0c\u8282\u70b9B\u8868\u793a\u533a\u95f4 \n[1,1]\n[1,1]\n\uff08\u5373 \na[1]\na[1]\n\uff09\uff0c\u8282\u70b9C\u8868\u793a\u533a\u95f4 \n[2,2]\n[2,2]\n\uff08\u5373 \na[2]\na[2]\n\uff09\uff0c\u5b83\u4eec\u7684\u521d\u59cb\u503c\u90fd\u4e3a 0\uff08\u73b0\u5728\u624d\u521a\u5f00\u59cb\u5462\uff0c\u8fd8\u6ca1\u62ff\u5230\u7ea2\u5305\uff0c\u6240\u4ee5\u90fd\u6ca1\u94b1~\uff09\u3002\n\n\n\u5982\u56fe\uff1a\n\n\n\n\n\n\n\n\n\n\n\n\n\u6ce8\uff1a\u8fd9\u91ccD\u8868\u793a\u5f53\u524d\u8282\u70b9\u7684\u503c\uff08\u5373\u6240\u8868\u793a\u533a\u95f4\u7684\u533a\u95f4\u548c\uff09\n\u4e3a\u4ec0\u4e48\u8282\u70b9A\u7684D\u662f \n2\\times (1000000000000001\\%2)\n2\\times (1000000000000001\\%2)\n \u5462\uff1f\u539f\u56e0\u5f88\u7b80\u5355\u3002\u8282\u70b9A\u8868\u793a\u7684\u533a\u95f4\u662f[1,2]\uff0c\u4e00\u5171\u5305\u542b2\u4e2a\u5143\u7d20\u3002\u6211\u4eec\u662f\u8ba9 \n[1,2]\n[1,2]\n \u8fd9\u4e2a\u533a\u95f4\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u52a0\u4e0a\n1000000000000001\\%2\n1000000000000001\\%2\n\uff0c\u6240\u4ee5\u8282\u70b9A\u7684\u503c\u5c31\u52a0\u4e0a\u4e86 \n2\\times (1000000000000001\\%2)\n2\\times (1000000000000001\\%2)\n \u54af =\uffe3\u03c9\uffe3= \u3002\n\n\n\u5982\u679c\u8fd9\u65f6\u5019\u6211\u4eec\u8981\u67e5\u8be2\u533a\u95f4 \n[1,1]\n[1,1]\n\uff08\u5373\u8282\u70b9B\u7684\u503c\uff09\u600e\u4e48\u529e\u5462\uff1f\u4e0d\u662f\u8bf4\u4e86\u5417\uff1f\u5982\u679cB\u8981\u7528\u5230\u7684\u65f6\u5019\uff0cA\u5c31\u628a\u5b83\u6b20\u7684\u8fd8\u7ed9B\uff01\n\n\n\u5177\u4f53\u662f\u8fd9\u6837\u64cd\u4f5c\uff08\u5982\u56fe\uff09\uff1a\n\n\n\n\n\n\n\u6ce8\uff1a\u4e3a\u4ec0\u4e48\u662f\u52a0\u4e0a \n1\\times (1000000000000001\\%2)\n1\\times (1000000000000001\\%2)\n \u5462\uff1f\n\n\n\u539f\u56e0\u548c\u4e0a\u9762\u4e00\u6837\u2014\u2014B\u548cC\u8868\u793a\u7684\u533a\u95f4\u4e2d\u53ea\u67091\u4e2a\u5143\u7d20\u554a\uff01\n\n\n\n\n\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff0c\u533a\u95f4\n[1,1]\n[1,1]\n\u7684\u533a\u95f4\u548c\u5c31\u662f1\u5566\uff01O(\u2229_\u2229)O\u54c8\u54c8~\uff01\n\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u4e0b\u9762\u4ee3\u7801\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u663e\u793a\u51fa\u6765\u5f88\u4e11\uff0c\u5efa\u8bae\u590d\u5236\u5230\u81ea\u5df1\u7684C++\u7f16\u8f91\u5668\u91cc\u770b\u2026\u2026\uff09\uff1a\n\n\n\u533a\u95f4\u4fee\u6539\uff08\u533a\u95f4\u52a0\u4e0a\u67d0\u4e2a\u503c\uff09\uff1a\n\n\nvoid\n \nupdate\n(\nint\n \nl\n,\nint\n \nr\n,\nint\n \nc\n,\nint\n \ns\n,\nint\n \nt\n,\nint\n \np\n)\n//l\u662f\u67e5\u8be2\u7684\u533a\u95f4\u5de6\u7aef\u70b9\uff0cr\u662f\u53f3\u7aef\u70b9\uff0cc\u8868\u793a\u533a\u95f4\u6bcf\u4e2a\u5143\u7d20\u52a0\u4e0a\u7684\u503c\uff0cs\u662f\u5f53\u524d\u8282\u70b9\u6240\u8868\u793a\u7684\u533a\u95f4\u7684\u5de6\u7aef\u70b9\uff0ct\u662f\u53f3\u7aef\u70b9\uff0cp\u662f\u5f53\u524d\u8282\u70b9\u7684\u7f16\u53f7(\u6839\u8282\u70b9\u6807\u53f7\u4e3a1)\n\n\n{\n\n    \nif\n(\nl\n<=\ns\n&&\nt\n<=\nr\n){\nd\n[\np\n]\n+=\n(\nt\n-\ns\n+\n1\n)\n*\nc\n,\nb\n[\np\n]\n+=\nc\n;\nreturn\n;}\n//\u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u5b8c\u5168\u5305\u542b\u5728\u67e5\u8be2\u533a\u95f4\u5185\uff0c\u76f4\u63a5\u4fee\u6539\u5f53\u524d\u8282\u70b9\u7684\u503c\uff0c\u7136\u540e\u505a\u4e0a\u6807\u8bb0\uff0c\u7ed3\u675f\u4fee\u6539\n\n    \nint\n \nm\n=\n(\ns\n+\nt\n)\n/\n2\n;\n//\u8ba1\u7b97\u5de6\u53f3\u8282\u70b9\u8868\u793a\u533a\u95f4\u7684\u5206\u5272\u7ebf\n\n    \nif\n(\nb\n[\np\n]\n&&\ns\n!=\nt\n)\n//\u5982\u679c\u5f53\u524d\u8282\u70b9\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff08\u53f6\u5b50\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\u662f\u76f8\u7b49\u7684\uff09\u4e14\u5f53\u524d\u7684\u61d2\u60f0\u6807\u8bb0\u503c!=0\uff0c\u5c31\u66f4\u65b0\u5f53\u524d\u8282\u70b9\u7684\u4e24\u4e2a\u513f\u5b50\u8282\u70b9\u7684\u503c\u548c\u61d2\u60f0\u6807\u8bb0\u503c\n\n        \nd\n[\np\n*\n2\n]\n+=\nb\n[\np\n]\n*\n(\nm\n-\ns\n+\n1\n),\nd\n[\np\n*\n2\n+\n1\n]\n+=\nb\n[\np\n]\n*\n(\nt\n-\nm\n),\nb\n[\np\n*\n2\n]\n+=\nb\n[\np\n],\nb\n[\np\n*\n2\n+\n1\n]\n+=\nb\n[\np\n];\n\n    \nb\n[\np\n]\n=\n0\n;\n//\u6e05\u7a7a\u5f53\u524d\u8282\u70b9\u7684\u61d2\u60f0\u6807\u8bb0\u503c\n\n    \nif\n(\nl\n<=\nm\n)\nupdate\n(\nl\n,\nr\n,\nc\n,\ns\n,\nm\n,\np\n*\n2\n);\n\n    \nif\n(\nr\n>\nm\n)\nupdate\n(\nl\n,\nr\n,\nc\n,\nm\n+\n1\n,\nt\n,\np\n*\n2\n+\n1\n);\n\n    \nd\n[\np\n]\n=\nd\n[\np\n*\n2\n]\n+\nd\n[\np\n*\n2\n+\n1\n];\n\n\n}\n\n\n\n\n\n\u533a\u95f4\u67e5\u8be2\uff08\u6c42\u548c\uff09\uff1a\n\n\nint\n \ngetsum\n(\nint\n \nl\n,\nint\n \nr\n,\nint\n \ns\n,\nint\n \nt\n,\nint\n \np\n)\n//l\u662f\u67e5\u8be2\u7684\u533a\u95f4\u5de6\u7aef\u70b9\uff0cr\u662f\u53f3\u7aef\u70b9\uff0cs\u662f\u5f53\u524d\u8282\u70b9\u6240\u8868\u793a\u7684\u533a\u95f4\u7684\u5de6\u7aef\u70b9\uff0ct\u662f\u53f3\u7aef\u70b9\uff0cp\u662f\u5f53\u524d\u8282\u70b9\u7684\u7f16\u53f7\uff08\u6839\u8282\u70b9\u6807\u53f7\u4e3a1\uff09\n\n\n{\n\n    \nif\n(\nl\n<=\ns\n&&\nt\n<=\nr\n)\nreturn\n \nd\n[\np\n];\n//\u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u5b8c\u5168\u5305\u542b\u5728\u67e5\u8be2\u533a\u95f4\u5185\uff0c\u8fd4\u56de\u5f53\u524d\u8282\u70b9\u7684\u503c\n\n    \nint\n \nm\n=\n(\ns\n+\nt\n)\n/\n2\n;\n//\u8ba1\u7b97\u5de6\u53f3\u8282\u70b9\u8868\u793a\u533a\u95f4\u7684\u5206\u5272\u7ebf\n\n    \nif\n(\nb\n[\np\n]\n&&\ns\n!=\nt\n)\n//\u5982\u679c\u5f53\u524d\u8282\u70b9\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff08\u53f6\u5b50\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\u662f\u76f8\u7b49\u7684\uff09\u4e14\u5f53\u524d\u7684\u61d2\u60f0\u6807\u8bb0\u503c!=0\uff0c\u5c31\u66f4\u65b0\u5f53\u524d\u8282\u70b9\u7684\u4e24\u4e2a\u513f\u5b50\u8282\u70b9\u7684\u503c\u548c\u61d2\u60f0\u6807\u8bb0\n\n        \nd\n[\np\n*\n2\n]\n+=\nb\n[\np\n]\n*\n(\nm\n-\ns\n+\n1\n),\nd\n[\np\n*\n2\n+\n1\n]\n+=\nb\n[\np\n]\n*\n(\nt\n-\nm\n),\nb\n[\np\n*\n2\n]\n+=\nb\n[\np\n],\nb\n[\np\n*\n2\n+\n1\n]\n+=\nb\n[\np\n];\n\n    \nb\n[\np\n]\n=\n0\n;\nint\n \nsum\n=\n0\n;\n//\u6e05\u7a7a\u5f53\u524d\u8282\u70b9\u7684\u61d2\u60f0\u6807\u8bb0\u503c\n\n    \nif\n(\nl\n<=\nm\n)\nsum\n=\ngetsum\n(\nl\n,\nr\n,\ns\n,\nm\n,\np\n*\n2\n);\n\n    \nif\n(\nr\n>\nm\n)\nsum\n+=\ngetsum\n(\nl\n,\nr\n,\nm\n+\n1\n,\nt\n,\np\n*\n2\n+\n1\n);\n\n    \nreturn\n \nsum\n;\n\n\n}\n\n\n\n\n\n\u4f60\u6709\u6ca1\u6709\u53d1\u73b0\u533a\u95f4\u67e5\u8be2\u548c\u533a\u95f4\u4fee\u6539\u5f88\u50cf\u5417\uff1f(...\n__\n...) \n\n\n\u563b\u563b\u2026\u2026\u5176\u5b9e\u5e73\u65f6\u6211\u6253\u7ebf\u6bb5\u6811\u533a\u95f4\u4fee\u6539\u548c\u67e5\u8be2\u6211\u90fd\u662f\u6253\u4e00\u4efd\uff0c\u53e6\u4e00\u4efd\u590d\u5236\u9ecf\u8d34\u4ee5\u540e\u518d\u7a0d\u4f5c\u4fee\u6539\u5c31\u884c\u4e86\u3002\n\n\n\u5982\u679c\u4f60\u662f\u8981\u5b9e\u73b0\u533a\u95f4\u4fee\u6539\u4e3a\u67d0\u4e00\u4e2a\u503c\u800c\u4e0d\u662f\u52a0\u4e0a\u67d0\u4e00\u4e2a\u503c\u7684\u8bdd\uff0c\u5f88\u7b80\u5355\uff0c\u628a\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u6240\u6709\u7684+=\u66ff\u6362\u6210=\u5373\u53ef\uff08\u9664\u4e86\nsum+=getsum(l,r,m+1,t,p*2+1)\nsum+=getsum(l,r,m+1,t,p*2+1)\n\u8fd9\u4e00\u53e5\uff09\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\nvoid\n \nupdate\n(\nint\n \nl\n,\nint\n \nr\n,\nint\n \nc\n,\nint\n \ns\n,\nint\n \nt\n,\nint\n \np\n)\n\n\n{\n\n    \nif\n(\nl\n<=\ns\n&&\nt\n<=\nr\n){\nd\n[\np\n]\n=\n(\nt\n-\ns\n+\n1\n)\n*\nc\n,\nb\n[\np\n]\n=\nc\n;\nreturn\n;}\n\n    \nint\n \nm\n=\n(\ns\n+\nt\n)\n/\n2\n;\n\n    \nif\n(\nb\n[\np\n]\n&&\ns\n!=\nt\n)\n\n        \nd\n[\np\n*\n2\n]\n=\nb\n[\np\n]\n*\n(\nm\n-\ns\n+\n1\n),\nd\n[\np\n*\n2\n+\n1\n]\n=\nb\n[\np\n]\n*\n(\nt\n-\nm\n),\nb\n[\np\n*\n2\n]\n=\nb\n[\np\n*\n2\n+\n1\n]\n=\nb\n[\np\n];\n\n    \nb\n[\np\n]\n=\n0\n;\n\n    \nif\n(\nl\n<=\nm\n)\nupdate\n(\nl\n,\nr\n,\nc\n,\ns\n,\nm\n,\np\n*\n2\n);\n\n    \nif\n(\nr\n>\nm\n)\nupdate\n(\nl\n,\nr\n,\nc\n,\nm\n+\n1\n,\nt\n,\np\n*\n2\n+\n1\n);\n\n    \nd\n[\np\n]\n=\nd\n[\np\n*\n2\n]\n+\nd\n[\np\n*\n2\n+\n1\n];\n\n\n}\n\n\nint\n \ngetsum\n(\nint\n \nl\n,\nint\n \nr\n,\nint\n \ns\n,\nint\n \nt\n,\nint\n \np\n)\n\n\n{\n\n    \nif\n(\nl\n<=\ns\n&&\nt\n<=\nr\n)\nreturn\n \nd\n[\np\n];\n\n    \nint\n \nm\n=\n(\ns\n+\nt\n)\n/\n2\n;\n\n    \nif\n(\nb\n[\np\n]\n&&\ns\n!=\nt\n)\n\n        \nd\n[\np\n*\n2\n]\n=\nb\n[\np\n]\n*\n(\nm\n-\ns\n+\n1\n),\nd\n[\np\n*\n2\n+\n1\n]\n=\nb\n[\np\n]\n*\n(\nt\n-\nm\n),\nb\n[\np\n*\n2\n]\n=\nb\n[\np\n*\n2\n+\n1\n]\n=\nb\n[\np\n];\n\n    \nb\n[\np\n]\n=\n0\n;\nint\n \nsum\n=\n0\n;\n\n    \nif\n(\nl\n<=\nm\n)\nsum\n=\ngetsum\n(\nl\n,\nr\n,\ns\n,\nm\n,\np\n*\n2\n);\n\n    \nif\n(\nr\n>\nm\n)\nsum\n+=\ngetsum\n(\nl\n,\nr\n,\nm\n+\n1\n,\nt\n,\np\n*\n2\n+\n1\n);\n\n    \nreturn\n \nsum\n;\n\n\n}\n\n\n\n\n\n5. \u4e00\u4e9b\u4f18\u5316\n\u00b6\n\n\n\u4e0a\u9762\u7684\u4ee3\u7801\u4e3a\u4e86\u7b80\u5355\u6613\u61c2\uff0c\u6240\u4ee5\u5462\u6211\u5199\u7684\u6bd4\u8f83\u4e0d\u4f18\u7f8e\u3002\n\n\n\u8fd9\u91cc\u6211\u603b\u7ed3\u51e0\u4e2a\u7ebf\u6bb5\u6811\u7684\u4f18\u5316\uff1a\n\n\n\n\na\\times 2\na\\times 2\n\u53ef\u4ee5\u7528\na<<1\na<<1\n\u4ee3\u66ff\uff0c\na\\div 2\na\\div 2\n\u53ef\u4ee5\u7528\na>>1\na>>1\n\u4ee3\u66ff\uff0c\u4f4d\u8fd0\u7b97\u51cf\u5c0f\u5e38\u6570\n\n\n\u5efa\u6811\u65f6\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u6240\u5bf9\u5e94\u7684\u533a\u95f4\uff0c\u5c31\u4e0d\u9700\u8981\u6bcf\u6b21\u8ba1\u7b97\u5f53\u524d\u8282\u70b9\u7684\u5de6\u53f3\u7aef\u70b9\u4e86\uff0c\u51cf\u5c0f\u4ee3\u7801\u590d\u6742\u5ea6\n\n\n\u56e0\u4e3a\u4e0b\u6807\u4e3a\na\na\n\u7684\u8282\u70b9\u7684\u5de6\u513f\u5b50\u4e0b\u6807\u4e3a\na\\times 2\na\\times 2\n\uff0c\u53f3\u513f\u5b50\u4e0b\u6807\u4e3a\na\\times 2+1\na\\times 2+1\n\uff0c\u6240\u4ee5\u53ef\u4ee5\uff1a\n\n\n\n\n#define LS(a) (a<<1)\n\n\n//a<<1\u7b49\u540c\u4e8ea*2\n\n\n#define RS(a) (a<<1|1)\n\n\n//a<<1|1\u7b49\u540c\u4e8ea*2+1\n\n\n\n\n\n\n\n\u56e0\u4e3a\u9012\u5f52\u5230\u53f6\u5b50\u8282\u70b9\uff08\u5de6\u7aef\u70b9\u7b49\u4e8e\u53f3\u7aef\u70b9\u7684\u8282\u70b9\uff09\u7684\u65f6\u5019\u53f6\u5b50\u8282\u70b9\u4e00\u5b9a\u5305\u542b\u5728\u67e5\u8be2\u7684\u533a\u95f4\u5185\uff0c\u6240\u4ee5\u4e00\u5b9a\u4f1a\u5728\u61d2\u60f0\u6807\u8bb0\u4e0b\u653e\u524d\u5c31\u5904\u7406\u5b8c\u4e86return\u6389\u4e86\uff0c\u6240\u4ee5\u4e0d\u7528\u62c5\u5fc3\u4f1a\u51fa\u73b0\u53f6\u5b50\u8282\u70b9\u61d2\u60f0\u6807\u8bb0\u4e0b\u653e\u5bfc\u81f4\u6570\u7ec4\u8d8a\u754c\uff0c\u4e5f\u4e0d\u7528\u61d2\u60f0\u6807\u8bb0\u4e0b\u65b9\u6bcf\u6b21\u8fd8\u68c0\u67e5\u5f53\u524d\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\u4e86\u3002\uff08\u4ee3\u7801\u4e2d\u7684s!=t\u53ef\u4ee5\u53bb\u6389)\u51cf\u5c0f\u4ee3\u7801\u590d\u6742\u5ea6\u3002\n\n\n\u6700\u597d\u522b\u50cf\u4e0a\u6587\u90a3\u6837\u628a\u6240\u6709\u529f\u80fd\u90fd\u5199\u4e00\u8d77\uff0c\u6bd4\u5982\u4e0b\u653e\u61d2\u60f0\u6807\u8bb0\u53ef\u4ee5\u5199\u4e00\u4e2a\u4e13\u95e8\u7684\u51fd\u6570\uff0c\u4ece\u513f\u5b50\u8282\u70b9\u66f4\u65b0\u5f53\u524d\u8282\u70b9\u4e5f\u53ef\u4ee5\u5199\u4e00\u4e2a\u4e13\u95e8\u7684\u51fd\u6570\uff0c\u7b49\u7b49\u3002\n\n\n\n\n6. \u7ebf\u6bb5\u6811\u57fa\u7840\u9898\u63a8\u8350\n\u00b6\n\n\n(1) LUOGU P3372 \u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811 1\n\u00b6\n\n\n\u4f20\u9001\u95e8=\uffe3\u03c9\uffe3=\n\n\n\u4ee3\u7801\uff1a\n\n\n#include\n \n<iostream>\n\n\nusing\n \nnamespace\n \nstd\n;\n\n\ntypedef\n \nlong\n \nlong\n \nLL\n;\n\n\nLL\n \nn\n,\na\n[\n100005\n],\nd\n[\n270000\n],\nb\n[\n270000\n];\n\n\nvoid\n \nbuild\n(\nLL\n \nl\n,\nLL\n \nr\n,\nLL\n \np\n)\n\n\n{\n\n    \nif\n(\nl\n==\nr\n){\nd\n[\np\n]\n=\na\n[\nl\n];\nreturn\n;}\n\n    \nLL\n \nm\n=\n(\nl\n+\nr\n)\n>>\n1\n;\n\n    \nbuild\n(\nl\n,\nm\n,\np\n<<\n1\n),\nbuild\n(\nm\n+\n1\n,\nr\n,(\np\n<<\n1\n)\n|\n1\n);\n\n    \nd\n[\np\n]\n=\nd\n[\np\n<<\n1\n]\n+\nd\n[(\np\n<<\n1\n)\n|\n1\n];\n\n\n}\n\n\nvoid\n \nupdate\n(\nLL\n \nl\n,\nLL\n \nr\n,\nLL\n \nc\n,\nLL\n \ns\n,\nLL\n \nt\n,\nLL\n \np\n)\n\n\n{\n\n    \nif\n(\nl\n<=\ns\n&&\nt\n<=\nr\n){\nd\n[\np\n]\n+=\n(\nt\n-\ns\n+\n1\n)\n*\nc\n,\nb\n[\np\n]\n+=\nc\n;\nreturn\n;}\n\n    \nLL\n \nm\n=\n(\ns\n+\nt\n)\n>>\n1\n;\n\n    \nif\n(\nb\n[\np\n]\n&&\ns\n!=\nt\n)\n\n        \nd\n[\np\n<<\n1\n]\n+=\nb\n[\np\n]\n*\n(\nm\n-\ns\n+\n1\n),\nd\n[(\np\n<<\n1\n)\n|\n1\n]\n+=\nb\n[\np\n]\n*\n(\nt\n-\nm\n),\nb\n[\np\n<<\n1\n]\n+=\nb\n[\np\n],\nb\n[(\np\n<<\n1\n)\n|\n1\n]\n+=\nb\n[\np\n];\n\n    \nb\n[\np\n]\n=\n0\n;\n\n    \nif\n(\nl\n<=\nm\n)\nupdate\n(\nl\n,\nr\n,\nc\n,\ns\n,\nm\n,\np\n<<\n1\n);\n\n    \nif\n(\nr\n>\nm\n)\nupdate\n(\nl\n,\nr\n,\nc\n,\nm\n+\n1\n,\nt\n,(\np\n<<\n1\n)\n|\n1\n);\n\n    \nd\n[\np\n]\n=\nd\n[\np\n<<\n1\n]\n+\nd\n[(\np\n<<\n1\n)\n|\n1\n];\n\n\n}\n\n\nLL\n \ngetsum\n(\nLL\n \nl\n,\nLL\n \nr\n,\nLL\n \ns\n,\nLL\n \nt\n,\nLL\n \np\n)\n\n\n{\n\n    \nif\n(\nl\n<=\ns\n&&\nt\n<=\nr\n)\nreturn\n \nd\n[\np\n];\n\n    \nLL\n \nm\n=\n(\ns\n+\nt\n)\n>>\n1\n;\n\n    \nif\n(\nb\n[\np\n]\n&&\ns\n!=\nt\n)\n\n        \nd\n[\np\n<<\n1\n]\n+=\nb\n[\np\n]\n*\n(\nm\n-\ns\n+\n1\n),\nd\n[(\np\n<<\n1\n)\n|\n1\n]\n+=\nb\n[\np\n]\n*\n(\nt\n-\nm\n),\nb\n[\np\n<<\n1\n]\n+=\nb\n[\np\n],\nb\n[(\np\n<<\n1\n)\n|\n1\n]\n+=\nb\n[\np\n];\n\n    \nb\n[\np\n]\n=\n0\n;\nLL\n \nsum\n=\n0\n;\n\n    \nif\n(\nl\n<=\nm\n)\nsum\n=\ngetsum\n(\nl\n,\nr\n,\ns\n,\nm\n,\np\n<<\n1\n);\n\n    \nif\n(\nr\n>\nm\n)\nsum\n+=\ngetsum\n(\nl\n,\nr\n,\nm\n+\n1\n,\nt\n,(\np\n<<\n1\n)\n|\n1\n);\n\n    \nreturn\n \nsum\n;\n\n\n}\n\n\nint\n \nmain\n()\n\n\n{\n\n    \nios\n::\nsync_with_stdio\n(\n0\n);\n\n    \nLL\n \nq\n,\ni1\n,\ni2\n,\ni3\n,\ni4\n;\n\n    \ncin\n>>\nn\n>>\nq\n;\n\n    \nfor\n(\nLL\n \ni\n=\n1\n;\ni\n<=\nn\n;\ni\n++\n)\ncin\n>>\na\n[\ni\n];\n\n    \nbuild\n(\n1\n,\nn\n,\n1\n);\n\n    \nwhile\n(\nq\n--\n)\n\n    \n{\n\n        \ncin\n>>\ni1\n>>\ni2\n>>\ni3\n;\n\n        \nif\n(\ni1\n==\n2\n)\ncout\n<<\ngetsum\n(\ni2\n,\ni3\n,\n1\n,\nn\n,\n1\n)\n<<\nendl\n;\n\n        \nelse\n \ncin\n>>\ni4\n,\nupdate\n(\ni2\n,\ni3\n,\ni4\n,\n1\n,\nn\n,\n1\n);\n\n    \n}\n\n    \nreturn\n \n0\n;\n \n\n}\n\n\n\n\n\n(2) LUOGU P3373 \u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811 2\n\u00b6\n\n\n\u4f20\u9001\u95e8=\uffe3\u03c9\uffe3=\n\n\n\u4ee3\u7801\uff1a\n\n#include\n<iostream>\n\n\n#include\n<cstdio>\n\n\n#include\n<cstring>\n\n\n#include\n<climits>\n\n\n#include\n<iomanip>\n\n\n#include\n<cmath>\n\n\n#include\n<vector>\n\n\n#include\n<algorithm>\n\n\nusing\n \nnamespace\n \nstd\n;\n\n\n#define ll long long\n\n\nll\n \nread\n(){\n\n    \nll\n \nw\n=\n1\n,\nq\n=\n0\n;\nchar\n \nch\n=\n' '\n;\n\n    \nwhile\n(\nch\n!=\n'-'\n&&\n(\nch\n<\n'0'\n||\nch\n>\n'9'\n))\nch\n=\ngetchar\n();\n\n    \nif\n(\nch\n==\n'-'\n)\nw\n=-\n1\n,\nch\n=\ngetchar\n();\n\n    \nwhile\n(\nch\n>=\n'0'\n&&\nch\n<=\n'9'\n)\nq\n=\n(\nll\n)\nq\n*\n10\n+\nch\n-\n'0'\n,\nch\n=\ngetchar\n();\n\n    \nreturn\n \n(\nll\n)\nw\n*\nq\n;\n\n\n}\n\n\nint\n \nn\n,\nm\n;\n\n\nll\n \nmod\n;\n\n\nll\n \na\n[\n100005\n],\nsum\n[\n400005\n],\nmul\n[\n400005\n],\nlaz\n[\n400005\n];\n\n\nvoid\n \nup\n(\nint\n \ni\n){\nsum\n[\ni\n]\n=\n(\nsum\n[(\ni\n<<\n1\n)]\n+\nsum\n[(\ni\n<<\n1\n)\n|\n1\n])\n%\nmod\n;}\n\n\nvoid\n \npd\n(\nint\n \ni\n,\nint\n \ns\n,\nint\n \nt\n){\n\n    \nint\n \nl\n=\n(\ni\n<<\n1\n),\nr\n=\n(\ni\n<<\n1\n)\n|\n1\n,\nmid\n=\n(\ns\n+\nt\n)\n>>\n1\n;\n\n    \nif\n(\nmul\n[\ni\n]\n!=\n1\n){\n\n    \nmul\n[\nl\n]\n*=\nmul\n[\ni\n];\nmul\n[\nl\n]\n%=\nmod\n;\nmul\n[\nr\n]\n*=\nmul\n[\ni\n];\nmul\n[\nr\n]\n%=\nmod\n;\n\n    \nlaz\n[\nl\n]\n*=\nmul\n[\ni\n];\nlaz\n[\nl\n]\n%=\nmod\n;\nlaz\n[\nr\n]\n*=\nmul\n[\ni\n];\nlaz\n[\nr\n]\n%=\nmod\n;\n\n    \nsum\n[\nl\n]\n*=\nmul\n[\ni\n];\nsum\n[\nl\n]\n%=\nmod\n;\nsum\n[\nr\n]\n*=\nmul\n[\ni\n];\nsum\n[\nr\n]\n%=\nmod\n;\n\n    \nmul\n[\ni\n]\n=\n1\n;\n\n    \n}\n\n    \nif\n(\nlaz\n[\ni\n]){\n\n    \nsum\n[\nl\n]\n+=\nlaz\n[\ni\n]\n*\n(\nmid\n-\ns\n+\n1\n);\nsum\n[\nl\n]\n%=\nmod\n;\n\n    \nsum\n[\nr\n]\n+=\nlaz\n[\ni\n]\n*\n(\nt\n-\nmid\n);\nsum\n[\nr\n]\n%=\nmod\n;\n\n    \nlaz\n[\nl\n]\n+=\nlaz\n[\ni\n];\nlaz\n[\nl\n]\n%=\nmod\n;\n\n    \nlaz\n[\nr\n]\n+=\nlaz\n[\ni\n];\nlaz\n[\nr\n]\n%=\nmod\n;\n\n    \nlaz\n[\ni\n]\n=\n0\n;\n\n    \n}\nreturn\n;\n\n\n}\n\n\nvoid\n \nbuild\n(\nint\n \ns\n,\nint\n \nt\n,\nint\n \ni\n){\n\n    \nmul\n[\ni\n]\n=\n1\n;\nif\n(\ns\n==\nt\n){\nsum\n[\ni\n]\n=\na\n[\ns\n];\nreturn\n;}\n\n    \nint\n \nmid\n=\n(\ns\n+\nt\n)\n>>\n1\n;\n\n    \nbuild\n(\ns\n,\nmid\n,\ni\n<<\n1\n);\nbuild\n(\nmid\n+\n1\n,\nt\n,(\ni\n<<\n1\n)\n|\n1\n);\nup\n(\ni\n);\n\n\n}\n\n\nvoid\n \nchen\n(\nint\n \nl\n,\nint\n \nr\n,\nint\n \ns\n,\nint\n \nt\n,\nint\n \ni\n,\nll\n \nz\n){\n\n    \nint\n \nmid\n=\n(\ns\n+\nt\n)\n>>\n1\n;\n\n    \nif\n(\nl\n<=\ns\n&&\nt\n<=\nr\n){\n\n        \nmul\n[\ni\n]\n*=\nz\n;\nmul\n[\ni\n]\n%=\nmod\n;\nlaz\n[\ni\n]\n*=\nz\n;\nlaz\n[\ni\n]\n%=\nmod\n;\n\n        \nsum\n[\ni\n]\n*=\nz\n;\nsum\n[\ni\n]\n%=\nmod\n;\nreturn\n;\n\n    \n}\n\n    \npd\n(\ni\n,\ns\n,\nt\n);\n\n    \nif\n(\nmid\n>=\nl\n)\nchen\n(\nl\n,\nr\n,\ns\n,\nmid\n,(\ni\n<<\n1\n),\nz\n);\n\n    \nif\n(\nmid\n+\n1\n<=\nr\n)\nchen\n(\nl\n,\nr\n,\nmid\n+\n1\n,\nt\n,(\ni\n<<\n1\n)\n|\n1\n,\nz\n);\n\n    \nup\n(\ni\n);\n\n\n}\n\n\nvoid\n \nadd\n(\nint\n \nl\n,\nint\n \nr\n,\nint\n \ns\n,\nint\n \nt\n,\nint\n \ni\n,\nll\n \nz\n){\n\n    \nint\n \nmid\n=\n(\ns\n+\nt\n)\n>>\n1\n;\n\n    \nif\n(\nl\n<=\ns\n&&\nt\n<=\nr\n){\n\n        \nsum\n[\ni\n]\n+=\nz\n*\n(\nt\n-\ns\n+\n1\n);\nsum\n[\ni\n]\n%=\nmod\n;\nlaz\n[\ni\n]\n+=\nz\n;\nlaz\n[\ni\n]\n%=\nmod\n;\n\n        \nreturn\n;\n\n    \n}\n\n    \npd\n(\ni\n,\ns\n,\nt\n);\n\n    \nif\n(\nmid\n>=\nl\n)\nadd\n(\nl\n,\nr\n,\ns\n,\nmid\n,(\ni\n<<\n1\n),\nz\n);\n\n    \nif\n(\nmid\n+\n1\n<=\nr\n)\nadd\n(\nl\n,\nr\n,\nmid\n+\n1\n,\nt\n,(\ni\n<<\n1\n)\n|\n1\n,\nz\n);\n\n    \nup\n(\ni\n);\n\n\n}\n\n\nll\n \ngetans\n(\nint\n \nl\n,\nint\n \nr\n,\nint\n \ns\n,\nint\n \nt\n,\nint\n \ni\n){\n\n    \nint\n \nmid\n=\n(\ns\n+\nt\n)\n>>\n1\n;\nll\n \ntot\n=\n0\n;\n\n    \nif\n(\nl\n<=\ns\n&&\nt\n<=\nr\n){\nreturn\n \nsum\n[\ni\n];}\n\n    \npd\n(\ni\n,\ns\n,\nt\n);\n\n    \nif\n(\nmid\n>=\nl\n)\ntot\n+=\ngetans\n(\nl\n,\nr\n,\ns\n,\nmid\n,(\ni\n<<\n1\n));\n\n    \ntot\n%=\nmod\n;\n\n    \nif\n(\nmid\n+\n1\n<=\nr\n)\ntot\n+=\ngetans\n(\nl\n,\nr\n,\nmid\n+\n1\n,\nt\n,(\ni\n<<\n1\n)\n|\n1\n);\n\n    \nreturn\n \ntot\n%\nmod\n;\n\n\n}\n\n\nint\n \nmain\n()\n\n\n{\n\n    \nint\n \ni\n,\nj\n,\nx\n,\ny\n,\nbh\n;\n\n    \nll\n \nz\n;\n\n    \nn\n=\nread\n();\nm\n=\nread\n();\nmod\n=\nread\n();\n\n    \nfor\n(\ni\n=\n1\n;\ni\n<=\nn\n;\ni\n++\n)\na\n[\ni\n]\n=\nread\n();\n\n    \nbuild\n(\n1\n,\nn\n,\n1\n);\n\n    \nfor\n(\ni\n=\n1\n;\ni\n<=\nm\n;\ni\n++\n){\n\n        \nbh\n=\nread\n();\n\n        \nif\n(\nbh\n==\n1\n){\n\n            \nx\n=\nread\n();\ny\n=\nread\n();\nz\n=\nread\n();\n\n            \nchen\n(\nx\n,\ny\n,\n1\n,\nn\n,\n1\n,\nz\n);\n\n        \n}\n\n        \nelse\n \nif\n(\nbh\n==\n2\n){\n\n            \nx\n=\nread\n();\ny\n=\nread\n();\nz\n=\nread\n();\n\n            \nadd\n(\nx\n,\ny\n,\n1\n,\nn\n,\n1\n,\nz\n);\n\n        \n}\n\n        \nelse\n \nif\n(\nbh\n==\n3\n){\n\n            \nx\n=\nread\n();\ny\n=\nread\n();\n\n            \nprintf\n(\n\"%lld\n\\n\n\"\n,\ngetans\n(\nx\n,\ny\n,\n1\n,\nn\n,\n1\n));\n\n        \n}\n\n    \n}\n\n       \nreturn\n \n0\n;\n\n\n}\n \n\n\n\n(3) CODEVS \u7ebf\u6bb5\u6811\u7ec3\u4e60 \uff08\u8fd9\u662f\u4e00\u4e2a\u7cfb\u5217\uff09\n\u00b6\n\n\n\u4f20\u9001\u95e8=\uffe3\u03c9\uffe3=\n\n\n\u5177\u4f53\u9898\u89e3\u53bb\u6211\u7684\u535a\u5ba2\u91cc\u641c\u7d22\u5427\u3002\n\n\n\u4e0d\u4fdd\u8bc1\u641c\u5f97\u5230\u3002\n\n\n(4) HihoCoder 1078 \u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u4fee\u6539\n\u00b6\n\n\n\u4f20\u9001\u95e8=\uffe3\u03c9\uffe3=\n\n\n\u4ee3\u7801\uff1a\n\n#include\n \n<iostream>\n\n\nusing\n \nnamespace\n \nstd\n;\n\n\nint\n \nn\n,\na\n[\n100005\n],\nd\n[\n270000\n],\nb\n[\n270000\n];\n\n\nvoid\n \nbuild\n(\nint\n \nl\n,\nint\n \nr\n,\nint\n \np\n)\n\n\n{\n\n    \nif\n(\nl\n==\nr\n){\nd\n[\np\n]\n=\na\n[\nl\n];\nreturn\n;}\n\n    \nint\n \nm\n=\n(\nl\n+\nr\n)\n>>\n1\n;\n\n    \nbuild\n(\nl\n,\nm\n,\np\n<<\n1\n),\nbuild\n(\nm\n+\n1\n,\nr\n,(\np\n<<\n1\n)\n|\n1\n);\n\n    \nd\n[\np\n]\n=\nd\n[\np\n<<\n1\n]\n+\nd\n[(\np\n<<\n1\n)\n|\n1\n];\n\n\n}\n\n\nvoid\n \nupdate\n(\nint\n \nl\n,\nint\n \nr\n,\nint\n \nc\n,\nint\n \ns\n,\nint\n \nt\n,\nint\n \np\n)\n\n\n{\n\n    \nif\n(\nl\n<=\ns\n&&\nt\n<=\nr\n){\nd\n[\np\n]\n=\n(\nt\n-\ns\n+\n1\n)\n*\nc\n,\nb\n[\np\n]\n=\nc\n;\nreturn\n;}\n\n    \nint\n \nm\n=\n(\ns\n+\nt\n)\n>>\n1\n;\n\n    \nif\n(\nb\n[\np\n]\n&&\ns\n!=\nt\n)\n\n        \nd\n[\np\n<<\n1\n]\n=\nb\n[\np\n]\n*\n(\nm\n-\ns\n+\n1\n),\nd\n[(\np\n<<\n1\n)\n|\n1\n]\n=\nb\n[\np\n]\n*\n(\nt\n-\nm\n),\nb\n[\np\n<<\n1\n]\n=\nb\n[(\np\n<<\n1\n)\n|\n1\n]\n=\nb\n[\np\n];\n\n    \nb\n[\np\n]\n=\n0\n;\n\n    \nif\n(\nl\n<=\nm\n)\nupdate\n(\nl\n,\nr\n,\nc\n,\ns\n,\nm\n,\np\n<<\n1\n);\n\n    \nif\n(\nr\n>\nm\n)\nupdate\n(\nl\n,\nr\n,\nc\n,\nm\n+\n1\n,\nt\n,(\np\n<<\n1\n)\n|\n1\n);\n\n    \nd\n[\np\n]\n=\nd\n[\np\n<<\n1\n]\n+\nd\n[(\np\n<<\n1\n)\n|\n1\n];\n\n\n}\n\n\nint\n \ngetsum\n(\nint\n \nl\n,\nint\n \nr\n,\nint\n \ns\n,\nint\n \nt\n,\nint\n \np\n)\n\n\n{\n\n    \nif\n(\nl\n<=\ns\n&&\nt\n<=\nr\n)\nreturn\n \nd\n[\np\n];\n\n    \nint\n \nm\n=\n(\ns\n+\nt\n)\n>>\n1\n;\n\n    \nif\n(\nb\n[\np\n]\n&&\ns\n!=\nt\n)\n\n        \nd\n[\np\n<<\n1\n]\n=\nb\n[\np\n]\n*\n(\nm\n-\ns\n+\n1\n),\nd\n[(\np\n<<\n1\n)\n|\n1\n]\n=\nb\n[\np\n]\n*\n(\nt\n-\nm\n),\nb\n[\np\n<<\n1\n]\n=\nb\n[(\np\n<<\n1\n)\n|\n1\n]\n=\nb\n[\np\n];\n\n    \nb\n[\np\n]\n=\n0\n;\nint\n \nsum\n=\n0\n;\n\n    \nif\n(\nl\n<=\nm\n)\nsum\n=\ngetsum\n(\nl\n,\nr\n,\ns\n,\nm\n,\np\n<<\n1\n);\n\n    \nif\n(\nr\n>\nm\n)\nsum\n+=\ngetsum\n(\nl\n,\nr\n,\nm\n+\n1\n,\nt\n,(\np\n<<\n1\n)\n|\n1\n);\n\n    \nreturn\n \nsum\n;\n\n\n}\n\n\nint\n \nmain\n()\n\n\n{\n\n    \nios\n::\nsync_with_stdio\n(\n0\n);\n\n    \ncin\n>>\nn\n;\n\n    \nfor\n(\nint\n \ni\n=\n1\n;\ni\n<=\nn\n;\ni\n++\n)\ncin\n>>\na\n[\ni\n];\n\n    \nbuild\n(\n1\n,\nn\n,\n1\n);\n\n    \nint\n \nq\n,\ni1\n,\ni2\n,\ni3\n,\ni4\n;\n\n    \ncin\n>>\nq\n;\n\n    \nwhile\n(\nq\n--\n)\n\n    \n{\n\n        \ncin\n>>\ni1\n>>\ni2\n>>\ni3\n;\n\n        \nif\n(\ni1\n==\n0\n)\ncout\n<<\ngetsum\n(\ni2\n,\ni3\n,\n1\n,\nn\n,\n1\n)\n<<\nendl\n;\n\n        \nelse\n \ncin\n>>\ni4\n,\nupdate\n(\ni2\n,\ni3\n,\ni4\n,\n1\n,\nn\n,\n1\n);\n\n    \n}\n\n    \nreturn\n \n0\n;\n \n\n}",
            "title": "\u7ebf\u6bb5\u6811"
        },
        {
            "location": "/data-structure/intermediate/segment/#1",
            "text": "\u7ebf\u6bb5\u6811\u662f\u4e2a\u597d\u4e1c\u897f\u554aQwQ  OI\u4e2d\u6700\u5e38\u7528\u7684\u6570\u636e\u7ed3\u6784\u4e4b\u4e00\uff0c\u4e0d\u5b66\u4e0d\u884c\u554aOvO",
            "title": "1. \u5199\u5728\u524d\u9762"
        },
        {
            "location": "/data-structure/intermediate/segment/#2",
            "text": "\u7ebf\u6bb5\u6811\u662f\u4e00\u79cd\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u4e0e\u533a\u95f4\u6811\u76f8\u4f3c\uff0c\u5b83\u5c06\u4e00\u4e2a\u533a\u95f4\u5212\u5206\u6210\u4e00\u4e9b\u5355\u5143\u533a\u95f4\uff0c\u6bcf\u4e2a\u5355\u5143\u533a\u95f4\u5bf9\u5e94\u7ebf\u6bb5\u6811\u4e2d\u7684\u4e00\u4e2a\u53f6\u7ed3\u70b9\u3002\u4f7f\u7528\u7ebf\u6bb5\u6811\u53ef\u4ee5\u5feb\u901f\u7684\u67e5\u627e\u67d0\u4e00\u4e2a\u8282\u70b9\u5728\u82e5\u5e72\u6761\u7ebf\u6bb5\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a  O(logN) O(logN) \u3002\u800c\u672a\u4f18\u5316\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a  2N 2N \uff0c\u56e0\u6b64\u6709\u65f6\u9700\u8981\u79bb\u6563\u5316\u8ba9\u7a7a\u95f4\u538b\u7f29\u3002\u2014\u2014From \u5ea6\u5a18   \u53cd\u6b63\u5c31\u662f\u4e00\u79cd\u53ef\u4ee5\u5728\u5f88\u77ed\u7684\u65f6\u95f4\u5185\u5bf9\u67d0\u4e2a\u533a\u95f4\u8fdb\u884c\u64cd\u4f5c\u7684\u6570\u636e\u7ed3\u6784\u3002",
            "title": "2. \u7ebf\u6bb5\u6811\u662f\u4ec0\u4e48"
        },
        {
            "location": "/data-structure/intermediate/segment/#3",
            "text": "\u5728 O(logN) O(logN) \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u5b9e\u73b0\u5982\uff1a\u5355\u70b9\u4fee\u6539\u3001\u533a\u95f4\u4fee\u6539\u3001\u533a\u95f4\u67e5\u8be2\uff08\u5982\uff1a\u533a\u95f4\u6c42\u548c\uff0c\u6c42\u533a\u95f4\u6700\u5927\u503c\uff0c\u6c42\u533a\u95f4\u6700\u5c0f\u503c\u2026\u2026\uff09\u8fd8\u6709\u5f88\u591a\u2026\u2026",
            "title": "3. \u7ebf\u6bb5\u6811\u6709\u4ec0\u4e48\u7528"
        },
        {
            "location": "/data-structure/intermediate/segment/#4",
            "text": "",
            "title": "4. \u7ebf\u6bb5\u6811\u600e\u4e48\u5b9e\u73b0"
        },
        {
            "location": "/data-structure/intermediate/segment/#1_1",
            "text": "\u60f3\u8981\u5efa\u7acb\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u4e0d\u7406\u89e3\u5b83\u7684\u7ed3\u6784\u3001\u539f\u7406\u662f\u80af\u5b9a\u884c\u4e0d\u901a\u7684\u3002  \u4e0b\u9762\u6211\u6765\u4e3e\u4e2a\u6817\u5b50\uff1a  \u6211\u4eec\u6709\u4e2a\u5927\u5c0f\u4e3a5\u7684\u6570\u7ec4a  \\\\{10,11,12,13,14\\\\} \\\\{10,11,12,13,14\\\\}  \u8981\u8fdb\u884c\u533a\u95f4\u6c42\u548c\u64cd\u4f5c\uff0c\u73b0\u5728\u6211\u4eec\u8981\u600e\u4e48\u628a\u8fd9\u4e2a\u6570\u7ec4\u5b58\u5230\u7ebf\u6bb5\u6811\u4e2d\uff08\u4e5f\u53ef\u4ee5\u8bf4\u662f\u8f6c\u5316\u6210\u7ebf\u6bb5\u6811\uff09\u5462\uff1f\u6211\u4eec\u8fd9\u6837\u5b50\u505a\uff1a\u8bbe\u7ebf\u6bb5\u6811\u7684\u6839\u8282\u70b9\u7f16\u53f7\u4e3a1\uff0c\u7528\u6570\u7ec4d\u6765\u4fdd\u5b58\u6211\u4eec\u7684\u7ebf\u6bb5\u6811\uff0cd[i]\u7528\u6765\u4fdd\u5b58\u7f16\u53f7\u4e3ai\u7684\u8282\u70b9\u7684\u503c\uff08\u8fd9\u91cc\u8282\u70b9\u7684\u503c\u5c31\u662f\u8fd9\u4e2a\u8282\u70b9\u6240\u8868\u793a\u7684\u533a\u95f4\u603b\u548c\uff09\uff0c\u5982\u56fe\u6240\u793a\uff1a  \u56fe\u4e2d  d[1] d[1]  \u8868\u793a\u6839\u8282\u70b9\uff0c\u7d2b\u8272\u65b9\u6846\u662f\u6570\u7ec4  a a \uff0c\u7ea2\u8272\u65b9\u6846\u662f\u6570\u7ec4  d d \uff0c\u7ea2\u8272\u65b9\u6846\u4e2d\u7684\u62ec\u53f7\u4e2d\u7684\u9ec4\u8272\u6570\u5b57\u8868\u793a\u5b83\u6240\u5728\u7684\u90a3\u4e2a\u7ea2\u8272\u65b9\u6846\u8868\u793a\u7684\u7ebf\u6bb5\u6811\u8282\u70b9\u6240\u8868\u793a\u7684\u533a\u95f4\uff0c\u5982  d[1] d[1]  \u6240\u8868\u793a\u7684\u533a\u95f4\u5c31\u662f  1~5\uff08a[1]~a[5]\uff09 1~5\uff08a[1]~a[5]\uff09 \uff0c\u5373  d[1] d[1]  \u6240\u4fdd\u5b58\u7684\u503c\u662f  a[1]+a[2]+...+a[5] a[1]+a[2]+...+a[5] \uff0c d[1]=60 d[1]=60  \u8868\u793a\u7684\u662f  a[1]+a[2]+...+a[5]=60 a[1]+a[2]+...+a[5]=60 \u3002  \u901a\u8fc7\u89c2\u5bdf\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c d[i] d[i]  \u7684\u5de6\u513f\u5b50\u8282\u70b9\u5c31\u662f  d[2\\times i] d[2\\times i] \uff0c d[i] d[i]  \u7684\u53f3\u8282\u70b9\u5c31\u662f  d[2\\times i+1] d[2\\times i+1] \u3002\u8fdb\u4e00\u6b65\u89c2\u5bdf\uff0c\u53ef\u4ee5\u770b\u51fa\u5982\u679c  d[i] d[i]  \u8868\u793a\u7684\u662f\u533a\u95f4  [s,t] [s,t] \uff08\u5373 $d[i]=a[s]+a[s+1]+...+a[t] $\uff09\u7684\u8bdd\uff0c\u90a3\u4e48  d[i] d[i]  \u7684\u5de6\u513f\u5b50\u8282\u70b9\u8868\u793a\u7684\u662f\u533a\u95f4  [s,(s+t)/2] [s,(s+t)/2] \uff0cd[i]\u7684\u53f3\u513f\u5b50\u8868\u793a\u7684\u662f\u533a\u95f4  [(s+t)/2+1,t] [(s+t)/2+1,t] \u3002  \u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u8868\u793a\u5462\uff1f\u56e0\u4e3a\u7ebf\u6bb5\u6811\u5229\u7528\u4e86\u4e8c\u5206\u7684\u601d\u60f3\uff0c\u7ebf\u6bb5\u6811\u5b9e\u9645\u4e0a\u662f\u4e2a\u4e8c\u53c9\u6811\uff0c\u8fd9\u4e9b\u4e0d\u61c2\u7684\u8bdd\u5c31\u65e0\u6cd5\u7406\u89e3\u7ebf\u6bb5\u6811\u4e86\uff0c\u6240\u4ee5\u5982\u679c\u4e0d\u660e\u767d\u4e8c\u5206\u6216\u8005\u4e8c\u53c9\u6811\u7684\u8bdd\u2026\u2026\u5efa\u8bae\u53bb\u95ee\u95ee\u5ea6\u5a18\u3002  \u5177\u4f53\u8981\u600e\u4e48\u7528\u4ee3\u7801\u5b9e\u73b0\u5462\uff1f  \u6211\u4eec\u7ee7\u7eed\u89c2\u5bdf\uff0c\u6709\u6ca1\u6709\u53d1\u73b0\u5982\u679cd[i]\u8868\u793a\u7684\u533a\u95f4\u5927\u5c0f  ==1 ==1 \uff08\u533a\u95f4\u5927\u5c0f\u6307\u7684\u662f\u533a\u95f4\u5305\u542b\u7684\u5143\u7d20\u7684\u4e2a\u6570\uff08\u5373a\u7684\u4e2a\u6570\uff09\uff09\u7684\u8bdd\uff08\u8bbe  d[i] d[i]  \u8868\u793a\u533a\u95f4  [s,t] [s,t] \uff0c\u5b83\u7684\u533a\u95f4\u5927\u5c0f\u5c31\u662f  t-s+1 t-s+1 \uff0c\u4e0d\u4fe1\u4f60\u770b\u4e0a\u9762\u7684\u56fe\uff09\uff0c\u90a3\u4e48d[i]\u6240\u8868\u793a\u7684\u533a\u95f4  [s,t] [s,t]  \u4e2d  s s  \u80af\u5b9a  ==t ==t \uff08\u4e0d\u4fe1\u4f60\u8fd8\u662f\u770b\u56fe\uff09\uff0c\u4e14  d[i]=a[s] d[i]=a[s] \uff08\u5f53\u7136\u4e5f  =a[t] =a[t] \uff09\n\u4e3a\u4ec0\u4e48\u8981\u8bb2\u8fd9\u4e2a\u4e1c\u897f\u5462\uff1f\u4f60\u6ca1\u53d1\u73b0\u8fd9\u4e2a\u662f\u4e2a\u9012\u5f52\u8fb9\u754c\u5417\uff1f  O(\u2229_\u2229)O\u54c8\u54c8~  \u601d\u8def\u5982\u4e0b\uff1a     \u90a3\u4e48\u5c31\u8fd9\u6837\u5199\u4ee3\u7801\uff1a  \u5efa\u6811 ( s , t , i )  { \n     \u5982\u679c ( s == t ) \n     { \n         d [ i ] = a [ s ]; \n     } \n     \u5426\u5219 \n     { \n         \u5efa\u6811 ( s ,( s + t ) / 2 , 2 * i ); \n         \u5efa\u6811 (( s + t ) / 2 + 1 , t , 2 * i + 1 ); \n         d [ i ] = d [ 2 * i ] + d [ 2 * i + 1 ]; \n     }  }   \u5177\u4f53\u4ee3\u7801\u5b9e\u73b0(c++)\uff1a  void   build ( int   s , int   t , int   p )  { \n     if ( s == t ){ d [ p ] = a [ s ]; return ;} \n     int   m = ( s + t ) / 2 ; \n     build ( s , m , p * 2 ), build ( m + 1 , t , p * 2 + 1 ); \n     d [ p ] = d [ p * 2 ] + d [( p * 2 ) + 1 ];  }   \u4e0a\u9762\u90a3\u77ed\u77ed7\u884c\u4ee3\u7801\u5c31\u80fd\u5efa\u7acb\u4e00\u4e2a\u7ebf\u6bb5\u6811\u3002  \u5176\u5b9e\u8fd8\u6709\u4e00\u4e2a\u6bd4\u8f83\u4e25\u91cd\u7684\u95ee\u9898\uff1a\u6570\u7ec4  d d  \u5230\u5e95\u5f00\u591a\u5927\uff1f\u5982\u679c  a a  \u6570\u7ec4\u4e2d\u5143\u7d20\u4e2a\u6570\u662f  n n \uff0c\u90a3  d d  \u6570\u7ec4\u7684\u5143\u7d20\u4e2a\u6570\u5e94\u8be5\u5b9a\u4e3a\u591a\u5c11\uff1f\u4fdd\u9669\u8d77\u89c1\uff0c\u4e3a\u4e86\u9632\u6b62\u4f60\u7684  d d  \u6570\u7ec4\u8d8a\u754c\u3001\u7a0b\u5e8f\u7206\u70b8\u7684\u8bdd\uff0c d d  \u6570\u7ec4\u5927\u5c0f\u5e94\u8be5\u4e3a n\\times 4 n\\times 4 \uff0c\u518d\u4fdd\u9669\u4e00\u70b9\u7684\u8bdd\u5b9a\u4e3a n\\times 4+5 n\\times 4+5 \u5427\u3002\u4e3a\u5565\u662f n\\times 4 n\\times 4 \u5462\uff1f\u8fd9\u91cc\u6211\u8f6c\u8f7d\u4e00\u4e0b\u4e00\u7bc7\u535a\u5ba2\uff0c\u91cc\u9762\u6709\u8be6\u7ec6\u7684\u8bb2\u89e3\uff0c\u6211\u5c31\u4e0d\u8bb2\u4e86\uff08\u6211\u61d2\u884c\u4e86\u5427\uff09\u2026\u2026  \u4f20\u9001\u95e8\uff1a http://scinart.github.io/acm/2014/03/19/acm-segment-tree-space-analysis/ \n\uff08\u94fe\u63a5\u5df2\u5931\u6548\uff09",
            "title": "(1) \u7ebf\u6bb5\u6811\u7684\u57fa\u672c\u7ed3\u6784\u4e0e\u5efa\u6811"
        },
        {
            "location": "/data-structure/intermediate/segment/#2_1",
            "text": "\u533a\u95f4\u67e5\u8be2\uff0c\u6bd4\u5982\u6c42\u533a\u95f4  [l,r] [l,r]  \u7684\u603b\u548c\uff08\u5373  a[l]+a[l+1]+...+a[r] a[l]+a[l+1]+...+a[r] \uff09\u3001\u6c42\u533a\u95f4\u6700\u5927\u503c/\u6700\u5c0f\u503c\u2026\u2026\u8fd8\u6709\u5f88\u591a\u5f88\u591a\u2026\u2026\u600e\u4e48\u505a\u5462\uff1f   \u62ff\u4e0a\u9762\u8fd9\u5f20\u56fe\u4e3e\u6817\uff01   \uff08\u53d1\u535a\u5ba2\u7d2f\u6b7b\u4e86\u65e0\u804a\u4e00\u4e0b\uff09\n\u5982\u679c\u8981\u67e5\u8be2\u533a\u95f4  [1,5] [1,5]  \u7684\u548c\uff0c\u90a3\u76f4\u63a5\u83b7\u53d6  d[1] d[1]  \u7684\u503c\uff0860\uff09\u5373\u53ef\u3002\u90a3\u5982\u679c\u6211\u5c31\u4e0d\u67e5\u8be2\u533a\u95f4  [1,5] [1,5] \uff0c\u6211\u5c31\u67e5\u533a\u95f4  [3,5] [3,5]  \u5462\uff1f  \u03a3(\u2299\u25bd\u2299\"a  \u61f5 B \u4e86\u5427\u3002\u4f46\u5176\u5b9e\u5462\u6211\u4eec\u80af\u5b9a\u8fd8\u662f\u6709\u529e\u6cd5\u7684\uff01  <(\uffe3\u02c7\uffe3)/  \u4f60\u8981\u67e5\u7684\u4e0d\u662f  [3,5] [3,5]  \u5417\uff1f\u6211\u628a  [3,5] [3,5]  \u62c6\u6210  [3,3] [3,3]  \u548c  [4,5] [4,5]  \u4e0d\u5c31\u884c\u4e86\u5417\uff1f  \u5177\u4f53\u601d\u8def\u89c1\u4ee3\u7801\uff1a  \u6c42\u548c\uff08\u67e5\u8be2\u533a\u95f4\u7684\u5de6\u7aef\u70b9 l , \u67e5\u8be2\u533a\u95f4\u7684\u53f3\u7aef\u70b9 r , \u5f53\u524d\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u5de6\u7aef\u70b9 s , \u5f53\u524d\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4 t , \u5f53\u524d\u8bbf\u95ee\u7684\u8282\u70b9\u7f16\u53f7 p \uff09  { \n     \u5982\u679c\uff08 l <= s && t <= r \uff09 //\u5f53\u524d\u8bbf\u95ee\u7684\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u5305\u542b\u5728\u67e5\u8be2\u533a\u95f4\u5185 \n     { \n         \u8fd4\u56de   d [ p ] \uff1b \n     } \n     \u5426\u5219 \n     { \n         \u4ee4   \u8fd4\u56de\u503c = 0 \n         \u5982\u679c\uff08 l <= ( s + t ) / 2 \uff09 //\u5f53\u524d\u8bbf\u95ee\u7684\u8282\u70b9\u7684\u5de6\u513f\u5b50\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u5305\u542b\u5728\u67e5 \u8be2\u533a\u95f4\u5185,(s+t)/2\u5176\u5b9e\u662f\u5de6\u53f3\u513f\u5b50\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u7684\u5206\u5272\u7ebf\u4e14(s+t)/2\u5305\u542b\u5728\u5de6\u513f\u5b50\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u4e2d \n         { \n          \u8fd4\u56de\u503c += \u6c42\u548c\uff08 l , r , s ,( s + t ) / 2 , p * 2 \uff09 ; //l\u548cr\u662f\u53ef\u4ee5\u4e0d\u7528\u53d8\u7684\uff01\u4e0d\u7ba1\u4f60\u4fe1\u4e0d\u4fe1\u6211\u53cd\u6b63\u662f\u4fe1\u4e86\u3002\u5f53\u524d\u8282\u70b9\u7684\u5de6\u513f\u5b50\u8282\u70b9\u7f16\u53f7\u662fp2\uff0c\u4e4b\u524d\u8bb2\u8fc7\u4e86\uff0c\u5de6\u513f\u5b50\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u5de6\u7aef\u70b9\u5c31\u662f\u5f53\u524d\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u7684\u5de6\u7aef\u70b9\uff0c(s+t)/2\u662f\u5de6\u513f\u5b50\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u7684\u53f3\u77ed\u70b9 \n         } \n         \u5982\u679c ( r > ( s + t ) / 2 ) //\u5f53\u524d\u8bbf\u95ee\u7684\u8282\u70b9\u7684\u53f3\u513f\u5b50\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u5305\u542b\u5728\u67e5 \u8be2\u533a\u95f4\u5185 \n         { \n           \u8fd4\u56de\u503c += \u6c42\u548c\uff08 l , r ,( s + t ) / 2 + 1 , t , p * 2 + 1 \uff09\uff1b //(s+t)/2+1\u662f\u5f53\u524d\u8bbf\u95ee\u8282\u70b9\u7684\u53f3\u513f\u5b50\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u7684\u5de6\u7aef\u70b9 \n         } \n         \u8fd4\u56de   \u8fd4\u56de\u503c\uff1b \n     }  }   \u600e\u4e48\u6837\uff0c\u4ee3\u7801\u5f88\u4e11\u5427\uff1f\u5e9f\u8bdd\uff0c\u7528\u4e2d\u6587\u5199\u7684\u80fd\u4e0d\u4e11\u5417\uff1f\u73b0\u5728\u641e\u4e2a\u82f1(da)\u6587(xin)\u7684(wen)\uff1a  int   getsum ( int   l , int   r , int   s , int   t , int   p )  { \n         if ( l <= s && t <= r ) return   d [ p ]; \n         int   m = ( s + t ) / 2 , sum = 0 ; \n         if ( l <= m ) sum += getsum ( l , r , s , m , p * 2 ); \n         if ( r > m ) sum += getsum ( l , r , m + 1 , t , p * 2 + 1 ); \n         return   sum ;  }   \u8fd8\u662f\u633a\u77ed\u7684\u5427\uff1f\u8fd9\u91cc\u7528\u5230\u7684\u4e3b\u8981\u601d\u8def\u5c31\u662f\u628a\u4e00\u4e2a\u533a\u95f4\u62c6\u6210\u5de6\u53f3\u4e24\u4e2a\u533a\u95f4\uff0c\u518d\u5206\u522b\u5904\u7406\u5de6\u53f3\u533a\u95f4\u3002\u4e5f\u662f\u4e8c\u5206\u7684\u601d\u60f3\u3002",
            "title": "(2) \u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u67e5\u8be2"
        },
        {
            "location": "/data-structure/intermediate/segment/#3_1",
            "text": "\u533a\u95f4\u4fee\u6539\u662f\u4e2a\u5f88\u6709\u8da3\u7684\u4e1c\u897fo(\u256f\u25a1\u2570)o\u2026\u2026\u4f60\u60f3\u554a\uff0c\u5982\u679c\u4f60\u8981\u4fee\u6539\u533a\u95f4[l,r]\uff0c\u96be\u9053\u628a\u6240\u6709\u5305\u542b\u5728\u533a\u95f4[l,r]\u4e2d\u7684\u8282\u70b9\u90fd\u904d\u5386\u4e00\u6b21\u3001\u4fee\u6539\u4e00\u6b21\uff1f\u90a3\u4f30\u8ba1\u8fd9\u65f6\u95f4\u590d\u6742\u5ea6\u4f30\u8ba1\u4f1a\u4e0a\u5929|(*\u2032\u53e3`)\u3002\u8fd9\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u8fd9\u91cc\u8981\u5f15\u7528\u4e00\u4e2a\u53eb\u505a  \u201c\u61d2\u60f0\u6807\u8bb0\u201d  \u7684\u4e1c\u897f\u3002  \u6211\u4eec\u8bbe\u4e00\u4e2a\u6570\u7ec4b\uff0cb[i]\u8868\u793a\u7f16\u53f7\u4e3ai\u7684\u8282\u70b9\u7684\u61d2\u60f0\u6807\u8bb0\u503c\u3002\u5565\u662f\u61d2\u60f0\u6807\u8bb0\u3001\u61d2\u60f0\u6807\u8bb0\u503c\u5462\uff1f(O_O)?\u8fd9\u91cc\u6211\u518d\u4e3e\u4e2a\u6817\u5b50\uff08\u539f\u521b\u5c0f\u6545\u4e8b\u6211\u771f\u6709\u624d\u54c8\u54c8\u54c8(\u25e1\u1d17\u25e1\u273f)\uff09\uff1a   A\u6709\u4e24\u4e2a\u513f\u5b50\uff0c\u4e00\u4e2a\u662fB\uff0c\u4e00\u4e2a\u662fC\u3002  \u6709\u4e00\u5929A\u8981\u5efa\u4e00\u4e2a\u65b0\u623f\u5b50\uff0c\u6ca1\u94b1\u3002\u521a\u597d\u8fc7\u5e74\u561b\uff0c\u6709\u4eba\u8981\u7ed9B\u548cC\u7ea2\u5305\uff0c\u4e24\u4e2a\u7ea2\u5305\u7684\u94b1\u6570\u76f8\u540c\u90fd\u662f(1000000000000001%2)\u5706\uff08\u597d\u591a\u554a\uff01\u2026\u2026\u4e0d\u5c31\u662f1\u5143\u5417\u2026\u2026\uff09\uff0c\u7136\u800c\u56e0\u4e3aA\u662f\u7236\u4eb2\u6240\u4ee5\u7ea2\u5305\u80af\u5b9a\u662f\u5148\u585e\u7ed9A\u54af~  \u7406\u8bba\u4e0a\u6765\u8bb2A\u5e94\u8be5\u628a\u4e24\u4e2a\u7ea2\u5305\u5206\u522b\u7ed9B\u548cC\uff0c\u4f46\u662f\u2026\u2026\u7f3a\u94b1\u561b\uff0cA\u5c31\u628a\u7ea2\u5305\u5077\u5077\u6536\u5230\u81ea\u5df1\u53e3\u888b\u91cc\u4e86\u3002  A\u9ad8\u5174\u2642\u5730\u8bf4\uff1a\u201c\u6211\u73b0\u5728\u67092\u4efd\u7ea2\u5305\u4e86\uff01\u6211\u53c8\u591a\u4e862\u00d7(1000000000000001%2)=2\u5706\u4e86\uff01\u54c8\u54c8\u54c8~\u201d  \u4f46\u662fA\u77e5\u9053\uff0c\u5982\u679c\u4ed6\u4e0d\u628a\u7ea2\u5305\u7ed9B\u548cC\uff0c\u90a3B\u548cC\u80af\u5b9a\u4f1a\u4e0d\u723d\u7136\u540e\u5bfc\u81f4\u5bb6\u5ead\u77db\u76fe\u6700\u540e\u5d29\u6e83\uff0c\u6240\u4ee5A\u5bf9\u513f\u5b50B\u548cC\u8bf4\uff1a\u201c\u6211\u6b20\u4f60\u4eec\u6bcf\u4eba1\u4efd(1000000000000001%2)\u5706\u7684\u7ea2\u5305\uff0c\u4e0b\u6b21\u6709\u65b0\u7ea2\u5305\u7ed9\u8fc7\u6765\u7684\u65f6\u5019\u518d\u7ed9\u4f60\u4eec\uff01\u8fd9\u91cc\u6211\u5148\u505a\u4e0b\u8bb0\u5f55\u2026\u2026\u55ef\u2026\u2026\u6211\u94b1\u4f60\u4eec\u5404(1000000000000001%2)\u5706\u2026\u2026\u201d\u3002  \u513f\u5b50B\u3001C\u6709\u70b9\u607c\u6012\uff1a\u201c\u53ef\u662f\u5982\u679c\u6709\u540c\u5b66\u95ee\u8d77\u6211\u4eec\u6211\u4eec\u6536\u5230\u4e86\u591a\u5c11\u7ea2\u5305\u548b\u529e\uff1f\u4f60\u628a\u6211\u4eec\u7684\u7ea2\u5305\u90fd\u6536\u4e86\uff0c\u6211\u4eec\u8fd8\u600e\u4e48\u88c5\u00d7\uff1f\u201d  \u7236\u4eb2A\u8d76\u5fd9\u8bf4\uff1a\u201c\u6709\u540c\u5b66\u95ee\u8d77\u6765\u6211\u5c31\u4f1a\u7ed9\u4f60\u4eec\u7684\uff01\u6211\u6b20\u6761\u90fd\u5199\u597d\u4e86\u4e0d\u4f1a\u4e0d\u7b97\u8bdd\u7684\uff01\u201d  \u8fd9\u6837B\u3001C\u624d\u653e\u4e86\u5fc3\u3002\uff08\u6ce8\uff1a%\u662f\u53d6\u4f59\u6570\u7684\u610f\u601d\uff0ca%b\u5c31\u662fa\u9664\u4ee5b\u7684\u4f59\u6570\uff0c\u6240\u4ee5\u2026\u20261000000000000001%2=1\uff09   \u5728\u8fd9\u4e2a\u6545\u4e8b\u4e2d\u6211\u4eec\u4e0d\u96be\u770b\u51fa\uff0cA\u5c31\u662f\u7236\u4eb2\u8282\u70b9\uff0cB\u548cC\u662fA\u7684\u513f\u5b50\u8282\u70b9\uff0c\u800c\u4e14B\u548cC\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5206\u522b\u5bf9\u5e94\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u503c\uff08\u5c31\u662f\u4e4b\u524d\u8bb2\u7684\u6570\u7ec4  a a \uff09\uff0c\u6211\u4eec\u5047\u8bbe\u8282\u70b9A\u8868\u793a\u533a\u95f4  [1,2] [1,2] \uff08\u5373  a[1]+a[2] a[1]+a[2] \uff09\uff0c\u8282\u70b9B\u8868\u793a\u533a\u95f4  [1,1] [1,1] \uff08\u5373  a[1] a[1] \uff09\uff0c\u8282\u70b9C\u8868\u793a\u533a\u95f4  [2,2] [2,2] \uff08\u5373  a[2] a[2] \uff09\uff0c\u5b83\u4eec\u7684\u521d\u59cb\u503c\u90fd\u4e3a 0\uff08\u73b0\u5728\u624d\u521a\u5f00\u59cb\u5462\uff0c\u8fd8\u6ca1\u62ff\u5230\u7ea2\u5305\uff0c\u6240\u4ee5\u90fd\u6ca1\u94b1~\uff09\u3002  \u5982\u56fe\uff1a       \u6ce8\uff1a\u8fd9\u91ccD\u8868\u793a\u5f53\u524d\u8282\u70b9\u7684\u503c\uff08\u5373\u6240\u8868\u793a\u533a\u95f4\u7684\u533a\u95f4\u548c\uff09\n\u4e3a\u4ec0\u4e48\u8282\u70b9A\u7684D\u662f  2\\times (1000000000000001\\%2) 2\\times (1000000000000001\\%2)  \u5462\uff1f\u539f\u56e0\u5f88\u7b80\u5355\u3002\u8282\u70b9A\u8868\u793a\u7684\u533a\u95f4\u662f[1,2]\uff0c\u4e00\u5171\u5305\u542b2\u4e2a\u5143\u7d20\u3002\u6211\u4eec\u662f\u8ba9  [1,2] [1,2]  \u8fd9\u4e2a\u533a\u95f4\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u52a0\u4e0a 1000000000000001\\%2 1000000000000001\\%2 \uff0c\u6240\u4ee5\u8282\u70b9A\u7684\u503c\u5c31\u52a0\u4e0a\u4e86  2\\times (1000000000000001\\%2) 2\\times (1000000000000001\\%2)  \u54af =\uffe3\u03c9\uffe3= \u3002  \u5982\u679c\u8fd9\u65f6\u5019\u6211\u4eec\u8981\u67e5\u8be2\u533a\u95f4  [1,1] [1,1] \uff08\u5373\u8282\u70b9B\u7684\u503c\uff09\u600e\u4e48\u529e\u5462\uff1f\u4e0d\u662f\u8bf4\u4e86\u5417\uff1f\u5982\u679cB\u8981\u7528\u5230\u7684\u65f6\u5019\uff0cA\u5c31\u628a\u5b83\u6b20\u7684\u8fd8\u7ed9B\uff01  \u5177\u4f53\u662f\u8fd9\u6837\u64cd\u4f5c\uff08\u5982\u56fe\uff09\uff1a    \u6ce8\uff1a\u4e3a\u4ec0\u4e48\u662f\u52a0\u4e0a  1\\times (1000000000000001\\%2) 1\\times (1000000000000001\\%2)  \u5462\uff1f  \u539f\u56e0\u548c\u4e0a\u9762\u4e00\u6837\u2014\u2014B\u548cC\u8868\u793a\u7684\u533a\u95f4\u4e2d\u53ea\u67091\u4e2a\u5143\u7d20\u554a\uff01   \u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff0c\u533a\u95f4 [1,1] [1,1] \u7684\u533a\u95f4\u548c\u5c31\u662f1\u5566\uff01O(\u2229_\u2229)O\u54c8\u54c8~\uff01  \u4ee3\u7801\u5982\u4e0b\uff08\u4e0b\u9762\u4ee3\u7801\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u663e\u793a\u51fa\u6765\u5f88\u4e11\uff0c\u5efa\u8bae\u590d\u5236\u5230\u81ea\u5df1\u7684C++\u7f16\u8f91\u5668\u91cc\u770b\u2026\u2026\uff09\uff1a  \u533a\u95f4\u4fee\u6539\uff08\u533a\u95f4\u52a0\u4e0a\u67d0\u4e2a\u503c\uff09\uff1a  void   update ( int   l , int   r , int   c , int   s , int   t , int   p ) //l\u662f\u67e5\u8be2\u7684\u533a\u95f4\u5de6\u7aef\u70b9\uff0cr\u662f\u53f3\u7aef\u70b9\uff0cc\u8868\u793a\u533a\u95f4\u6bcf\u4e2a\u5143\u7d20\u52a0\u4e0a\u7684\u503c\uff0cs\u662f\u5f53\u524d\u8282\u70b9\u6240\u8868\u793a\u7684\u533a\u95f4\u7684\u5de6\u7aef\u70b9\uff0ct\u662f\u53f3\u7aef\u70b9\uff0cp\u662f\u5f53\u524d\u8282\u70b9\u7684\u7f16\u53f7(\u6839\u8282\u70b9\u6807\u53f7\u4e3a1)  { \n     if ( l <= s && t <= r ){ d [ p ] += ( t - s + 1 ) * c , b [ p ] += c ; return ;} //\u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u5b8c\u5168\u5305\u542b\u5728\u67e5\u8be2\u533a\u95f4\u5185\uff0c\u76f4\u63a5\u4fee\u6539\u5f53\u524d\u8282\u70b9\u7684\u503c\uff0c\u7136\u540e\u505a\u4e0a\u6807\u8bb0\uff0c\u7ed3\u675f\u4fee\u6539 \n     int   m = ( s + t ) / 2 ; //\u8ba1\u7b97\u5de6\u53f3\u8282\u70b9\u8868\u793a\u533a\u95f4\u7684\u5206\u5272\u7ebf \n     if ( b [ p ] && s != t ) //\u5982\u679c\u5f53\u524d\u8282\u70b9\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff08\u53f6\u5b50\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\u662f\u76f8\u7b49\u7684\uff09\u4e14\u5f53\u524d\u7684\u61d2\u60f0\u6807\u8bb0\u503c!=0\uff0c\u5c31\u66f4\u65b0\u5f53\u524d\u8282\u70b9\u7684\u4e24\u4e2a\u513f\u5b50\u8282\u70b9\u7684\u503c\u548c\u61d2\u60f0\u6807\u8bb0\u503c \n         d [ p * 2 ] += b [ p ] * ( m - s + 1 ), d [ p * 2 + 1 ] += b [ p ] * ( t - m ), b [ p * 2 ] += b [ p ], b [ p * 2 + 1 ] += b [ p ]; \n     b [ p ] = 0 ; //\u6e05\u7a7a\u5f53\u524d\u8282\u70b9\u7684\u61d2\u60f0\u6807\u8bb0\u503c \n     if ( l <= m ) update ( l , r , c , s , m , p * 2 ); \n     if ( r > m ) update ( l , r , c , m + 1 , t , p * 2 + 1 ); \n     d [ p ] = d [ p * 2 ] + d [ p * 2 + 1 ];  }   \u533a\u95f4\u67e5\u8be2\uff08\u6c42\u548c\uff09\uff1a  int   getsum ( int   l , int   r , int   s , int   t , int   p ) //l\u662f\u67e5\u8be2\u7684\u533a\u95f4\u5de6\u7aef\u70b9\uff0cr\u662f\u53f3\u7aef\u70b9\uff0cs\u662f\u5f53\u524d\u8282\u70b9\u6240\u8868\u793a\u7684\u533a\u95f4\u7684\u5de6\u7aef\u70b9\uff0ct\u662f\u53f3\u7aef\u70b9\uff0cp\u662f\u5f53\u524d\u8282\u70b9\u7684\u7f16\u53f7\uff08\u6839\u8282\u70b9\u6807\u53f7\u4e3a1\uff09  { \n     if ( l <= s && t <= r ) return   d [ p ]; //\u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u5b8c\u5168\u5305\u542b\u5728\u67e5\u8be2\u533a\u95f4\u5185\uff0c\u8fd4\u56de\u5f53\u524d\u8282\u70b9\u7684\u503c \n     int   m = ( s + t ) / 2 ; //\u8ba1\u7b97\u5de6\u53f3\u8282\u70b9\u8868\u793a\u533a\u95f4\u7684\u5206\u5272\u7ebf \n     if ( b [ p ] && s != t ) //\u5982\u679c\u5f53\u524d\u8282\u70b9\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff08\u53f6\u5b50\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\u662f\u76f8\u7b49\u7684\uff09\u4e14\u5f53\u524d\u7684\u61d2\u60f0\u6807\u8bb0\u503c!=0\uff0c\u5c31\u66f4\u65b0\u5f53\u524d\u8282\u70b9\u7684\u4e24\u4e2a\u513f\u5b50\u8282\u70b9\u7684\u503c\u548c\u61d2\u60f0\u6807\u8bb0 \n         d [ p * 2 ] += b [ p ] * ( m - s + 1 ), d [ p * 2 + 1 ] += b [ p ] * ( t - m ), b [ p * 2 ] += b [ p ], b [ p * 2 + 1 ] += b [ p ]; \n     b [ p ] = 0 ; int   sum = 0 ; //\u6e05\u7a7a\u5f53\u524d\u8282\u70b9\u7684\u61d2\u60f0\u6807\u8bb0\u503c \n     if ( l <= m ) sum = getsum ( l , r , s , m , p * 2 ); \n     if ( r > m ) sum += getsum ( l , r , m + 1 , t , p * 2 + 1 ); \n     return   sum ;  }   \u4f60\u6709\u6ca1\u6709\u53d1\u73b0\u533a\u95f4\u67e5\u8be2\u548c\u533a\u95f4\u4fee\u6539\u5f88\u50cf\u5417\uff1f(... __ ...)   \u563b\u563b\u2026\u2026\u5176\u5b9e\u5e73\u65f6\u6211\u6253\u7ebf\u6bb5\u6811\u533a\u95f4\u4fee\u6539\u548c\u67e5\u8be2\u6211\u90fd\u662f\u6253\u4e00\u4efd\uff0c\u53e6\u4e00\u4efd\u590d\u5236\u9ecf\u8d34\u4ee5\u540e\u518d\u7a0d\u4f5c\u4fee\u6539\u5c31\u884c\u4e86\u3002  \u5982\u679c\u4f60\u662f\u8981\u5b9e\u73b0\u533a\u95f4\u4fee\u6539\u4e3a\u67d0\u4e00\u4e2a\u503c\u800c\u4e0d\u662f\u52a0\u4e0a\u67d0\u4e00\u4e2a\u503c\u7684\u8bdd\uff0c\u5f88\u7b80\u5355\uff0c\u628a\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u6240\u6709\u7684+=\u66ff\u6362\u6210=\u5373\u53ef\uff08\u9664\u4e86 sum+=getsum(l,r,m+1,t,p*2+1) sum+=getsum(l,r,m+1,t,p*2+1) \u8fd9\u4e00\u53e5\uff09\u3002\u4ee3\u7801\u5982\u4e0b\uff1a  void   update ( int   l , int   r , int   c , int   s , int   t , int   p )  { \n     if ( l <= s && t <= r ){ d [ p ] = ( t - s + 1 ) * c , b [ p ] = c ; return ;} \n     int   m = ( s + t ) / 2 ; \n     if ( b [ p ] && s != t ) \n         d [ p * 2 ] = b [ p ] * ( m - s + 1 ), d [ p * 2 + 1 ] = b [ p ] * ( t - m ), b [ p * 2 ] = b [ p * 2 + 1 ] = b [ p ]; \n     b [ p ] = 0 ; \n     if ( l <= m ) update ( l , r , c , s , m , p * 2 ); \n     if ( r > m ) update ( l , r , c , m + 1 , t , p * 2 + 1 ); \n     d [ p ] = d [ p * 2 ] + d [ p * 2 + 1 ];  }  int   getsum ( int   l , int   r , int   s , int   t , int   p )  { \n     if ( l <= s && t <= r ) return   d [ p ]; \n     int   m = ( s + t ) / 2 ; \n     if ( b [ p ] && s != t ) \n         d [ p * 2 ] = b [ p ] * ( m - s + 1 ), d [ p * 2 + 1 ] = b [ p ] * ( t - m ), b [ p * 2 ] = b [ p * 2 + 1 ] = b [ p ]; \n     b [ p ] = 0 ; int   sum = 0 ; \n     if ( l <= m ) sum = getsum ( l , r , s , m , p * 2 ); \n     if ( r > m ) sum += getsum ( l , r , m + 1 , t , p * 2 + 1 ); \n     return   sum ;  }",
            "title": "(3) \u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u4fee\u6539\u4e0e\u61d2\u60f0\u6807\u8bb0"
        },
        {
            "location": "/data-structure/intermediate/segment/#5",
            "text": "\u4e0a\u9762\u7684\u4ee3\u7801\u4e3a\u4e86\u7b80\u5355\u6613\u61c2\uff0c\u6240\u4ee5\u5462\u6211\u5199\u7684\u6bd4\u8f83\u4e0d\u4f18\u7f8e\u3002  \u8fd9\u91cc\u6211\u603b\u7ed3\u51e0\u4e2a\u7ebf\u6bb5\u6811\u7684\u4f18\u5316\uff1a   a\\times 2 a\\times 2 \u53ef\u4ee5\u7528 a<<1 a<<1 \u4ee3\u66ff\uff0c a\\div 2 a\\div 2 \u53ef\u4ee5\u7528 a>>1 a>>1 \u4ee3\u66ff\uff0c\u4f4d\u8fd0\u7b97\u51cf\u5c0f\u5e38\u6570  \u5efa\u6811\u65f6\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u6240\u5bf9\u5e94\u7684\u533a\u95f4\uff0c\u5c31\u4e0d\u9700\u8981\u6bcf\u6b21\u8ba1\u7b97\u5f53\u524d\u8282\u70b9\u7684\u5de6\u53f3\u7aef\u70b9\u4e86\uff0c\u51cf\u5c0f\u4ee3\u7801\u590d\u6742\u5ea6  \u56e0\u4e3a\u4e0b\u6807\u4e3a a a \u7684\u8282\u70b9\u7684\u5de6\u513f\u5b50\u4e0b\u6807\u4e3a a\\times 2 a\\times 2 \uff0c\u53f3\u513f\u5b50\u4e0b\u6807\u4e3a a\\times 2+1 a\\times 2+1 \uff0c\u6240\u4ee5\u53ef\u4ee5\uff1a   #define LS(a) (a<<1)  //a<<1\u7b49\u540c\u4e8ea*2  #define RS(a) (a<<1|1)  //a<<1|1\u7b49\u540c\u4e8ea*2+1    \u56e0\u4e3a\u9012\u5f52\u5230\u53f6\u5b50\u8282\u70b9\uff08\u5de6\u7aef\u70b9\u7b49\u4e8e\u53f3\u7aef\u70b9\u7684\u8282\u70b9\uff09\u7684\u65f6\u5019\u53f6\u5b50\u8282\u70b9\u4e00\u5b9a\u5305\u542b\u5728\u67e5\u8be2\u7684\u533a\u95f4\u5185\uff0c\u6240\u4ee5\u4e00\u5b9a\u4f1a\u5728\u61d2\u60f0\u6807\u8bb0\u4e0b\u653e\u524d\u5c31\u5904\u7406\u5b8c\u4e86return\u6389\u4e86\uff0c\u6240\u4ee5\u4e0d\u7528\u62c5\u5fc3\u4f1a\u51fa\u73b0\u53f6\u5b50\u8282\u70b9\u61d2\u60f0\u6807\u8bb0\u4e0b\u653e\u5bfc\u81f4\u6570\u7ec4\u8d8a\u754c\uff0c\u4e5f\u4e0d\u7528\u61d2\u60f0\u6807\u8bb0\u4e0b\u65b9\u6bcf\u6b21\u8fd8\u68c0\u67e5\u5f53\u524d\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\u4e86\u3002\uff08\u4ee3\u7801\u4e2d\u7684s!=t\u53ef\u4ee5\u53bb\u6389)\u51cf\u5c0f\u4ee3\u7801\u590d\u6742\u5ea6\u3002  \u6700\u597d\u522b\u50cf\u4e0a\u6587\u90a3\u6837\u628a\u6240\u6709\u529f\u80fd\u90fd\u5199\u4e00\u8d77\uff0c\u6bd4\u5982\u4e0b\u653e\u61d2\u60f0\u6807\u8bb0\u53ef\u4ee5\u5199\u4e00\u4e2a\u4e13\u95e8\u7684\u51fd\u6570\uff0c\u4ece\u513f\u5b50\u8282\u70b9\u66f4\u65b0\u5f53\u524d\u8282\u70b9\u4e5f\u53ef\u4ee5\u5199\u4e00\u4e2a\u4e13\u95e8\u7684\u51fd\u6570\uff0c\u7b49\u7b49\u3002",
            "title": "5. \u4e00\u4e9b\u4f18\u5316"
        },
        {
            "location": "/data-structure/intermediate/segment/#6",
            "text": "",
            "title": "6. \u7ebf\u6bb5\u6811\u57fa\u7840\u9898\u63a8\u8350"
        },
        {
            "location": "/data-structure/intermediate/segment/#1-luogu-p3372-1",
            "text": "\u4f20\u9001\u95e8=\uffe3\u03c9\uffe3=  \u4ee3\u7801\uff1a  #include   <iostream>  using   namespace   std ;  typedef   long   long   LL ;  LL   n , a [ 100005 ], d [ 270000 ], b [ 270000 ];  void   build ( LL   l , LL   r , LL   p )  { \n     if ( l == r ){ d [ p ] = a [ l ]; return ;} \n     LL   m = ( l + r ) >> 1 ; \n     build ( l , m , p << 1 ), build ( m + 1 , r ,( p << 1 ) | 1 ); \n     d [ p ] = d [ p << 1 ] + d [( p << 1 ) | 1 ];  }  void   update ( LL   l , LL   r , LL   c , LL   s , LL   t , LL   p )  { \n     if ( l <= s && t <= r ){ d [ p ] += ( t - s + 1 ) * c , b [ p ] += c ; return ;} \n     LL   m = ( s + t ) >> 1 ; \n     if ( b [ p ] && s != t ) \n         d [ p << 1 ] += b [ p ] * ( m - s + 1 ), d [( p << 1 ) | 1 ] += b [ p ] * ( t - m ), b [ p << 1 ] += b [ p ], b [( p << 1 ) | 1 ] += b [ p ]; \n     b [ p ] = 0 ; \n     if ( l <= m ) update ( l , r , c , s , m , p << 1 ); \n     if ( r > m ) update ( l , r , c , m + 1 , t ,( p << 1 ) | 1 ); \n     d [ p ] = d [ p << 1 ] + d [( p << 1 ) | 1 ];  }  LL   getsum ( LL   l , LL   r , LL   s , LL   t , LL   p )  { \n     if ( l <= s && t <= r ) return   d [ p ]; \n     LL   m = ( s + t ) >> 1 ; \n     if ( b [ p ] && s != t ) \n         d [ p << 1 ] += b [ p ] * ( m - s + 1 ), d [( p << 1 ) | 1 ] += b [ p ] * ( t - m ), b [ p << 1 ] += b [ p ], b [( p << 1 ) | 1 ] += b [ p ]; \n     b [ p ] = 0 ; LL   sum = 0 ; \n     if ( l <= m ) sum = getsum ( l , r , s , m , p << 1 ); \n     if ( r > m ) sum += getsum ( l , r , m + 1 , t ,( p << 1 ) | 1 ); \n     return   sum ;  }  int   main ()  { \n     ios :: sync_with_stdio ( 0 ); \n     LL   q , i1 , i2 , i3 , i4 ; \n     cin >> n >> q ; \n     for ( LL   i = 1 ; i <= n ; i ++ ) cin >> a [ i ]; \n     build ( 1 , n , 1 ); \n     while ( q -- ) \n     { \n         cin >> i1 >> i2 >> i3 ; \n         if ( i1 == 2 ) cout << getsum ( i2 , i3 , 1 , n , 1 ) << endl ; \n         else   cin >> i4 , update ( i2 , i3 , i4 , 1 , n , 1 ); \n     } \n     return   0 ;   }",
            "title": "(1) LUOGU P3372 \u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811 1"
        },
        {
            "location": "/data-structure/intermediate/segment/#2-luogu-p3373-2",
            "text": "\u4f20\u9001\u95e8=\uffe3\u03c9\uffe3=  \u4ee3\u7801\uff1a #include <iostream>  #include <cstdio>  #include <cstring>  #include <climits>  #include <iomanip>  #include <cmath>  #include <vector>  #include <algorithm>  using   namespace   std ;  #define ll long long  ll   read (){ \n     ll   w = 1 , q = 0 ; char   ch = ' ' ; \n     while ( ch != '-' && ( ch < '0' || ch > '9' )) ch = getchar (); \n     if ( ch == '-' ) w =- 1 , ch = getchar (); \n     while ( ch >= '0' && ch <= '9' ) q = ( ll ) q * 10 + ch - '0' , ch = getchar (); \n     return   ( ll ) w * q ;  }  int   n , m ;  ll   mod ;  ll   a [ 100005 ], sum [ 400005 ], mul [ 400005 ], laz [ 400005 ];  void   up ( int   i ){ sum [ i ] = ( sum [( i << 1 )] + sum [( i << 1 ) | 1 ]) % mod ;}  void   pd ( int   i , int   s , int   t ){ \n     int   l = ( i << 1 ), r = ( i << 1 ) | 1 , mid = ( s + t ) >> 1 ; \n     if ( mul [ i ] != 1 ){ \n     mul [ l ] *= mul [ i ]; mul [ l ] %= mod ; mul [ r ] *= mul [ i ]; mul [ r ] %= mod ; \n     laz [ l ] *= mul [ i ]; laz [ l ] %= mod ; laz [ r ] *= mul [ i ]; laz [ r ] %= mod ; \n     sum [ l ] *= mul [ i ]; sum [ l ] %= mod ; sum [ r ] *= mul [ i ]; sum [ r ] %= mod ; \n     mul [ i ] = 1 ; \n     } \n     if ( laz [ i ]){ \n     sum [ l ] += laz [ i ] * ( mid - s + 1 ); sum [ l ] %= mod ; \n     sum [ r ] += laz [ i ] * ( t - mid ); sum [ r ] %= mod ; \n     laz [ l ] += laz [ i ]; laz [ l ] %= mod ; \n     laz [ r ] += laz [ i ]; laz [ r ] %= mod ; \n     laz [ i ] = 0 ; \n     } return ;  }  void   build ( int   s , int   t , int   i ){ \n     mul [ i ] = 1 ; if ( s == t ){ sum [ i ] = a [ s ]; return ;} \n     int   mid = ( s + t ) >> 1 ; \n     build ( s , mid , i << 1 ); build ( mid + 1 , t ,( i << 1 ) | 1 ); up ( i );  }  void   chen ( int   l , int   r , int   s , int   t , int   i , ll   z ){ \n     int   mid = ( s + t ) >> 1 ; \n     if ( l <= s && t <= r ){ \n         mul [ i ] *= z ; mul [ i ] %= mod ; laz [ i ] *= z ; laz [ i ] %= mod ; \n         sum [ i ] *= z ; sum [ i ] %= mod ; return ; \n     } \n     pd ( i , s , t ); \n     if ( mid >= l ) chen ( l , r , s , mid ,( i << 1 ), z ); \n     if ( mid + 1 <= r ) chen ( l , r , mid + 1 , t ,( i << 1 ) | 1 , z ); \n     up ( i );  }  void   add ( int   l , int   r , int   s , int   t , int   i , ll   z ){ \n     int   mid = ( s + t ) >> 1 ; \n     if ( l <= s && t <= r ){ \n         sum [ i ] += z * ( t - s + 1 ); sum [ i ] %= mod ; laz [ i ] += z ; laz [ i ] %= mod ; \n         return ; \n     } \n     pd ( i , s , t ); \n     if ( mid >= l ) add ( l , r , s , mid ,( i << 1 ), z ); \n     if ( mid + 1 <= r ) add ( l , r , mid + 1 , t ,( i << 1 ) | 1 , z ); \n     up ( i );  }  ll   getans ( int   l , int   r , int   s , int   t , int   i ){ \n     int   mid = ( s + t ) >> 1 ; ll   tot = 0 ; \n     if ( l <= s && t <= r ){ return   sum [ i ];} \n     pd ( i , s , t ); \n     if ( mid >= l ) tot += getans ( l , r , s , mid ,( i << 1 )); \n     tot %= mod ; \n     if ( mid + 1 <= r ) tot += getans ( l , r , mid + 1 , t ,( i << 1 ) | 1 ); \n     return   tot % mod ;  }  int   main ()  { \n     int   i , j , x , y , bh ; \n     ll   z ; \n     n = read (); m = read (); mod = read (); \n     for ( i = 1 ; i <= n ; i ++ ) a [ i ] = read (); \n     build ( 1 , n , 1 ); \n     for ( i = 1 ; i <= m ; i ++ ){ \n         bh = read (); \n         if ( bh == 1 ){ \n             x = read (); y = read (); z = read (); \n             chen ( x , y , 1 , n , 1 , z ); \n         } \n         else   if ( bh == 2 ){ \n             x = read (); y = read (); z = read (); \n             add ( x , y , 1 , n , 1 , z ); \n         } \n         else   if ( bh == 3 ){ \n             x = read (); y = read (); \n             printf ( \"%lld \\n \" , getans ( x , y , 1 , n , 1 )); \n         } \n     } \n        return   0 ;  }",
            "title": "(2) LUOGU P3373 \u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811 2"
        },
        {
            "location": "/data-structure/intermediate/segment/#3-codevs",
            "text": "\u4f20\u9001\u95e8=\uffe3\u03c9\uffe3=  \u5177\u4f53\u9898\u89e3\u53bb\u6211\u7684\u535a\u5ba2\u91cc\u641c\u7d22\u5427\u3002  \u4e0d\u4fdd\u8bc1\u641c\u5f97\u5230\u3002",
            "title": "(3) CODEVS \u7ebf\u6bb5\u6811\u7ec3\u4e60 \uff08\u8fd9\u662f\u4e00\u4e2a\u7cfb\u5217\uff09"
        },
        {
            "location": "/data-structure/intermediate/segment/#4-hihocoder-1078",
            "text": "\u4f20\u9001\u95e8=\uffe3\u03c9\uffe3=  \u4ee3\u7801\uff1a #include   <iostream>  using   namespace   std ;  int   n , a [ 100005 ], d [ 270000 ], b [ 270000 ];  void   build ( int   l , int   r , int   p )  { \n     if ( l == r ){ d [ p ] = a [ l ]; return ;} \n     int   m = ( l + r ) >> 1 ; \n     build ( l , m , p << 1 ), build ( m + 1 , r ,( p << 1 ) | 1 ); \n     d [ p ] = d [ p << 1 ] + d [( p << 1 ) | 1 ];  }  void   update ( int   l , int   r , int   c , int   s , int   t , int   p )  { \n     if ( l <= s && t <= r ){ d [ p ] = ( t - s + 1 ) * c , b [ p ] = c ; return ;} \n     int   m = ( s + t ) >> 1 ; \n     if ( b [ p ] && s != t ) \n         d [ p << 1 ] = b [ p ] * ( m - s + 1 ), d [( p << 1 ) | 1 ] = b [ p ] * ( t - m ), b [ p << 1 ] = b [( p << 1 ) | 1 ] = b [ p ]; \n     b [ p ] = 0 ; \n     if ( l <= m ) update ( l , r , c , s , m , p << 1 ); \n     if ( r > m ) update ( l , r , c , m + 1 , t ,( p << 1 ) | 1 ); \n     d [ p ] = d [ p << 1 ] + d [( p << 1 ) | 1 ];  }  int   getsum ( int   l , int   r , int   s , int   t , int   p )  { \n     if ( l <= s && t <= r ) return   d [ p ]; \n     int   m = ( s + t ) >> 1 ; \n     if ( b [ p ] && s != t ) \n         d [ p << 1 ] = b [ p ] * ( m - s + 1 ), d [( p << 1 ) | 1 ] = b [ p ] * ( t - m ), b [ p << 1 ] = b [( p << 1 ) | 1 ] = b [ p ]; \n     b [ p ] = 0 ; int   sum = 0 ; \n     if ( l <= m ) sum = getsum ( l , r , s , m , p << 1 ); \n     if ( r > m ) sum += getsum ( l , r , m + 1 , t ,( p << 1 ) | 1 ); \n     return   sum ;  }  int   main ()  { \n     ios :: sync_with_stdio ( 0 ); \n     cin >> n ; \n     for ( int   i = 1 ; i <= n ; i ++ ) cin >> a [ i ]; \n     build ( 1 , n , 1 ); \n     int   q , i1 , i2 , i3 , i4 ; \n     cin >> q ; \n     while ( q -- ) \n     { \n         cin >> i1 >> i2 >> i3 ; \n         if ( i1 == 0 ) cout << getsum ( i2 , i3 , 1 , n , 1 ) << endl ; \n         else   cin >> i4 , update ( i2 , i3 , i4 , 1 , n , 1 ); \n     } \n     return   0 ;   }",
            "title": "(4) HihoCoder 1078 \u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u4fee\u6539"
        },
        {
            "location": "/data-structure/intermediate/treap/",
            "text": "",
            "title": "Treap"
        },
        {
            "location": "/data-structure/intermediate/sbt/",
            "text": "",
            "title": "SBT"
        },
        {
            "location": "/data-structure/intermediate/splay/",
            "text": "",
            "title": "Splay"
        },
        {
            "location": "/data-structure/intermediate/scapegoat/",
            "text": "",
            "title": "\u66ff\u7f6a\u7f8a\u6811"
        },
        {
            "location": "/data-structure/intermediate/virtual-tree/",
            "text": "\u5f15\u5b50\uff1aBZOJ - 2286 \u6d88\u8017\u6218\n\u00b6\n\n\nDescription\n\u00b6\n\n\n\u5728\u4e00\u573a\u6218\u4e89\u4e2d\uff0c\u6218\u573a\u7531n\u4e2a\u5c9b\u5c7f\u548cn-1\u4e2a\u6865\u6881\u7ec4\u6210\uff0c\u4fdd\u8bc1\u6bcf\u4e24\u4e2a\u5c9b\u5c7f\u95f4\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u8def\u5f84\u53ef\u8fbe\u3002\u73b0\u5728\uff0c\u6211\u519b\u5df2\u7ecf\u4fa6\u67e5\u5230\u654c\u519b\u7684\u603b\u90e8\u5728\u7f16\u53f7\u4e3a1\u7684\u5c9b\u5c7f\uff0c\u800c\u4e14\u4ed6\u4eec\u5df2\u7ecf\u6ca1\u6709\u8db3\u591f\u591a\u7684\u80fd\u6e90\u7ef4\u7cfb\u6218\u6597\uff0c\u6211\u519b\u80dc\u5229\u5728\u671b\u3002\u5df2\u77e5\u5728\u5176\u4ed6k\u4e2a\u5c9b\u5c7f\u4e0a\u6709\u4e30\u5bcc\u80fd\u6e90\uff0c\u4e3a\u4e86\u9632\u6b62\u654c\u519b\u83b7\u53d6\u80fd\u6e90\uff0c\u6211\u519b\u7684\u4efb\u52a1\u662f\u70b8\u6bc1\u4e00\u4e9b\u6865\u6881\uff0c\u4f7f\u5f97\u654c\u519b\u4e0d\u80fd\u5230\u8fbe\u4efb\u4f55\u80fd\u6e90\u4e30\u5bcc\u7684\u5c9b\u5c7f\u3002\u7531\u4e8e\u4e0d\u540c\u6865\u6881\u7684\u6750\u8d28\u548c\u7ed3\u6784\u4e0d\u540c\uff0c\u6240\u4ee5\u70b8\u6bc1\u4e0d\u540c\u7684\u6865\u6881\u6709\u4e0d\u540c\u7684\u4ee3\u4ef7\uff0c\u6211\u519b\u5e0c\u671b\u5728\u6ee1\u8db3\u76ee\u6807\u7684\u540c\u65f6\u4f7f\u5f97\u603b\u4ee3\u4ef7\u6700\u5c0f\u3002\n\n\n\u4fa6\u67e5\u90e8\u95e8\u8fd8\u53d1\u73b0\uff0c\u654c\u519b\u6709\u4e00\u53f0\u795e\u79d8\u673a\u5668\u3002\u5373\u4f7f\u6211\u519b\u5207\u65ad\u6240\u6709\u80fd\u6e90\u4e4b\u540e\uff0c\u4ed6\u4eec\u4e5f\u53ef\u4ee5\u7528\u90a3\u53f0\u673a\u5668\u3002\u673a\u5668\u4ea7\u751f\u7684\u6548\u679c\u4e0d\u4ec5\u4ec5\u4f1a\u4fee\u590d\u6240\u6709\u6211\u519b\u70b8\u6bc1\u7684\u6865\u6881\uff0c\u800c\u4e14\u4f1a\u91cd\u65b0\u968f\u673a\u8d44\u6e90\u5206\u5e03\uff08\u4f46\u53ef\u4ee5\u4fdd\u8bc1\u7684\u662f\uff0c\u8d44\u6e90\u4e0d\u4f1a\u5206\u5e03\u52301\u53f7\u5c9b\u5c7f\u4e0a\uff09\u3002\u4e0d\u8fc7\u4fa6\u67e5\u90e8\u95e8\u8fd8\u53d1\u73b0\u4e86\u8fd9\u53f0\u673a\u5668\u53ea\u80fd\u591f\u4f7f\u7528m\u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u628a\u6bcf\u6b21\u4efb\u52a1\u5b8c\u6210\u5373\u53ef\u3002\n\n\nInput\n\u00b6\n\n\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570n\uff0c\u4ee3\u8868\u5c9b\u5c7f\u6570\u91cf\u3002\n\n\n\u63a5\u4e0b\u6765n-1\u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u6574\u6570u,v,w\uff0c\u4ee3\u8868u\u53f7\u5c9b\u5c7f\u548cv\u53f7\u5c9b\u5c7f\u7531\u4e00\u6761\u4ee3\u4ef7\u4e3ac\u7684\u6865\u6881\u76f4\u63a5\u76f8\u8fde\uff0c\u4fdd\u8bc11<=u,v<=n\u4e141<=c<=100000\u3002\n\n\n\u7b2cn+1\u884c\uff0c\u4e00\u4e2a\u6574\u6570m\uff0c\u4ee3\u8868\u654c\u65b9\u673a\u5668\u80fd\u4f7f\u7528\u7684\u6b21\u6570\u3002\n\n\n\u63a5\u4e0b\u6765m\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6574\u6570ki\uff0c\u4ee3\u8868\u7b2ci\u6b21\u540e\uff0c\u6709ki\u4e2a\u5c9b\u5c7f\u8d44\u6e90\u4e30\u5bcc\uff0c\u63a5\u4e0b\u6765k\u4e2a\u6574\u6570h1,h2,\u2026hk\uff0c\u8868\u793a\u8d44\u6e90\u4e30\u5bcc\u5c9b\u5c7f\u7684\u7f16\u53f7\u3002\n\n\nOutput\n\u00b6\n\n\n\u8f93\u51fa\u6709m\u884c\uff0c\u5206\u522b\u4ee3\u8868\u6bcf\u6b21\u4efb\u52a1\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\nSample Input\n\u00b6\n\n\n10\n\n\n1\n \n5\n \n13\n\n\n1\n \n9\n \n6\n\n\n2\n \n1\n \n19\n\n\n2\n \n4\n \n8\n\n\n2\n \n3\n \n91\n\n\n5\n \n6\n \n8\n\n\n7\n \n5\n \n4\n\n\n7\n \n8\n \n31\n\n\n10\n \n7\n \n9\n\n\n3\n\n\n2\n \n10\n \n6\n\n\n4\n \n5\n \n7\n \n8\n \n3\n\n\n3\n \n9\n \n4\n \n6\n\n\n\n\n\nSample Output\n\u00b6\n\n\n12\n\n\n32\n\n\n22\n\n\n\n\n\nHINT\n\u00b6\n\n\n\u5bf9\u4e8e100%\u7684\u6570\u636e\uff0c2<=n<=250000,m>=1,sigma(ki)<=500000,1<=ki<=n-1\n\n\nSource\n\u00b6\n\n\nStage2 day2\n\n\n\u865a\u6811Virtual Tree\n\u00b6\n\n\n\u5bf9\u4e8e\u4e0a\u9762\u90a3\u9898\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u2014\u2014\u5982\u679c\u6811\u7684\u70b9\u6570\u5f88\u5c11\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8dd1Dp\u3002\n\n\n\u9996\u5148\u6211\u4eec\u79f0\u67d0\u6b21\u8be2\u95ee\u4e2d\u88ab\u9009\u4e2d\u7684\u70b9\u4e3a\u2014\u2014\n\u201c\u5173\u952e\u70b9\u201d\n\n\n\u8bbe\nDp[i]\nDp[i]\n\u8868\u793a\u2014\u2014\u4f7f\ni\ni\n\u4e0d\u4e0e\u5176\u5b50\u6811\u4e2d\u4efb\u610f\u4e00\u4e2a\u5173\u952e\u70b9\u8054\u901a\u7684\n\u6700\u5c0f\u4ee3\u4ef7\n\u3002\n\n\n\u8bbe\nw[a,b]\nw[a,b]\n\u8868\u793a\na\na\n\u4e0e\nb\nb\n\u4e4b\u95f4\u7684\u8fb9\u7684\u6743\u503c\n\n\n\u5219\uff1a\n\n\n\n\n\u82e5\nson[i]\nson[i]\n\u4e0d\u662f\u5173\u952e\u70b9\uff1a\nDp[i]=Dp[i] + min\\\\{Dp[son[i]],w[i,son[i]]\\\\}\nDp[i]=Dp[i] + min\\\\{Dp[son[i]],w[i,son[i]]\\\\}\n\n\n\u82e5\nson[i]\nson[i]\n\u662f\u5173\u952e\u70b9\uff1a\nDp[i]=Dp[i] + w[i,son[i]]\nDp[i]=Dp[i] + w[i,son[i]]\n\n\n\n\n\u5f88\u597d\uff0c\u8fd9\u6837\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4efd\nO(n\\times q)\nO(n\\times q)\n\u7684\u4ee3\u7801\n\n\n\u542c\u8d77\u6765\u5f88\u6709\u610f\u601d\n\n\n\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u2014\u2014\u5176\u5b9e\u5f88\u591a\u70b9\u662f\u6ca1\u6709\u7528\u7684\u3002\n\n\n\u6bd4\u5982\u4e0b\u56fe\uff1a\n\n\n\n\n\u56fe\u4e2d\u53ea\u6709\u4e24\u4e2a\u7ea2\u8272\u7684\u70b9\u662f\n\u5173\u952e\u70b9\n\uff0c\u800c\u522b\u7684\u9ed1\u8272\u7684\u70b9\u5168\u90fd\u662f\u201c\u975e\u5173\u952e\u70b9\u201d\u3002\u4e00\u53f7\u8282\u70b9\uff08\u654c\u4eba\u6240\u5728\u4e4b\u5904\uff09\u662f\u6811\u9876\u7684\u90a3\u4e2a\u6807\u4e861\u7684\u8282\u70b9\u3002\n\n\n\u5bf9\u4e8e\u8fd9\u9898\u6765\u8bf4\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u8bc1\u7ea2\u8272\u7684\u70b9\u65e0\u6cd5\u5230\u8fbe1\u53f7\u8282\u70b9\u5c31\u884c\u4e86\u3002\n\n\n\u901a\u8fc7\u8089\u773c\u89c2\u5bdf\u53ef\u4ee5\u5f97\u51fa\u7ed3\u8bba\u2014\u20141\u53f7\u8282\u70b9\u7684\u53f3\u5b50\u6811\uff08\u867d\u7136\u5b9e\u9645\u4e0a\u53ef\u80fd\u6709\u591a\u4e2a\u5b50\u6811\uff0c\u4f46\u8fd9\u91cc\u53ea\u6709\u4e24\u4e2a\u5b50\u6811\uff0c\u6240\u4ee5\u6682\u65f6\u8fd9\u4e48\u79f0\u547c\u4e86\uff09\u4e00\u4e2a\u7ea2\u8272\u8282\u70b9\u90fd\u6728\u6709\uff0c\n\u6240\u4ee5\u6ca1\u5fc5\u8981\u53bbDp\u5b83\n\uff0c\u4e0d\u662f\u5417\uff1f\n\n\n\u89c2\u5bdf\u9898\u76ee\u7ed9\u51fa\u7684\u6761\u4ef6\uff0c\u7ea2\u8272\u70b9\uff08\u5173\u952e\u70b9\uff09\u7684\u603b\u6570\u662f\u4e0e\nn\nn\n\u540c\u9636\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b9e\u9645\u4e0a\u4e00\u6b21\u8be2\u95ee\u4e2d\u7ea2\u8272\u7684\u70b9\u5bf9\u4e8e\u6574\u68f5\u6811\u6765\u8bf4\u662f\u5f88\u7a00\u758f\u7684\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u80fd\u8ba9\u590d\u6742\u5ea6\u7531\u7ea2\u8272\u70b9\u7684\u603b\u6570\u6765\u51b3\u5b9a\u5c31\u597d\u4e86\u3002\n\n\n\u56e0\u6b64\u6211\u4eec\u9700\u8981\n\u6d53\u7f29\u4fe1\u606f\uff0c\u628a\u4e00\u6574\u9897\u5927\u6811\u6d53\u7f29\u6210\u4e00\u9897\u5c0f\u6811\n\u3002\n\n\n\u7531\u6b64\u6211\u4eec\u5f15\u51fa\u4e86\n\u201c\u865a\u6811\u201d\n\u8fd9\u4e2a\u6982\u5ff5\u3002\n\n\n\u6211\u4eec\u5148\u76f4\u89c2\u5730\u6765\u770b\u770b\u865a\u6811\u7684\u6837\u5b50\u3002\n\n\n\u4e0b\u56fe\u4e2d\uff0c\u5de6\u8fb9\u4e3a\u539f\u6811\uff0c\u53f3\u8fb9\u4e3a\u751f\u6210\u7684\u65b0\u7684\u865a\u6811\u3002\n\n\n\n\n\n\n\n\n\n\n\u770b\u660e\u767d\u4e86\u5417\uff1f\n\n\n\u56e0\u4e3a\u4efb\u610f\u4e24\u4e2a\u5173\u952e\u70b9\u7684LCA\u4e5f\u662f\u9700\u8981\u4fdd\u5b58\u91cd\u8981\u4fe1\u606f\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4fdd\u5b58\u5b83\u4eec\u7684LCA\uff0c\u4e5f\u5c31\u662f\u865a\u6811\u4e2d\u4e0d\u4e00\u5b9a\u53ea\u6709\u5173\u952e\u70b9\n\n\n\u4e0d\u96be\u53d1\u73b0\u865a\u6811\u4e2d\u7956\u5148->\u540e\u4ee3\u7684\u5173\u7cfb\u5e76\u4e0d\u4f1a\u6539\u53d8\uff08\u5c31\u662f\u4e0d\u4f1a\u51fa\u73b0\u539f\u672c\na\na\n\u662f\nb\nb\n\u7684\u7956\u5148\u7ed3\u679c\u540e\u9762\na\na\n\u53d8\u6210\nb\nb\n\u7684\u540e\u4ee3\u4e86\u4e4b\u7c7b\u7684\u9b3c\u4e8b\uff09\n\n\n\u4f46\u6211\u4eec\u4e0d\u53ef\u80fd\nO(k^2)\nO(k^2)\n\u66b4\u529b\u679a\u4e3eLCA\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u96be\u60f3\u5230\u2014\u2014\u9996\u5148\u5c06\u5173\u952e\u70b9\u6309dfs\u5e8f\u6392\u5e8f\uff0c\u7136\u540e\u6392\u5b8c\u5e8f\u4ee5\u540e\u76f8\u90bb\u7684\u4e24\u4e2a\u5173\u952e\u70b9\uff08\u76f8\u90bb\u6307\u7684\u662f\u5728\u6392\u5e8f\u540e\u7684\u5e8f\u5217\u4e2d\u4e0b\u8868\u5dee\u503c\u7684\u7edd\u5bf9\u503c\u7b49\u4e8e1\uff09\u6c42\u4e00\u4e0b\nLCA\nLCA\n\uff0c\u5e76\u628a\u5b83\u52a0\u5165\u865a\u6811\u3002\n\n\n\u56e0\u4e3a\u53ef\u80fd\u591a\u4e2a\u8282\u70b9\u7684\nLCA\nLCA\n\u53ef\u80fd\u662f\u540c\u4e00\u4e2a\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u591a\u6b21\u5c06\u5b83\u52a0\u5165\u865a\u6811\u3002\n\n\n\u975e\u5e38\u76f4\u89c2\u7684\u4e00\u4e2a\u65b9\u6cd5\u662f\uff1a\n\n\n\n\n\u5c06\u5173\u952e\u70b9\u6309dfs\u5e8f\u6392\u5e8f\n\n\nfor\u4e00\u904d\uff0c\u4efb\u610f\u4e24\u4e2a\u76f8\u90bb\u7684\u5173\u952e\u70b9\u6c42\u4e00\u4e0b\nLCA\nLCA\n\uff0c\u5e76\u4e14\u54c8\u5e0c\u8868\u5224\u91cd\n\n\n\u7136\u540e\u6839\u636e\u539f\u6811\u4e2d\u7684\u7956\u5148->\u540e\u4ee3\u5173\u7cfb\u5efa\u6811\uff08\u7136\u800c\u6211\u5e76\u4e0d\u77e5\u9053\u600e\u4e48\u5efa\u6811\uff09\n\n\n\n\n\u3002\u3002\u3002\n\n\n\u611f\u89c9\u5f88\u4e0d\u53ef\u505a\u7684\u6837\u5b50\u3002<(=\u2518\uffe3\u0414\uffe3)\u2518\u2567\u2550\u2567\n\n\n\u6240\u4ee5\uff0c\u8fd9\u91cc\u6211\u4eec\u63d0\u51fa\u4e00\u79cd\u7528\u5355\u8c03\u6808\u7684\u505a\u6cd5\u3002\n\n\n\u5728\u63d0\u51fa\u65b9\u6848\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u786e\u8ba4\u4e00\u4e2a\u4e8b\u5b9e\u2014\u2014\u5728\u865a\u6811\u91cc\uff0c\u53ea\u8981\u4fdd\u8bc1\u7956\u5148->\u540e\u4ee3\u7684\u5173\u7cfb\u6ca1\u6709\u6539\u53d8\uff0c\u5c31\u53ef\u4ee5\u968f\u610f\u6dfb\u52a0\u8282\u70b9\u3002\n\n\n\u4e5f\u5c31\u662f\uff0c\u5982\u679c\u6211\u4eec\u4e50\u610f\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u539f\u6811\u4e2d\u6240\u6709\u7684\u70b9\u90fd\u52a0\u5165\u865a\u6811\u4e2d\uff0c\u4e5f\u4e0d\u4f1a\u5bfc\u81f4WA\uff08\u867d\u7136\u4f1a\u5bfc\u81f4TLE\uff09\n\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u4e3a\u4e86\u65b9\u4fbf\uff0c\u53ef\u4ee5\u9996\u5148\u5c06\n1\n1\n\u53f7\u8282\u70b9\u52a0\u5165\u865a\u6811\u4e2d\uff0c\u5e76\u4e14\u5e76\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\u3002\n\n\n\u597d\uff0c\u5f00\u59cb\u8bb2\u600e\u4e48\u7528\u5355\u8c03\u6808\u6765\u5efa\u7acb\u4e00\u9897\u865a\u6811\u5427\u3002\n\n\n\u9996\u5148\u6211\u4eec\u8981\u660e\u786e\u4e00\u4e2a\u76ee\u7684\u2014\u2014\u6211\u4eec\u8981\u7528\u5355\u8c03\u6808\u6765\u7ef4\u62a4\u4e00\u6761\u865a\u6811\u4e0a\u7684\u94fe\u3002\n\n\n\u4e5f\u5c31\u662f\u4e00\u4e2a\u6808\u91cc\u76f8\u90bb\u7684\u4e24\u4e2a\u8282\u70b9\u5728\u865a\u6811\u4e0a\u4e5f\u662f\u76f8\u90bb\u7684\uff0c\u800c\u4e14\u6808\u662f\u4ece\u5e95\u90e8\u5230\u6808\u9996\u5355\u8c03\u9012\u589e\u7684\uff08\u6307\u7684\u662f\u6808\u4e2d\u8282\u70b9Dfs\u5e8f\u5355\u8c03\u9012\u589e\uff09\uff0c\u8bf4\u767d\u4e86\u5c31\u662f\u67d0\u4e2a\u8282\u70b9\u7684\u7236\u4eb2\u5c31\u662f\u6808\u4e2d\u5b83\u4e0b\u9762\u7684\u90a3\u4e2a\u8282\u70b9\u3002\n\n\n\n\n\u9996\u5148\u6211\u4eec\u5728\u6808\u4e2d\u6dfb\u52a0\u8282\u70b9\n1\n1\n\n\n\u7136\u540e\u63a5\u4e0b\u6765\u6309\u7167Dfs\u5e8f\u4ece\u5c0f\u5230\u8fbe\u6dfb\u52a0\u5173\u952e\u8282\u70b9\u3002\n\n\n\u5047\u5982\u5f53\u524d\u7684\u8282\u70b9\u4e0e\u6808\u9876\u8282\u70b9\u7684\nLCA\nLCA\n\u5c31\u662f\u6808\u9876\u8282\u70b9\u7684\u8bdd\uff0c\u5219\u8bf4\u660e\u5b83\u4eec\u662f\u5728\u4e00\u6761\u94fe\u4e0a\u7684\u3002\u6240\u4ee5\u76f4\u63a5\u628a\u5f53\u524d\u8282\u70b9\u5165\u6808\u5c31\u884c\u4e86\u3002\n\n\n\n\n\u5047\u5982\u5f53\u524d\u8282\u70b9\u4e0e\u6808\u9876\u8282\u70b9\u7684\nLCA\nLCA\n\u4e0d\u662f\u6808\u9876\u8282\u70b9\u7684\u8bdd\uff0c\u6bd4\u5982\u8fd9\u6837\u2014\u2014\n\n\n\n\n\u90a3\u5c31\uff0c\uff0c\u975e\u5e38\u5c34\u5c2c\u4e86\n\n\n\u663e\u7136\uff0c\u5f53\u524d\u5355\u8c03\u6808\u7ef4\u62a4\u7684\u94fe\u662f\uff1a\n\n\n\n\n\u800c\u6211\u4eec\u9700\u8981\u628a\u94fe\u53d8\u6210\uff1a\n\n\n\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u865a\u6811\u4e2d\u8fde\u4e0a\u8fd9\u4e9b\u8fb9\uff1a\n\n\n\n\n\u5e76\u4e14\u628a\u8fd9\u4e24\u4e2a\u70b9\u4ece\u6808\u4e2d\u5f39\u51fa\uff1a\n\n\n\n\n\u5047\u5982\u5f39\u51fa\u4ee5\u540e\u53d1\u73b0\u6808\u9996\u4e0d\u662f\nLCA\nLCA\n\u7684\u8bdd\u8981\u8ba9\nLCA\nLCA\n\u5165\u6808\u3002\n\n\n\u518d\u628a\u5f53\u524d\u8282\u70b9\u5165\u6808\u5c31\u884c\u4e86\u3002\n\n\n\u6253\u4e2a\u6bd4\u65b9\u5427\u3002\n\n\n\u5047\u5982\u90a3\u68f5\u6811\u957f\u8fd9\u6837\uff1a\n\n\n\n\n\u90a3\u4e48\u6b65\u9aa4\u662f\u8fd9\u6837\u7684\uff1a\n\n\n\n\n\u5c063\u4e2a\u5173\u952e\u70b9\n6,4,7\n6,4,7\n\uff08\u6211\u6545\u610f\u6253\u4e71\u4e86\uff09\u6309\u7167dfs\u5e8f\u6392\u5e8f\uff0c\u5f97\u5230\u5e8f\u5217\n4,6,7\n4,6,7\n\n\n\u5c06\u70b9\n1\n1\n\u5165\u6808\n\n\n\u53d6\u5e8f\u5217\u7b2c\u4e00\u4e2a\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\uff0c\u4e3a\n4\u200b\n4\u200b\n\u3002\u518d\u53d6\u6808\u9876\u5143\u7d20\uff0c\u4e3a\n1\u200b\n1\u200b\n\u3002\u6c42\n1\u200b\n1\u200b\n\u548c\n4\u200b\n4\u200b\n\u7684\nLCA\u200b\nLCA\u200b\n\uff1a\nLCA(1,4)=1\u200b\nLCA(1,4)=1\u200b\n\u3002\n\n\n\u53d1\u73b0\nLCA(1,4)=\nLCA(1,4)=\n\u6808\u9876\u5143\u7d20\uff0c\u8bf4\u660e\u5b83\u4eec\u5728\u865a\u6811\u7684\u4e00\u6761\u94fe\u4e0a\uff0c\u6240\u4ee5\u76f4\u63a5\u628a\u5f53\u524d\u8282\u70b9\n4\n4\n\u5165\u6808\uff0c\u5f53\u524d\u6808\u4e3a\n4,1\n4,1\n\n\n\u53d6\u5e8f\u5217\u7b2c\u4e8c\u4e2a\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\uff0c\u4e3a\n6\n6\n\u3002\u518d\u53d6\u6808\u9876\u5143\u7d20\uff0c\u4e3a\n4\n4\n\u3002\u6c42\n6\n6\n\u548c\n4\n4\n\u7684\nLCA\nLCA\n\uff1a\nLCA(6,4)=1\nLCA(6,4)=1\n\u3002\n\n\n\u53d1\u73b0\nLCA(6,4)!=\nLCA(6,4)!=\n\u6808\u9876\u5143\u7d20\uff0c\u8fdb\u5165\u5224\u65ad\u9636\u6bb5\u3002\n\n\n\u5224\u65ad\u9636\u6bb5\uff1a\u53d1\u73b0\u6808\u9876\u8282\u70b9\n4\n4\n\u7684Dfs\u5e8f\u662f\u5927\u4e8e\nLCA(6,4)\nLCA(6,4)\n\u7684\uff0c\u4f46\u662f\u6b21\u5927\u8282\u70b9\uff08\u6808\u9876\u8282\u70b9\u4e0b\u9762\u7684\u90a3\u4e2a\u8282\u70b9\uff09\n1\n1\n\u7684Dfs\u5e8f\u662f\u7b49\u4e8e\nLCA\nLCA\n\u7684\uff08\u5176\u5b9eDfs\u5e8f\u76f8\u7b49\u8bf4\u660e\u8282\u70b9\u4e5f\u76f8\u7b49\uff09\uff0c\u8bf4\u660e\nLCA\nLCA\n\u5df2\u7ecf\u5165\u6808\u4e86\uff0c\u6240\u4ee5\u76f4\u63a5\u8fde\u63a5\n1->4\n1->4\n\u7684\u8fb9\uff0c\u4e5f\u5c31\u662f\nLCA\nLCA\n\u5230\u6808\u9876\u5143\u7d20\u7684\u8fb9\u3002\u5e76\u628a\n4\n4\n\u4ece\u6808\u4e2d\u5f39\u51fa\u3002\n\n\n\u7ed3\u675f\u4e86\u5224\u65ad\u9636\u6bb5\uff0c\u5c06\n6\n6\n\u5165\u6808\uff0c\u5f53\u524d\u6808\u4e3a\n6,1\n6,1\n\n\n\u53d6\u5e8f\u5217\u7b2c\u4e09\u4e2a\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\uff0c\u4e3a\n7\n7\n\u3002\u518d\u53d6\u6808\u9876\u5143\u7d20\uff0c\u4e3a\n6\n6\n\u3002\u6c42\n7\n7\n\u548c\n6\n6\n\u7684\nLCA\nLCA\n\uff1a\nLCA(7,6)=3\nLCA(7,6)=3\n\u3002\n\n\n\u53d1\u73b0\nLCA(7,6)!=\nLCA(7,6)!=\n\u6808\u9876\u5143\u7d20\uff0c\u8fdb\u5165\u5224\u65ad\u9636\u6bb5\u3002\n\n\n\u5224\u65ad\u9636\u6bb5\uff1a\u53d1\u73b0\u6808\u9876\u8282\u70b9\n6\n6\n\u7684Dfs\u5e8f\u662f\u5927\u4e8e\nLCA(7,6)\nLCA(7,6)\n\u7684\uff0c\u4f46\u662f\u6b21\u5927\u8282\u70b9\uff08\u6808\u9876\u8282\u70b9\u4e0b\u9762\u7684\u90a3\u4e2a\u8282\u70b9\uff09\n1\n1\n\u7684Dfs\u5e8f\u662f\u5c0f\u4e8e\nLCA\nLCA\n\u7684\uff0c\u8bf4\u660e\nLCA\nLCA\n\u8fd8\u6ca1\u6709\u5165\u8fc7\u6808\uff0c\u6240\u4ee5\u76f4\u63a5\u8fde\u63a5\n3->6\n3->6\n\u7684\u8fb9\uff0c\u4e5f\u5c31\u662f\nLCA\nLCA\n\u5230\u6808\u9876\u5143\u7d20\u7684\u8fb9\u3002\u628a\n6\n6\n\u4ece\u6808\u4e2d\u5f39\u51fa\uff0c\u5e76\u4e14\u628a\nLCA(6,7)\nLCA(6,7)\n\u5165\u6808\u3002\n\n\n\u7ed3\u675f\u4e86\u5224\u65ad\u9636\u6bb5\uff0c\u5c06\n7\n7\n\u5165\u6808\uff0c\u5f53\u524d\u6808\u4e3a\n3,7\n3,7\n\n\n\u53d1\u73b0\u5e8f\u5217\u91cc\u76842\u4e2a\u8282\u70b9\u5df2\u7ecf\u5168\u90e8\u52a0\u5165\u8fc7\u6808\u4e86\uff0c\u9000\u51fa\u5faa\u73af\u3002\n\n\n\u6b64\u65f6\u6808\u4e2d\u8fd8\u67092\u4e2a\u8282\u70b9\uff1a\n3,7\n3,7\n\uff0c\u5f88\u660e\u663e\u5b83\u4eec\u662f\u4e00\u6761\u94fe\u4e0a\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u94fe\u63a5\uff1a\n3->7\n3->7\n\u7684\u8fb9\n\n\n\u865a\u6811\u5c31\u5efa\u5b8c\u5566\uff01\n\n\n\n\n\u5176\u4e2d\u6709\u5f88\u591a\u7ec6\u8282\uff0c\u6bd4\u5982\u6211\u662f\u7528\u4e34\u63a5\u8868\u5b58\u56fe\u7684\u65b9\u5f0f\u5b58\u865a\u6811\u7684\uff0c\u6240\u4ee5\u9700\u8981\u6e05\u7a7a\u4e34\u63a5\u8868\u3002\u4f46\u662f\u76f4\u63a5\u6e05\u7a7a\u6574\u4e2a\u4e34\u63a5\u8868\u662f\u5f88\u6162\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5728\n\u6709\u4e00\u4e2a\u4ece\u672a\u5165\u6808\u7684\u5143\u7d20\u5165\u6808\u7684\u65f6\u5019\u6e05\u7a7a\u8be5\u5143\u7d20\u5bf9\u5e94\u7684\u4e34\u63a5\u8868\n\u5373\u53ef\u3002\n\n\n\u5efa\u7acb\u865a\u6811\u7684C++\u4ee3\u7801\u5927\u6982\u957f\u8fd9\u6837\uff1a\n\n\nsort\n(\nh\n \n+\n \n1\n,\n \nh\n \n+\n \n1\n \n+\n \nk\n,\n \ncmp\n);\n\n\nsta\n[\ntop\n \n=\n \n1\n]\n \n=\n \n1\n,\n \ng\n.\nsz\n \n=\n \n0\n,\n \ng\n.\nhead\n[\n1\n]\n \n=\n \n-\n1\n;\n\n\n//1\u53f7\u8282\u70b9\u5165\u6808\uff0c\u6e05\u7a7a1\u53f7\u8282\u70b9\u5bf9\u5e94\u7684\u4e34\u63a5\u8868\uff0c\u8bbe\u7f6e\u4e34\u63a5\u8868\u8fb9\u6570\u4e3a1\n\n\nfor\n \n(\nint\n \ni\n \n=\n \n1\n,\n \nl\n;\n \ni\n \n<=\n \nk\n;\n \ni\n \n+=\n \n1\n)\n \nif\n \n(\nh\n[\ni\n]\n \n!=\n \n1\n)\n//\u5982\u679c1\u53f7\u8282\u70b9\u662f\u5173\u952e\u8282\u70b9\u5c31\u4e0d\u8981\u91cd\u590d\u6dfb\u52a0\n\n\n{\n\n  \nl\n \n=\n \nlca\n(\nh\n[\ni\n],\n \nsta\n[\ntop\n]);\n//\u8ba1\u7b97\u5f53\u524d\u8282\u70b9\u4e0e\u6808\u9876\u8282\u70b9\u7684LCA\n\n  \nif\n \n(\nl\n \n!=\n \nsta\n[\ntop\n])\n//\u5982\u679cLCA\u548c\u6808\u9876\u5143\u7d20\u4e0d\u540c\uff0c\u5219\u8bf4\u660e\u5f53\u524d\u8282\u70b9\u4e0d\u518d\u5f53\u524d\u6808\u6240\u5b58\u7684\u94fe\u4e0a\n\n  \n{\n\n    \nwhile\n \n(\nid\n[\nl\n]\n \n<\n \nid\n[\nsta\n[\ntop\n \n-\n \n1\n]])\n//\u5f53\u6b21\u5927\u8282\u70b9\u7684Dfs\u5e8f\u5c0f\u4e8eLCA\u7684Dfs\u5e8f\n\n      \ng\n.\npush\n(\nsta\n[\ntop\n \n-\n \n1\n],\n \nsta\n[\ntop\n]),\n \ntop\n--\n;\n//\u628a\u4e0e\u5f53\u524d\u8282\u70b9\u6240\u5728\u7684\u94fe\u4e0d\u91cd\u5408\u7684\u94fe\u8fde\u63a5\u6389\u5e76\u4e14\u5f39\u51fa\n\n    \nif\n \n(\nid\n[\nl\n]\n \n>\n \nid\n[\nsta\n[\ntop\n \n-\n \n1\n]])\n//\u5982\u679cLCA\u4e0d\u7b49\u4e8e\u6b21\u5927\u8282\u70b9\uff08\u8fd9\u91cc\u7684\u5927\u4e8e\u5176\u5b9e\u548c\u4e0d\u7b49\u4e8e\u6ca1\u6709\u533a\u522b\uff09\n\n      \ng\n.\nhead\n[\nl\n]\n \n=\n \n-\n1\n,\n \ng\n.\npush\n(\nl\n,\n \nsta\n[\ntop\n]),\n \nsta\n[\ntop\n]\n \n=\n \nl\n;\n\n    \n//\u8bf4\u660eLCA\u662f\u7b2c\u4e00\u6b21\u5165\u6808\uff0c\u6e05\u7a7a\u5176\u4e34\u63a5\u8868\uff0c\u8fde\u8fb9\u540e\u5f39\u51fa\u6808\u9876\u5143\u7d20\uff0c\u5e76\u5c06LCA\u5165\u6808\n\n    \nelse\n \ng\n.\npush\n(\nl\n,\n \nsta\n[\ntop\n--\n]);\n//\u8bf4\u660eLCA\u5c31\u662f\u6b21\u5927\u8282\u70b9\uff0c\u76f4\u63a5\u5f39\u51fa\u6808\u9876\u5143\u7d20\n\n  \n}\n\n  \ng\n.\nhead\n[\nh\n[\ni\n]]\n \n=\n \n-\n1\n,\n \nsta\n[\n++\ntop\n]\n \n=\n \nh\n[\ni\n];\n//\u5f53\u524d\u8282\u70b9\u5fc5\u7136\u662f\u7b2c\u4e00\u6b21\u5165\u6808\uff0c\u6e05\u7a7a\u4e34\u63a5\u8868\u5e76\u5165\u6808\n\n\n}\n\n\nfor\n \n(\nint\n \ni\n \n=\n \n1\n;\n \ni\n \n<\n \ntop\n;\n \ni\n \n+=\n \n1\n)\n \ng\n.\npush\n(\nsta\n[\ni\n],\n \nsta\n[\ni\n \n+\n \n1\n]);\n//\u5269\u4f59\u7684\u6700\u540e\u4e00\u6761\u94fe\u8fde\u63a5\u4e00\u4e0b\n\n\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u5b66\u4f1a\u4e86\u865a\u6811\u7684\u5efa\u7acb\u4e86\uff01\n\n\n\u5bf9\u4e8e\u6d88\u8017\u6218\u8fd9\u9898\uff0c\u76f4\u63a5\u5728\u865a\u6811\u4e0a\u8dd1\u6700\u5f00\u59cb\u8bb2\u7684\u90a3\u4e2a\nDp\nDp\n\u5c31\u884c\u4e86\uff0c\u6211\u4eec\u7b49\u4e8e\u5229\u7528\u4e86\u865a\u6811\u6392\u9664\u4e86\u90a3\u4e9b\u6ca1\u7528\u7684\u975e\u5173\u952e\u8282\u70b9\uff01\n\n\n\n\n\u82e5\nson[i]\nson[i]\n\u4e0d\u662f\u5173\u952e\u70b9\uff1a\nDp[i]=Dp[i] + min\\{Dp[son[i]],w[i,son[i]]\\}\nDp[i]=Dp[i] + min\\{Dp[son[i]],w[i,son[i]]\\}\n\n\n\u82e5\nson[i]\nson[i]\n\u662f\u5173\u952e\u70b9\uff1a\nDp[i]=Dp[i] + w[i,son[i]]\nDp[i]=Dp[i] + w[i,son[i]]\n\n\n\n\n\u4e8e\u662f\u8fd9\u9898\u5f88\u7b80\u5355\u5c31\u8fc7\u4e86\u3002\n\n\n\u4ee3\u7801\u770b\u4e0b\u9762\u3002\n\n\n\u63a8\u8350\u4e60\u9898\n\u00b6\n\n\nBZOJ - 2286 \u6d88\u8017\u6218\n\u00b6\n\n\n\u4ee3\u7801\uff1a\n\n\n#include\n \n<bits/stdc++.h>\n\n\n\n#define NS (250005)\n\n\n#define LGS (18)\n\n\n\nusing\n \nnamespace\n \nstd\n;\n\n\n\ntypedef\n \nlong\n \nlong\n \nLL\n;\n\n\n\ntemplate\n \n<\ntypename\n \n_Tp\n>\n \ninline\n \nvoid\n \nIN\n(\n_Tp\n&\n \ndig\n)\n\n\n{\n\n    \nchar\n \nc\n;\n \nbool\n \nflag\n \n=\n \n0\n;\n \ndig\n \n=\n \n0\n;\n\n    \nwhile\n \n(\nc\n \n=\n \ngetchar\n(),\n \n!\nisdigit\n(\nc\n))\n \nif\n \n(\nc\n \n==\n \n'-'\n)\n \nflag\n \n=\n \n1\n;\n\n    \nwhile\n \n(\nisdigit\n(\nc\n))\n \ndig\n \n=\n \ndig\n \n*\n \n10\n \n+\n \nc\n \n-\n \n'0'\n,\n \nc\n \n=\n \ngetchar\n();\n\n    \nif\n \n(\nflag\n)\n \ndig\n \n=\n \n-\ndig\n;\n\n\n}\n\n\n\nstruct\n \ngraph\n\n\n{\n\n    \nint\n \nhead\n[\nNS\n],\n \nnxt\n[\nNS\n \n<<\n \n1\n],\n \nto\n[\nNS\n \n<<\n \n1\n],\n \nw\n[\nNS\n \n<<\n \n1\n],\n \nsz\n;\n\n    \nvoid\n \ninit\n(){\nmemset\n(\nhead\n,\n \n-\n1\n,\n \nsizeof\n(\nhead\n)),\n \nsz\n \n=\n \n0\n;}\n\n    \ngraph\n(){\ninit\n();}\n\n    \nvoid\n \npush\n(\nint\n \na\n,\n \nint\n \nb\n,\n \nint\n \nc\n)\n\n    \n{\n\n        \nnxt\n[\nsz\n]\n \n=\n \nhead\n[\na\n],\n \nto\n[\nsz\n]\n \n=\n \nb\n,\n \nw\n[\nsz\n]\n \n=\n \nc\n,\n \nhead\n[\na\n]\n \n=\n \nsz\n++\n;\n\n    \n}\n\n    \nint\n&\n \noperator\n \n[]\n \n(\nconst\n \nint\n \na\n){\nreturn\n \nto\n[\na\n];}\n\n\n}\ng\n;\n\n\n\nint\n \nn\n,\n \npre\n[\nNS\n][\nLGS\n \n+\n \n1\n],\n \ndep\n[\nNS\n],\n \nmx\n[\nNS\n][\nLGS\n \n+\n \n1\n],\n \nid\n[\nNS\n],\n \ndfn\n;\n\n\n\nint\n \nm\n,\n \nk\n,\n \nh\n[\nNS\n],\n \nsta\n[\nNS\n],\n \ntop\n,\n \nMX\n;\n\n\n\nLL\n \nf\n[\nNS\n];\n\n\n\nbool\n \nbook\n[\nNS\n];\n\n\n\nvoid\n \nInit\n(\nint\n \na\n,\n \nint\n \nfa\n)\n\n\n{\n\n    \npre\n[\na\n][\n0\n]\n \n=\n \nfa\n,\n \ndep\n[\na\n]\n \n=\n \ndep\n[\nfa\n]\n \n+\n \n1\n,\n \nid\n[\na\n]\n \n=\n \n++\ndfn\n;\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \n1\n;\n \ni\n \n<=\n \nLGS\n;\n \ni\n \n+=\n \n1\n)\n\n    \n{\n\n        \npre\n[\na\n][\ni\n]\n \n=\n \npre\n[\npre\n[\na\n][\ni\n \n-\n \n1\n]][\ni\n \n-\n \n1\n];\n\n        \nmx\n[\na\n][\ni\n]\n \n=\n \nmin\n(\nmx\n[\na\n][\ni\n \n-\n \n1\n],\n \nmx\n[\npre\n[\na\n][\ni\n \n-\n \n1\n]][\ni\n \n-\n \n1\n]);\n\n    \n}\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \ng\n.\nhead\n[\na\n];\n \n~\ni\n;\n \ni\n \n=\n \ng\n.\nnxt\n[\ni\n])\n\n        \nif\n \n(\ng\n[\ni\n]\n \n!=\n \nfa\n)\n \nmx\n[\ng\n[\ni\n]][\n0\n]\n \n=\n \ng\n.\nw\n[\ni\n],\n \nInit\n(\ng\n[\ni\n],\n \na\n);\n\n\n}\n\n\n\nint\n \nlca\n(\nint\n \na\n,\n \nint\n \nb\n)\n\n\n{\n\n    \nMX\n \n=\n \nINT_MAX\n;\n\n    \nif\n \n(\ndep\n[\na\n]\n \n>\n \ndep\n[\nb\n])\n \nswap\n(\na\n,\n \nb\n);\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \nLGS\n;\n \ni\n \n>=\n \n0\n;\n \ni\n \n-=\n \n1\n)\n\n        \nif\n \n(\ndep\n[\npre\n[\nb\n][\ni\n]]\n \n>=\n \ndep\n[\na\n])\n\n            \nMX\n \n=\n \nmin\n(\nMX\n,\n \nmx\n[\nb\n][\ni\n]),\n \nb\n \n=\n \npre\n[\nb\n][\ni\n];\n\n    \nif\n \n(\na\n \n==\n \nb\n)\n \nreturn\n \na\n;\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \nLGS\n;\n \ni\n \n>=\n \n0\n;\n \ni\n \n-=\n \n1\n)\n\n        \nif\n \n(\npre\n[\na\n][\ni\n]\n \n!=\n \npre\n[\nb\n][\ni\n])\n\n        \n{\n\n            \nMX\n \n=\n \nmin\n(\nMX\n,\n \nmin\n(\nmx\n[\na\n][\ni\n],\n \nmx\n[\nb\n][\ni\n]));\n\n            \na\n \n=\n \npre\n[\na\n][\ni\n],\n \nb\n \n=\n \npre\n[\nb\n][\ni\n];\n\n        \n}\n\n    \nreturn\n \npre\n[\na\n][\n0\n];\n\n\n}\n\n\n\nbool\n \ncmp\n(\nint\n \na\n,\n \nint\n \nb\n){\nreturn\n \nid\n[\na\n]\n \n<\n \nid\n[\nb\n];}\n\n\n\nvoid\n \nDp\n(\nint\n \na\n)\n\n\n{\n\n    \nf\n[\na\n]\n \n=\n \n0\n;\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \ng\n.\nhead\n[\na\n];\n \n~\ni\n;\n \ni\n \n=\n \ng\n.\nnxt\n[\ni\n])\n\n    \n{\n\n        \nDp\n(\ng\n[\ni\n]);\n\n        \nif\n \n(\nbook\n[\ng\n[\ni\n]])\n \nf\n[\na\n]\n \n+=\n \ng\n.\nw\n[\ni\n];\n\n        \nelse\n \nf\n[\na\n]\n \n+=\n \nmin\n((\nLL\n)\ng\n.\nw\n[\ni\n],\n \nf\n[\ng\n[\ni\n]]);\n\n    \n}\n\n\n}\n\n\n\nint\n \nmain\n \n(\nint\n \nargc\n,\n \nchar\n \nconst\n*\n \nargv\n[])\n\n\n{\n\n    \nIN\n(\nn\n);\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \n1\n,\n \na\n,\n \nb\n,\n \nc\n;\n \ni\n \n<\n \nn\n;\n \ni\n \n+=\n \n1\n)\n\n        \nIN\n(\na\n),\n \nIN\n(\nb\n),\n \nIN\n(\nc\n),\n \ng\n.\npush\n(\na\n,\n \nb\n,\n \nc\n),\n \ng\n.\npush\n(\nb\n,\n \na\n,\n \nc\n);\n\n    \nInit\n(\n1\n,\n \n0\n),\n \nIN\n(\nm\n);\n\n    \nwhile\n \n(\nm\n--\n)\n\n    \n{\n\n        \nIN\n(\nk\n);\n\n        \nfor\n \n(\nint\n \ni\n \n=\n \n1\n;\n \ni\n \n<=\n \nk\n;\n \ni\n \n+=\n \n1\n)\n \nIN\n(\nh\n[\ni\n]),\n \nbook\n[\nh\n[\ni\n]]\n \n=\n \n1\n;\n\n        \nsort\n(\nh\n \n+\n \n1\n,\n \nh\n \n+\n \n1\n \n+\n \nk\n,\n \ncmp\n);\n\n        \nsta\n[\ntop\n \n=\n \n1\n]\n \n=\n \n1\n,\n \ng\n.\nsz\n \n=\n \n0\n,\n \ng\n.\nhead\n[\n1\n]\n \n=\n \n-\n1\n;\n\n        \nfor\n \n(\nint\n \ni\n \n=\n \n1\n,\n \nl\n;\n \ni\n \n<=\n \nk\n;\n \ni\n \n+=\n \n1\n)\n \nif\n \n(\nh\n[\ni\n]\n \n!=\n \n1\n)\n\n        \n{\n\n            \nl\n \n=\n \nlca\n(\nsta\n[\ntop\n],\n \nh\n[\ni\n]);\n\n            \nif\n \n(\nl\n \n!=\n \nsta\n[\ntop\n])\n\n            \n{\n\n                \nwhile\n \n(\nid\n[\nl\n]\n \n<\n \nid\n[\nsta\n[\ntop\n \n-\n \n1\n]])\n\n                \n{\n\n                    \nlca\n(\nsta\n[\ntop\n \n-\n \n1\n],\n \nsta\n[\ntop\n]);\n\n                    \ng\n.\npush\n(\nsta\n[\ntop\n \n-\n \n1\n],\n \nsta\n[\ntop\n],\n \nMX\n);\n\n                    \ntop\n--\n;\n\n                \n}\n\n                \nif\n \n(\nid\n[\nl\n]\n \n>\n \nid\n[\nsta\n[\ntop\n \n-\n \n1\n]])\n\n                \n{\n\n                    \ng\n.\nhead\n[\nl\n]\n \n=\n \n-\n1\n \n,\nlca\n(\nl\n,\n \nsta\n[\ntop\n]);\n\n                    \ng\n.\npush\n(\nl\n,\n \nsta\n[\ntop\n],\n \nMX\n),\n \nsta\n[\ntop\n]\n \n=\n \nl\n;\n\n                \n}\n\n                \nelse\n \nlca\n(\nl\n,\n \nsta\n[\ntop\n]),\n \ng\n.\npush\n(\nl\n,\n \nsta\n[\ntop\n--\n],\n \nMX\n);\n\n            \n}\n\n            \ng\n.\nhead\n[\nh\n[\ni\n]]\n \n=\n \n-\n1\n,\n \nsta\n[\n++\ntop\n]\n \n=\n \nh\n[\ni\n];\n\n        \n}\n\n        \nfor\n \n(\nint\n \ni\n \n=\n \n1\n;\n \ni\n \n<\n \ntop\n;\n \ni\n \n+=\n \n1\n)\n\n            \nlca\n(\nsta\n[\ni\n],\n \nsta\n[\ni\n \n+\n \n1\n]),\n \ng\n.\npush\n(\nsta\n[\ni\n],\n \nsta\n[\ni\n \n+\n \n1\n],\n \nMX\n);\n\n        \nDp\n(\n1\n),\n \nprintf\n(\n\"%lld\n\\n\n\"\n,\n \nf\n[\n1\n]);\n\n        \nfor\n \n(\nint\n \ni\n \n=\n \n1\n;\n \ni\n \n<=\n \nk\n;\n \ni\n \n+=\n \n1\n)\n \nbook\n[\nh\n[\ni\n]]\n \n=\n \n0\n;\n\n    \n}\n\n    \nreturn\n \n0\n;\n\n\n}\n\n\n\n\n\nBZOJ - 3611 \u5927\u5de5\u7a0b\n\u00b6\n\n\n\u4ee3\u7801\uff1a\n\n\n#include\n \n<bits/stdc++.h>\n\n\n\n#define NS (1000005)\n\n\n#define LGS (20)\n\n\n\n#define INF (100000000)\n\n\n\nusing\n \nnamespace\n \nstd\n;\n\n\n\ntypedef\n \nlong\n \nlong\n  \nLL\n;\n\n\n\ntemplate\n \n<\ntypename\n \n_Tp\n>\n \ninline\n \nvoid\n \nIN\n(\n_Tp\n&\n \ndig\n)\n\n\n{\n\n    \nchar\n \nc\n;\n \nbool\n \nflag\n \n=\n \n0\n;\n \ndig\n \n=\n \n0\n;\n\n    \nwhile\n \n(\nc\n \n=\n \ngetchar\n(),\n \n!\nisdigit\n(\nc\n))\n \nif\n \n(\nc\n \n==\n \n'-'\n)\n \nflag\n \n=\n \n1\n;\n\n    \nwhile\n \n(\nisdigit\n(\nc\n))\n \ndig\n \n=\n \ndig\n \n*\n \n10\n \n+\n \nc\n \n-\n \n'0'\n,\n \nc\n \n=\n \ngetchar\n();\n\n    \nif\n \n(\nflag\n)\n \ndig\n \n=\n \n-\ndig\n;\n\n\n}\n\n\n\nstruct\n \ngraph\n\n\n{\n\n    \nint\n \nhead\n[\nNS\n],\n \nnxt\n[\nNS\n \n<<\n \n1\n],\n \nto\n[\nNS\n \n<<\n \n1\n],\n \nsz\n;\n\n    \nvoid\n \ninit\n(){\nmemset\n(\nhead\n,\n \n-\n1\n,\n \nsizeof\n(\nhead\n)),\n \nsz\n \n=\n \n0\n;}\n\n    \ngraph\n(){\ninit\n();}\n\n    \nvoid\n \npush\n(\nint\n \na\n,\n \nint\n \nb\n)\n\n    \n{\n\n        \nnxt\n[\nsz\n]\n \n=\n \nhead\n[\na\n],\n \nto\n[\nsz\n]\n \n=\n \nb\n,\n \nhead\n[\na\n]\n \n=\n \nsz\n++\n;\n\n    \n}\n\n    \nint\n \noperator\n \n[]\n \n(\nconst\n \nint\n \na\n){\nreturn\n \nto\n[\na\n];}\n\n\n}\ng\n;\n\n\n\nint\n \nn\n,\n \nid\n[\nNS\n],\n \ndfn\n,\n \nq\n,\n \nk\n,\n \nh\n[\nNS\n],\n \nsz\n[\nNS\n],\n \nmn\n[\nNS\n],\n \nmx\n[\nNS\n],\n \nmnans\n,\n \nmxans\n;\n\n\n\nint\n \npre\n[\nNS\n][\nLGS\n \n+\n \n1\n],\n \ndep\n[\nNS\n];\n\n\n\nint\n \nsta\n[\nNS\n],\n \ntop\n;\n\n\n\nbool\n \nbook\n[\nNS\n];\n\n\n\nLL\n \nf\n[\nNS\n],\n \ntot\n;\n\n\n\nvoid\n \nInit\n(\nint\n \na\n,\n \nint\n \nfa\n)\n\n\n{\n\n    \npre\n[\na\n][\n0\n]\n \n=\n \nfa\n,\n \ndep\n[\na\n]\n \n=\n \ndep\n[\nfa\n]\n \n+\n \n1\n,\n \nid\n[\na\n]\n \n=\n \n++\ndfn\n;\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \n1\n;\n \ni\n \n<=\n \nLGS\n;\n \ni\n \n+=\n \n1\n)\n\n        \npre\n[\na\n][\ni\n]\n \n=\n \npre\n[\npre\n[\na\n][\ni\n \n-\n \n1\n]][\ni\n \n-\n \n1\n];\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \ng\n.\nhead\n[\na\n];\n \n~\ni\n;\n \ni\n \n=\n \ng\n.\nnxt\n[\ni\n])\n\n        \nif\n \n(\ng\n[\ni\n]\n \n!=\n \nfa\n)\n \nInit\n(\ng\n[\ni\n],\n \na\n);\n\n\n}\n\n\n\nint\n \nlca\n(\nint\n \na\n,\n \nint\n \nb\n)\n\n\n{\n\n    \nif\n \n(\ndep\n[\na\n]\n \n>\n \ndep\n[\nb\n])\n \nswap\n(\na\n,\nb\n);\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \nLGS\n;\n \ni\n \n>=\n \n0\n;\n \ni\n \n-=\n \n1\n)\n\n        \nif\n \n(\ndep\n[\npre\n[\nb\n][\ni\n]]\n \n>=\n \ndep\n[\na\n])\n\n            \nb\n \n=\n \npre\n[\nb\n][\ni\n];\n\n    \nif\n \n(\na\n \n==\n \nb\n)\n \nreturn\n \na\n;\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \nLGS\n;\n \ni\n \n>=\n \n0\n;\n \ni\n \n-=\n \n1\n)\n\n        \nif\n \n(\npre\n[\na\n][\ni\n]\n \n!=\n \npre\n[\nb\n][\ni\n])\n\n            \na\n \n=\n \npre\n[\na\n][\ni\n],\n \nb\n \n=\n \npre\n[\nb\n][\ni\n];\n\n    \nreturn\n \npre\n[\na\n][\n0\n];\n\n\n}\n\n\n\nbool\n \ncmp\n(\nint\n \na\n,\n \nint\n \nb\n){\nreturn\n \nid\n[\na\n]\n \n<\n \nid\n[\nb\n];}\n\n\n\nvoid\n \nDp\n(\nint\n \na\n)\n\n\n{\n\n    \nsz\n[\na\n]\n \n=\n \nbook\n[\na\n],\n \nf\n[\na\n]\n \n=\n \n0\n;\n\n    \nif\n \n(\nbook\n[\na\n])\n \nmn\n[\na\n]\n \n=\n \nmx\n[\na\n]\n \n=\n \n0\n;\n\n    \nelse\n \nmn\n[\na\n]\n \n=\n \nINF\n,\n \nmx\n[\na\n]\n \n=\n \n-\nINF\n;\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \ng\n.\nhead\n[\na\n],\n \nl\n;\n \n~\ni\n;\n \ni\n \n=\n \ng\n.\nnxt\n[\ni\n])\n\n    \n{\n\n        \nDp\n(\ng\n[\ni\n]),\n \nl\n \n=\n \ndep\n[\ng\n[\ni\n]]\n \n-\n \ndep\n[\na\n];\n\n        \ntot\n \n+=\n \n(\nf\n[\na\n]\n \n+\n \nsz\n[\na\n]\n \n*\n \nl\n)\n \n*\n \nsz\n[\ng\n[\ni\n]]\n \n+\n \nf\n[\ng\n[\ni\n]]\n \n*\n \nsz\n[\na\n];\n\n        \nsz\n[\na\n]\n \n+=\n \nsz\n[\ng\n[\ni\n]],\n \nf\n[\na\n]\n \n+=\n \nf\n[\ng\n[\ni\n]]\n \n+\n \nl\n \n*\n \nsz\n[\ng\n[\ni\n]];\n\n        \nmnans\n \n=\n \nmin\n(\nmnans\n,\n \nmn\n[\na\n]\n \n+\n \nmn\n[\ng\n[\ni\n]]\n \n+\n \nl\n);\n\n        \nmxans\n \n=\n \nmax\n(\nmxans\n,\n \nmx\n[\na\n]\n \n+\n \nmx\n[\ng\n[\ni\n]]\n \n+\n \nl\n);\n\n        \nmn\n[\na\n]\n \n=\n \nmin\n(\nmn\n[\na\n],\n \nmn\n[\ng\n[\ni\n]]\n \n+\n \nl\n);\n\n        \nmx\n[\na\n]\n \n=\n \nmax\n(\nmx\n[\na\n],\n \nmx\n[\ng\n[\ni\n]]\n \n+\n \nl\n);\n\n    \n}\n\n\n}\n\n\n\nint\n \nmain\n \n(\nint\n \nargc\n,\n \nchar\n \nconst\n*\n \nargv\n[])\n\n\n{\n\n    \nIN\n(\nn\n);\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \n1\n,\n \na\n,\n \nb\n;\n \ni\n \n<\n \nn\n;\n \ni\n \n+=\n \n1\n)\n\n        \nIN\n(\na\n),\n \nIN\n(\nb\n),\n \ng\n.\npush\n(\na\n,\n \nb\n),\n \ng\n.\npush\n(\nb\n,\n \na\n);\n\n    \nInit\n(\n1\n,\n \n0\n),\n \nIN\n(\nq\n);\n\n    \nwhile\n \n(\nq\n--\n)\n\n    \n{\n\n        \nIN\n(\nk\n);\n\n        \nfor\n \n(\nint\n \ni\n \n=\n \n1\n;\n \ni\n \n<=\n \nk\n;\n \ni\n \n+=\n \n1\n)\n \nIN\n(\nh\n[\ni\n]),\n \nbook\n[\nh\n[\ni\n]]\n \n=\n \n1\n;\n\n        \nsort\n(\nh\n \n+\n \n1\n,\n \nh\n \n+\n \n1\n \n+\n \nk\n,\n \ncmp\n);\n\n        \nsta\n[\ntop\n \n=\n \n1\n]\n \n=\n \n1\n,\n \ng\n.\nsz\n \n=\n \n0\n,\n \ng\n.\nhead\n[\n1\n]\n \n=\n \n-\n1\n;\n\n        \nfor\n \n(\nint\n \ni\n \n=\n \n1\n,\n \nl\n;\n \ni\n \n<=\n \nk\n;\n \ni\n \n+=\n \n1\n)\n \nif\n \n(\nh\n[\ni\n]\n \n!=\n \n1\n)\n\n        \n{\n\n            \nl\n \n=\n \nlca\n(\nh\n[\ni\n],\n \nsta\n[\ntop\n]);\n\n            \nif\n \n(\nl\n \n!=\n \nsta\n[\ntop\n])\n\n            \n{\n\n                \nwhile\n \n(\nid\n[\nl\n]\n \n<\n \nid\n[\nsta\n[\ntop\n \n-\n \n1\n]])\n\n                    \ng\n.\npush\n(\nsta\n[\ntop\n \n-\n \n1\n],\n \nsta\n[\ntop\n]),\n \ntop\n--\n;\n\n                \nif\n \n(\nid\n[\nl\n]\n \n>\n \nid\n[\nsta\n[\ntop\n \n-\n \n1\n]])\n\n                    \ng\n.\nhead\n[\nl\n]\n \n=\n \n-\n1\n,\n \ng\n.\npush\n(\nl\n,\n \nsta\n[\ntop\n]),\n \nsta\n[\ntop\n]\n \n=\n \nl\n;\n\n                \nelse\n \ng\n.\npush\n(\nl\n,\n \nsta\n[\ntop\n--\n]);\n\n            \n}\n\n            \ng\n.\nhead\n[\nh\n[\ni\n]]\n \n=\n \n-\n1\n,\n \nsta\n[\n++\ntop\n]\n \n=\n \nh\n[\ni\n];\n\n        \n}\n\n        \nfor\n \n(\nint\n \ni\n \n=\n \n1\n;\n \ni\n \n<\n \ntop\n;\n \ni\n \n+=\n \n1\n)\n \ng\n.\npush\n(\nsta\n[\ni\n],\n \nsta\n[\ni\n \n+\n \n1\n]);\n\n        \nmnans\n \n=\n \nINF\n,\n \nmxans\n \n=\n \n-\nINF\n,\n \ntot\n \n=\n \n0\n,\n \nDp\n(\n1\n);\n\n        \nprintf\n(\n\"%lld %d %d\n\\n\n\"\n,\n \ntot\n,\n \nmnans\n,\n \nmxans\n);\n\n        \nfor\n \n(\nint\n \ni\n \n=\n \n1\n;\n \ni\n \n<=\n \nk\n;\n \ni\n \n+=\n \n1\n)\n \nbook\n[\nh\n[\ni\n]]\n \n=\n \n0\n;\n\n    \n}\n\n    \nreturn\n \n0\n;\n\n\n}\n\n\n\n\n\nCF613D Kingdom and its Cities\n\u00b6\n\n\n\u4ee3\u7801\uff1a\n\n\n#include\n \n<bits/stdc++.h>\n\n\n\n#define NS (100005)\n\n\n#define LGS (17)\n\n\n\nusing\n \nnamespace\n \nstd\n;\n\n\n\ntemplate\n \n<\ntypename\n \n_Tp\n>\n \ninline\n \nvoid\n \nIN\n(\n_Tp\n&\n \ndig\n)\n\n\n{\n\n    \nchar\n \nc\n;\n \nbool\n \nflag\n \n=\n \n0\n;\n \ndig\n \n=\n \n0\n;\n\n    \nwhile\n \n(\nc\n \n=\n \ngetchar\n(),\n \n!\nisdigit\n(\nc\n))\n \nif\n \n(\nc\n \n==\n \n'-'\n)\n \nflag\n \n=\n \n1\n;\n\n    \nwhile\n \n(\nisdigit\n(\nc\n))\n \ndig\n \n=\n \ndig\n \n*\n \n10\n \n+\n \nc\n \n-\n \n'0'\n,\n \nc\n \n=\n \ngetchar\n();\n\n    \nif\n \n(\nflag\n)\n \ndig\n \n=\n \n-\ndig\n;\n\n\n}\n\n\n\nstruct\n \ngraph\n\n\n{\n\n    \nint\n \nhead\n[\nNS\n],\n \nnxt\n[\nNS\n \n<<\n \n1\n],\n \nto\n[\nNS\n \n<<\n \n1\n],\n \nsz\n;\n\n    \nvoid\n \ninit\n(){\nmemset\n(\nhead\n,\n \n-\n1\n,\n \nsizeof\n(\nhead\n)),\n \nsz\n \n=\n \n0\n;}\n\n    \ngraph\n(){\ninit\n();}\n\n    \nvoid\n \npush\n(\nint\n \na\n,\n \nint\n \nb\n)\n\n    \n{\n\n        \nnxt\n[\nsz\n]\n \n=\n \nhead\n[\na\n],\n \nto\n[\nsz\n]\n \n=\n \nb\n,\n \nhead\n[\na\n]\n \n=\n \nsz\n++\n;\n\n    \n}\n\n    \nint\n \noperator\n \n[]\n \n(\nconst\n \nint\n \na\n){\nreturn\n \nto\n[\na\n];}\n\n\n}\ng\n;\n\n\n\nint\n \nn\n,\n \nid\n[\nNS\n],\n \ndfn\n,\n \nq\n,\n \nk\n,\n \nh\n[\nNS\n],\n \nc\n[\nNS\n];\n\n\n\nint\n \npre\n[\nNS\n][\nLGS\n \n+\n \n1\n],\n \ndep\n[\nNS\n];\n\n\n\nint\n \nsta\n[\nNS\n],\n \ntop\n;\n\n\n\nbool\n \nbook\n[\nNS\n];\n\n\n\nvoid\n \nInit\n(\nint\n \na\n,\n \nint\n \nfa\n)\n\n\n{\n\n    \npre\n[\na\n][\n0\n]\n \n=\n \nfa\n,\n \ndep\n[\na\n]\n \n=\n \ndep\n[\nfa\n]\n \n+\n \n1\n,\n \nid\n[\na\n]\n \n=\n \n++\ndfn\n;\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \n1\n;\n \ni\n \n<=\n \nLGS\n;\n \ni\n \n+=\n \n1\n)\n\n        \npre\n[\na\n][\ni\n]\n \n=\n \npre\n[\npre\n[\na\n][\ni\n \n-\n \n1\n]][\ni\n \n-\n \n1\n];\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \ng\n.\nhead\n[\na\n];\n \n~\ni\n;\n \ni\n \n=\n \ng\n.\nnxt\n[\ni\n])\n\n        \nif\n \n(\ng\n[\ni\n]\n \n!=\n \nfa\n)\n \nInit\n(\ng\n[\ni\n],\n \na\n);\n\n\n}\n\n\n\nint\n \nlca\n(\nint\n \na\n,\n \nint\n \nb\n)\n\n\n{\n\n    \nif\n \n(\ndep\n[\na\n]\n \n>\n \ndep\n[\nb\n])\n \nswap\n(\na\n,\n \nb\n);\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \nLGS\n;\n \ni\n \n>=\n \n0\n;\n \ni\n \n-=\n \n1\n)\n\n        \nif\n \n(\ndep\n[\npre\n[\nb\n][\ni\n]]\n \n>=\n \ndep\n[\na\n])\n\n            \nb\n \n=\n \npre\n[\nb\n][\ni\n];\n\n    \nif\n \n(\na\n \n==\n \nb\n)\n \nreturn\n \na\n;\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \nLGS\n;\n \ni\n \n>=\n \n0\n;\n \ni\n \n-=\n \n1\n)\n\n        \nif\n \n(\npre\n[\na\n][\ni\n]\n \n!=\n \npre\n[\nb\n][\ni\n])\n\n            \na\n \n=\n \npre\n[\na\n][\ni\n],\n \nb\n \n=\n \npre\n[\nb\n][\ni\n];\n\n    \nreturn\n \npre\n[\na\n][\n0\n];\n\n\n}\n\n\n\nbool\n \ncmp\n(\nint\n \na\n,\n \nint\n \nb\n){\nreturn\n \nid\n[\na\n]\n \n<\n \nid\n[\nb\n];}\n\n\n\nint\n \nDp\n(\nint\n \na\n)\n\n\n{\n\n    \nint\n \ntot\n \n=\n \n0\n,\n \nans\n \n=\n \n0\n;\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \ng\n.\nhead\n[\na\n];\n \n~\ni\n;\n \ni\n \n=\n \ng\n.\nnxt\n[\ni\n])\n \nans\n \n+=\n \nDp\n(\ng\n[\ni\n]),\n \ntot\n \n+=\n \nc\n[\ng\n[\ni\n]];\n\n    \nif\n \n(\nbook\n[\na\n])\n \nc\n[\na\n]\n \n=\n \n1\n,\n \nans\n \n+=\n \ntot\n;\n\n    \nelse\n \nif\n \n(\ntot\n \n>\n \n1\n)\n \nc\n[\na\n]\n \n=\n \n0\n,\n \nans\n++\n;\n\n    \nelse\n \nc\n[\na\n]\n \n=\n \ntot\n;\n\n    \nreturn\n \nans\n;\n\n\n}\n\n\n\nint\n \nmain\n \n(\nint\n \nargc\n,\n \nchar\n \nconst\n*\n \nargv\n[])\n\n\n{\n\n    \nIN\n(\nn\n);\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \n1\n,\n \na\n,\n \nb\n;\n \ni\n \n<\n \nn\n;\n \ni\n \n+=\n \n1\n)\n\n        \nIN\n(\na\n),\n \nIN\n(\nb\n),\n \ng\n.\npush\n(\na\n,\n \nb\n),\n \ng\n.\npush\n(\nb\n,\n \na\n);\n\n    \nInit\n(\n1\n,\n \n0\n),\n \nIN\n(\nq\n);\n\n    \nwhile\n \n(\nq\n--\n)\n\n    \n{\n\n        \nIN\n(\nk\n);\n\n        \nfor\n \n(\nint\n \ni\n \n=\n \n1\n;\n \ni\n \n<=\n \nk\n;\n \ni\n \n+=\n \n1\n)\n \nIN\n(\nh\n[\ni\n]),\n \nbook\n[\nh\n[\ni\n]]\n \n=\n \n1\n;\n\n        \nfor\n \n(\nint\n \ni\n \n=\n \n1\n;\n \ni\n \n<=\n \nk\n;\n \ni\n \n+=\n \n1\n)\n\n            \nif\n \n(\nbook\n[\npre\n[\nh\n[\ni\n]][\n0\n]])\n \n{\nputs\n(\n\"-1\"\n);\n \ngoto\n \nend\n;}\n\n        \nsort\n(\nh\n \n+\n \n1\n,\n \nh\n \n+\n \n1\n \n+\n \nk\n,\n \ncmp\n);\n\n        \nsta\n[\ntop\n \n=\n \n1\n]\n \n=\n \n1\n,\n \ng\n.\nsz\n \n=\n \n0\n,\n \ng\n.\nhead\n[\n1\n]\n \n=\n \n-\n1\n;\n\n        \nfor\n \n(\nint\n \ni\n \n=\n \n1\n,\n \nl\n;\n \ni\n \n<=\n \nk\n;\n \ni\n \n+=\n \n1\n)\n \nif\n \n(\nh\n[\ni\n]\n \n!=\n \n1\n)\n\n        \n{\n\n            \nl\n \n=\n \nlca\n(\nh\n[\ni\n],\n \nsta\n[\ntop\n]);\n\n            \nif\n \n(\nl\n \n!=\n \nsta\n[\ntop\n])\n\n            \n{\n\n                \nwhile\n \n(\nid\n[\nl\n]\n \n<\n \nid\n[\nsta\n[\ntop\n \n-\n \n1\n]])\n\n                    \ng\n.\npush\n(\nsta\n[\ntop\n \n-\n \n1\n],\n \nsta\n[\ntop\n]),\n \ntop\n--\n;\n\n                \nif\n \n(\nid\n[\nl\n]\n \n>\n \nid\n[\nsta\n[\ntop\n \n-\n \n1\n]])\n\n                    \ng\n.\nhead\n[\nl\n]\n \n=\n \n-\n1\n,\n \ng\n.\npush\n(\nl\n,\n \nsta\n[\ntop\n]),\n \nsta\n[\ntop\n]\n \n=\n \nl\n;\n\n                \nelse\n \ng\n.\npush\n(\nl\n,\n \nsta\n[\ntop\n--\n]);\n\n            \n}\n\n            \ng\n.\nhead\n[\nh\n[\ni\n]]\n \n=\n \n-\n1\n,\n \nsta\n[\n++\ntop\n]\n \n=\n \nh\n[\ni\n];\n\n        \n}\n\n        \nfor\n \n(\nint\n \ni\n \n=\n \n1\n;\n \ni\n \n<\n \ntop\n;\n \ni\n \n+=\n \n1\n)\n \ng\n.\npush\n(\nsta\n[\ni\n],\n \nsta\n[\ni\n \n+\n \n1\n]);\n\n        \nprintf\n(\n\"%d\n\\n\n\"\n,\n \nDp\n(\n1\n));\n\n        \nend\n \n:\n \nfor\n \n(\nint\n \ni\n \n=\n \n1\n;\n \ni\n \n<=\n \nk\n;\n \ni\n \n+=\n \n1\n)\n \nbook\n[\nh\n[\ni\n]]\n \n=\n \n0\n;\n\n    \n}\n\n    \nreturn\n \n0\n;\n\n\n}\n\n\n\n\n\nBZOJ - 3572 \u4e16\u754c\u6811\n\u00b6\n\n\n\u4e27\u5fc3\u75c5\u72c2\u554a\n\n\n\u4ee3\u7801\uff1a\n\n\n#include\n \n<bits/stdc++.h>\n\n\n\n#define NS (300005)\n\n\n#define LGS (19)\n\n\n#define FIR first\n\n\n#define SEC second\n\n\n\nusing\n \nnamespace\n \nstd\n;\n\n\n\ntypedef\n \npair\n<\nint\n,\nint\n>\n \nPII\n;\n\n\n\ntemplate\n \n<\ntypename\n \n_Tp\n>\ninline\n \nvoid\n \nIN\n(\n_Tp\n&\n \ndig\n)\n\n\n{\n\n    \nchar\n \nc\n;\n \nbool\n \nflag\n \n=\n \n0\n;\n \ndig\n \n=\n \n0\n;\n\n    \nwhile\n \n(\nc\n \n=\n \ngetchar\n(),\n \n!\nisdigit\n(\nc\n))\n \nif\n \n(\nc\n \n==\n \n'-'\n)\n \nflag\n \n=\n \n1\n;\n\n    \nwhile\n \n(\nisdigit\n(\nc\n))\n \ndig\n \n=\n \ndig\n \n*\n \n10\n \n+\n \nc\n \n-\n \n'0'\n,\n \nc\n \n=\n \ngetchar\n();\n\n    \nif\n \n(\nflag\n)\n \ndig\n \n=\n \n-\ndig\n;\n\n\n}\n\n\n\nstruct\n \ngraph\n\n\n{\n\n    \nint\n \nhead\n[\nNS\n],\n \nnxt\n[\nNS\n \n<<\n \n1\n],\n \nto\n[\nNS\n \n<<\n \n1\n],\n \nsz\n;\n\n    \nvoid\n \ninit\n(){\nmemset\n(\nhead\n,\n \n-\n1\n,\n \nsizeof\n(\nhead\n)),\n \nsz\n \n=\n \n0\n;}\n\n    \ngraph\n(){\ninit\n();}\n\n    \nvoid\n \npush\n(\nint\n \na\n,\n \nint\n \nb\n)\n\n    \n{\n\n        \nnxt\n[\nsz\n]\n \n=\n \nhead\n[\na\n],\n \nto\n[\nsz\n]\n \n=\n \nb\n,\n \nhead\n[\na\n]\n \n=\n \nsz\n++\n;\n\n    \n}\n\n    \nint\n \noperator\n \n[]\n \n(\nconst\n \nint\n \na\n){\nreturn\n \nto\n[\na\n];}\n\n\n}\ng\n;\n\n\n\nint\n \nn\n,\n \nm\n,\n \nq\n,\n \nh\n[\nNS\n],\n \narr\n[\nNS\n],\n \nans\n[\nNS\n];\n\n\n\nint\n \npre\n[\nNS\n][\nLGS\n \n+\n \n1\n],\n \ndep\n[\nNS\n],\n \nid\n[\nNS\n],\n \ndfn\n,\n \nsz\n[\nNS\n];\n\n\n\nint\n \nst\n[\nNS\n],\n \ntop\n;\n\n\n\nbool\n \nbook\n[\nNS\n];\n\n\n\nPII\n \nmx\n[\nNS\n];\n\n\n\nbool\n \ncmp\n(\nint\n \na\n,\nint\n \nb\n)\n\n\n{\n\n    \nreturn\n \nid\n[\na\n]\n \n<\n \nid\n[\nb\n];\n\n\n}\n\n\n\nvoid\n \nInit\n(\nint\n \na\n,\n \nint\n \nfa\n)\n\n\n{\n\n    \npre\n[\na\n][\n0\n]\n \n=\n \nfa\n,\n \ndep\n[\na\n]\n \n=\n \ndep\n[\nfa\n]\n \n+\n \n1\n,\n \nid\n[\na\n]\n \n=\n \n++\ndfn\n,\n \nsz\n[\na\n]\n \n=\n \n1\n;\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \n1\n;\n \ni\n \n<=\n \nLGS\n;\n \ni\n \n+=\n \n1\n)\n \npre\n[\na\n][\ni\n]\n \n=\n \npre\n[\npre\n[\na\n][\ni\n \n-\n \n1\n]][\ni\n \n-\n \n1\n];\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \ng\n.\nhead\n[\na\n];\n \n~\ni\n;\n \ni\n \n=\n \ng\n.\nnxt\n[\ni\n])\n\n        \nif\n \n(\ng\n[\ni\n]\n \n!=\n \nfa\n)\n \nInit\n(\ng\n[\ni\n],\n \na\n),\n \nsz\n[\na\n]\n \n+=\n \nsz\n[\ng\n[\ni\n]];\n\n\n}\n\n\n\nint\n \njump\n(\nint\n \na\n,\n \nint\n \nk\n)\n\n\n{\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \n0\n;\n \ni\n \n<=\n \nLGS\n;\n \ni\n \n+=\n \n1\n)\n\n        \nif\n \n((\nk\n \n>>\n \ni\n)\n \n&\n \n1\n)\n \na\n \n=\n \npre\n[\na\n][\ni\n];\n\n    \nreturn\n \na\n;\n\n\n}\n\n\n\nint\n \nlca\n(\nint\n \na\n,\n \nint\n \nb\n)\n\n\n{\n\n    \nif\n \n(\ndep\n[\na\n]\n \n>\n \ndep\n[\nb\n])\n \nswap\n(\na\n,\n \nb\n);\n\n    \nb\n \n=\n \njump\n(\nb\n,\n \ndep\n[\nb\n]\n \n-\n \ndep\n[\na\n]);\n\n    \nif\n \n(\na\n \n==\n \nb\n)\n \nreturn\n \na\n;\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \nLGS\n;\n \ni\n \n>=\n \n0\n;\n \ni\n \n-=\n \n1\n)\n\n        \nif\n \n(\npre\n[\na\n][\ni\n]\n \n!=\n \npre\n[\nb\n][\ni\n])\n\n            \na\n \n=\n \npre\n[\na\n][\ni\n],\n \nb\n \n=\n \npre\n[\nb\n][\ni\n];\n\n    \nreturn\n \npre\n[\na\n][\n0\n];\n\n\n}\n\n\n\nvoid\n \ndfs1\n(\nint\n \na\n)\n\n\n{\n\n    \nif\n \n(\nbook\n[\na\n])\n \nmx\n[\na\n]\n \n=\n \nPII\n(\n0\n,\n \na\n);\n\n    \nelse\n \nmx\n[\na\n]\n \n=\n \nPII\n(\n1e8\n,\n \n0\n);\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \ng\n.\nhead\n[\na\n];\n \n~\ni\n;\n \ni\n \n=\n \ng\n.\nnxt\n[\ni\n])\n\n    \n{\n\n        \ndfs1\n(\ng\n[\ni\n]);\n\n        \nPII\n \ntmp\n \n=\n \nmx\n[\ng\n[\ni\n]];\n\n        \ntmp\n.\nFIR\n \n=\n \ndep\n[\nmx\n[\ng\n[\ni\n]].\nSEC\n]\n \n-\n \ndep\n[\na\n];\n\n        \nmx\n[\na\n]\n \n=\n \nmin\n(\nmx\n[\na\n],\n \ntmp\n);\n\n    \n}\n\n\n}\n\n\n\nvoid\n \ndfs2\n(\nint\n \na\n)\n\n\n{\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \ng\n.\nhead\n[\na\n];\n \n~\ni\n;\n \ni\n \n=\n \ng\n.\nnxt\n[\ni\n])\n\n    \n{\n\n        \nPII\n \ntmp\n \n=\n \nmx\n[\na\n];\n\n        \ntmp\n.\nFIR\n \n+=\n \ndep\n[\ng\n[\ni\n]]\n \n-\n \ndep\n[\na\n];\n\n        \nmx\n[\ng\n[\ni\n]]\n \n=\n \nmin\n(\nmx\n[\ng\n[\ni\n]],\n \ntmp\n),\n \ndfs2\n(\ng\n[\ni\n]);\n\n    \n}\n\n    \nans\n[\nmx\n[\na\n].\nSEC\n]\n \n=\n \nmax\n(\nans\n[\nmx\n[\na\n].\nSEC\n],\n \nsz\n[\na\n]);\n\n\n}\n\n\n\nvoid\n \ndfs3\n(\nint\n \na\n)\n\n\n{\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \ng\n.\nhead\n[\na\n],\n \nx\n,\n \ny\n,\n \ndis\n,\n \nz\n;\n \n~\ni\n;\n \ni\n \n=\n \ng\n.\nnxt\n[\ni\n])\n\n    \n{\n\n        \nif\n \n(\nx\n \n=\n \nmx\n[\na\n].\nSEC\n,\n \ny\n \n=\n \nmx\n[\ng\n[\ni\n]].\nSEC\n,\n \nx\n \n!=\n \ny\n)\n\n        \n{\n\n            \ndis\n \n=\n \ndep\n[\nx\n]\n \n+\n \ndep\n[\ny\n]\n \n-\n \n(\ndep\n[\nlca\n(\nx\n,\n \ny\n)]\n \n<<\n \n1\n);\n\n            \nz\n \n=\n \njump\n(\ng\n[\ni\n],\n \n(\ndis\n \n>>\n \n1\n)\n \n-\n \nmx\n[\ng\n[\ni\n]].\nFIR\n);\n\n            \nif\n \n(\ndis\n \n&\n \n1\n)\n \nans\n[\nx\n]\n \n-=\n \nsz\n[\nz\n];\n\n            \nelse\n\n            \n{\n\n                \nif\n \n(\nz\n \n!=\n \na\n \n&&\n \nz\n \n!=\n \ng\n[\ni\n])\n\n                    \nz\n \n=\n \njump\n(\ng\n[\ni\n],\n \n(\ndis\n \n>>\n \n1\n)\n \n-\n \nmx\n[\ng\n[\ni\n]].\nFIR\n \n-\n \n(\nx\n \n<\n \ny\n));\n\n                \nelse\n \nif\n \n(\nz\n \n==\n \na\n)\n\n                    \nz\n \n=\n \njump\n(\ng\n[\ni\n],\n \n(\ndis\n \n>>\n \n1\n)\n \n-\n \nmx\n[\ng\n[\ni\n]].\nFIR\n \n-\n \n1\n);\n\n                \nans\n[\nx\n]\n \n-=\n \nsz\n[\nz\n];\n\n            \n}\n\n            \nif\n \n(\ng\n[\ni\n]\n \n!=\n \nz\n)\n \nans\n[\ny\n]\n \n+=\n \nsz\n[\nz\n]\n \n-\n \nsz\n[\ng\n[\ni\n]];\n\n        \n}\n\n        \ndfs3\n(\ng\n[\ni\n]);\n\n    \n}\n\n\n}\n\n\n\nint\n \nmain\n \n(\nint\n \nargc\n,\n \nchar\n \nconst\n*\n \nargv\n[])\n\n\n{\n\n    \nIN\n(\nn\n);\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \n1\n,\n \na\n,\n \nb\n;\n \ni\n \n<\n \nn\n;\n \ni\n \n+=\n \n1\n)\n\n        \nIN\n(\na\n),\n \nIN\n(\nb\n),\n \ng\n.\npush\n(\na\n,\n \nb\n),\n \ng\n.\npush\n(\nb\n,\n \na\n);\n\n    \nInit\n(\n1\n,\n \n0\n),\n \nIN\n(\nq\n);\n\n    \nwhile\n \n(\nq\n--\n)\n\n    \n{\n\n        \nIN\n(\nm\n),\n \ng\n.\nsz\n \n=\n \n0\n;\n\n        \nfor\n \n(\nint\n \ni\n \n=\n \n1\n;\n \ni\n \n<=\n \nm\n;\n \ni\n \n+=\n \n1\n)\n\n            \nIN\n(\nh\n[\ni\n]),\n \nbook\n[\nh\n[\ni\n]]\n \n=\n \n1\n,\n \nans\n[\narr\n[\ni\n]\n \n=\n \nh\n[\ni\n]]\n \n=\n \n0\n;\n\n        \nsort\n(\nh\n \n+\n \n1\n,\n \nh\n \n+\n \n1\n \n+\n \nm\n,\n \ncmp\n),\n \nst\n[\ntop\n \n=\n \n1\n]\n \n=\n \n1\n,\n \ng\n.\nhead\n[\n1\n]\n \n=\n \n-\n1\n;\n\n        \nfor\n \n(\nint\n \ni\n \n=\n \n1\n,\n \nl\n;\n \ni\n \n<=\n \nm\n;\n \ni\n \n+=\n \n1\n)\n\n        \n{\n\n            \nif\n \n(\nh\n[\ni\n]\n \n==\n \n1\n)\n \ncontinue\n;\n\n            \nl\n \n=\n \nlca\n(\nst\n[\ntop\n],\n \nh\n[\ni\n]);\n\n            \nif\n \n(\nl\n \n!=\n \nst\n[\ntop\n])\n\n            \n{\n\n                \nwhile\n \n(\nid\n[\nl\n]\n \n<\n \nid\n[\nst\n[\ntop\n \n-\n \n1\n]])\n\n                    \ng\n.\npush\n(\nst\n[\ntop\n \n-\n \n1\n],\n \nst\n[\ntop\n]),\n \ntop\n--\n;\n\n                \nif\n \n(\nid\n[\nl\n]\n \n>\n \nid\n[\nst\n[\ntop\n \n-\n \n1\n]])\n\n                    \ng\n.\nhead\n[\nl\n]\n \n=\n \n-\n1\n,\n \ng\n.\npush\n(\nl\n,\n \nst\n[\ntop\n]),\n \nst\n[\ntop\n]\n \n=\n \nl\n;\n\n                \nelse\n \ng\n.\npush\n(\nl\n,\n \nst\n[\ntop\n--\n]);\n\n            \n}\n\n            \ng\n.\nhead\n[\nh\n[\ni\n]]\n \n=\n \n-\n1\n,\n \nst\n[\n++\ntop\n]\n \n=\n \nh\n[\ni\n];\n\n        \n}\n\n        \nfor\n \n(\nint\n \ni\n \n=\n \n1\n;\n \ni\n \n<\n \ntop\n;\n \ni\n \n+=\n \n1\n)\n \ng\n.\npush\n(\nst\n[\ni\n],\n \nst\n[\ni\n \n+\n \n1\n]);\n\n        \ndfs1\n(\n1\n),\n \ndfs2\n(\n1\n),\n \ndfs3\n(\n1\n);\n\n        \nfor\n \n(\nint\n \ni\n \n=\n \n1\n;\n \ni\n \n<=\n \nm\n;\n \ni\n \n+=\n \n1\n)\n \nprintf\n(\n\"%d \"\n,\n \nans\n[\narr\n[\ni\n]]);\n\n        \nputchar\n(\n10\n);\n\n        \nfor\n \n(\nint\n \ni\n \n=\n \n1\n;\n \ni\n \n<=\n \nm\n;\n \ni\n \n+=\n \n1\n)\n \nbook\n[\nh\n[\ni\n]]\n \n=\n \n0\n;\n\n    \n}\n\n    \nreturn\n \n0\n;\n\n\n}",
            "title": "\u865a\u6811"
        },
        {
            "location": "/data-structure/intermediate/virtual-tree/#bzoj-2286",
            "text": "",
            "title": "\u5f15\u5b50\uff1aBZOJ - 2286 \u6d88\u8017\u6218"
        },
        {
            "location": "/data-structure/intermediate/virtual-tree/#description",
            "text": "\u5728\u4e00\u573a\u6218\u4e89\u4e2d\uff0c\u6218\u573a\u7531n\u4e2a\u5c9b\u5c7f\u548cn-1\u4e2a\u6865\u6881\u7ec4\u6210\uff0c\u4fdd\u8bc1\u6bcf\u4e24\u4e2a\u5c9b\u5c7f\u95f4\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u8def\u5f84\u53ef\u8fbe\u3002\u73b0\u5728\uff0c\u6211\u519b\u5df2\u7ecf\u4fa6\u67e5\u5230\u654c\u519b\u7684\u603b\u90e8\u5728\u7f16\u53f7\u4e3a1\u7684\u5c9b\u5c7f\uff0c\u800c\u4e14\u4ed6\u4eec\u5df2\u7ecf\u6ca1\u6709\u8db3\u591f\u591a\u7684\u80fd\u6e90\u7ef4\u7cfb\u6218\u6597\uff0c\u6211\u519b\u80dc\u5229\u5728\u671b\u3002\u5df2\u77e5\u5728\u5176\u4ed6k\u4e2a\u5c9b\u5c7f\u4e0a\u6709\u4e30\u5bcc\u80fd\u6e90\uff0c\u4e3a\u4e86\u9632\u6b62\u654c\u519b\u83b7\u53d6\u80fd\u6e90\uff0c\u6211\u519b\u7684\u4efb\u52a1\u662f\u70b8\u6bc1\u4e00\u4e9b\u6865\u6881\uff0c\u4f7f\u5f97\u654c\u519b\u4e0d\u80fd\u5230\u8fbe\u4efb\u4f55\u80fd\u6e90\u4e30\u5bcc\u7684\u5c9b\u5c7f\u3002\u7531\u4e8e\u4e0d\u540c\u6865\u6881\u7684\u6750\u8d28\u548c\u7ed3\u6784\u4e0d\u540c\uff0c\u6240\u4ee5\u70b8\u6bc1\u4e0d\u540c\u7684\u6865\u6881\u6709\u4e0d\u540c\u7684\u4ee3\u4ef7\uff0c\u6211\u519b\u5e0c\u671b\u5728\u6ee1\u8db3\u76ee\u6807\u7684\u540c\u65f6\u4f7f\u5f97\u603b\u4ee3\u4ef7\u6700\u5c0f\u3002  \u4fa6\u67e5\u90e8\u95e8\u8fd8\u53d1\u73b0\uff0c\u654c\u519b\u6709\u4e00\u53f0\u795e\u79d8\u673a\u5668\u3002\u5373\u4f7f\u6211\u519b\u5207\u65ad\u6240\u6709\u80fd\u6e90\u4e4b\u540e\uff0c\u4ed6\u4eec\u4e5f\u53ef\u4ee5\u7528\u90a3\u53f0\u673a\u5668\u3002\u673a\u5668\u4ea7\u751f\u7684\u6548\u679c\u4e0d\u4ec5\u4ec5\u4f1a\u4fee\u590d\u6240\u6709\u6211\u519b\u70b8\u6bc1\u7684\u6865\u6881\uff0c\u800c\u4e14\u4f1a\u91cd\u65b0\u968f\u673a\u8d44\u6e90\u5206\u5e03\uff08\u4f46\u53ef\u4ee5\u4fdd\u8bc1\u7684\u662f\uff0c\u8d44\u6e90\u4e0d\u4f1a\u5206\u5e03\u52301\u53f7\u5c9b\u5c7f\u4e0a\uff09\u3002\u4e0d\u8fc7\u4fa6\u67e5\u90e8\u95e8\u8fd8\u53d1\u73b0\u4e86\u8fd9\u53f0\u673a\u5668\u53ea\u80fd\u591f\u4f7f\u7528m\u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u628a\u6bcf\u6b21\u4efb\u52a1\u5b8c\u6210\u5373\u53ef\u3002",
            "title": "Description"
        },
        {
            "location": "/data-structure/intermediate/virtual-tree/#input",
            "text": "\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570n\uff0c\u4ee3\u8868\u5c9b\u5c7f\u6570\u91cf\u3002  \u63a5\u4e0b\u6765n-1\u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u6574\u6570u,v,w\uff0c\u4ee3\u8868u\u53f7\u5c9b\u5c7f\u548cv\u53f7\u5c9b\u5c7f\u7531\u4e00\u6761\u4ee3\u4ef7\u4e3ac\u7684\u6865\u6881\u76f4\u63a5\u76f8\u8fde\uff0c\u4fdd\u8bc11<=u,v<=n\u4e141<=c<=100000\u3002  \u7b2cn+1\u884c\uff0c\u4e00\u4e2a\u6574\u6570m\uff0c\u4ee3\u8868\u654c\u65b9\u673a\u5668\u80fd\u4f7f\u7528\u7684\u6b21\u6570\u3002  \u63a5\u4e0b\u6765m\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6574\u6570ki\uff0c\u4ee3\u8868\u7b2ci\u6b21\u540e\uff0c\u6709ki\u4e2a\u5c9b\u5c7f\u8d44\u6e90\u4e30\u5bcc\uff0c\u63a5\u4e0b\u6765k\u4e2a\u6574\u6570h1,h2,\u2026hk\uff0c\u8868\u793a\u8d44\u6e90\u4e30\u5bcc\u5c9b\u5c7f\u7684\u7f16\u53f7\u3002",
            "title": "Input"
        },
        {
            "location": "/data-structure/intermediate/virtual-tree/#output",
            "text": "\u8f93\u51fa\u6709m\u884c\uff0c\u5206\u522b\u4ee3\u8868\u6bcf\u6b21\u4efb\u52a1\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002",
            "title": "Output"
        },
        {
            "location": "/data-structure/intermediate/virtual-tree/#sample-input",
            "text": "10  1   5   13  1   9   6  2   1   19  2   4   8  2   3   91  5   6   8  7   5   4  7   8   31  10   7   9  3  2   10   6  4   5   7   8   3  3   9   4   6",
            "title": "Sample Input"
        },
        {
            "location": "/data-structure/intermediate/virtual-tree/#sample-output",
            "text": "12  32  22",
            "title": "Sample Output"
        },
        {
            "location": "/data-structure/intermediate/virtual-tree/#hint",
            "text": "\u5bf9\u4e8e100%\u7684\u6570\u636e\uff0c2<=n<=250000,m>=1,sigma(ki)<=500000,1<=ki<=n-1",
            "title": "HINT"
        },
        {
            "location": "/data-structure/intermediate/virtual-tree/#source",
            "text": "Stage2 day2",
            "title": "Source"
        },
        {
            "location": "/data-structure/intermediate/virtual-tree/#virtual-tree",
            "text": "\u5bf9\u4e8e\u4e0a\u9762\u90a3\u9898\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u2014\u2014\u5982\u679c\u6811\u7684\u70b9\u6570\u5f88\u5c11\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8dd1Dp\u3002  \u9996\u5148\u6211\u4eec\u79f0\u67d0\u6b21\u8be2\u95ee\u4e2d\u88ab\u9009\u4e2d\u7684\u70b9\u4e3a\u2014\u2014 \u201c\u5173\u952e\u70b9\u201d  \u8bbe Dp[i] Dp[i] \u8868\u793a\u2014\u2014\u4f7f i i \u4e0d\u4e0e\u5176\u5b50\u6811\u4e2d\u4efb\u610f\u4e00\u4e2a\u5173\u952e\u70b9\u8054\u901a\u7684 \u6700\u5c0f\u4ee3\u4ef7 \u3002  \u8bbe w[a,b] w[a,b] \u8868\u793a a a \u4e0e b b \u4e4b\u95f4\u7684\u8fb9\u7684\u6743\u503c  \u5219\uff1a   \u82e5 son[i] son[i] \u4e0d\u662f\u5173\u952e\u70b9\uff1a Dp[i]=Dp[i] + min\\\\{Dp[son[i]],w[i,son[i]]\\\\} Dp[i]=Dp[i] + min\\\\{Dp[son[i]],w[i,son[i]]\\\\}  \u82e5 son[i] son[i] \u662f\u5173\u952e\u70b9\uff1a Dp[i]=Dp[i] + w[i,son[i]] Dp[i]=Dp[i] + w[i,son[i]]   \u5f88\u597d\uff0c\u8fd9\u6837\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4efd O(n\\times q) O(n\\times q) \u7684\u4ee3\u7801  \u542c\u8d77\u6765\u5f88\u6709\u610f\u601d  \u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u2014\u2014\u5176\u5b9e\u5f88\u591a\u70b9\u662f\u6ca1\u6709\u7528\u7684\u3002  \u6bd4\u5982\u4e0b\u56fe\uff1a   \u56fe\u4e2d\u53ea\u6709\u4e24\u4e2a\u7ea2\u8272\u7684\u70b9\u662f \u5173\u952e\u70b9 \uff0c\u800c\u522b\u7684\u9ed1\u8272\u7684\u70b9\u5168\u90fd\u662f\u201c\u975e\u5173\u952e\u70b9\u201d\u3002\u4e00\u53f7\u8282\u70b9\uff08\u654c\u4eba\u6240\u5728\u4e4b\u5904\uff09\u662f\u6811\u9876\u7684\u90a3\u4e2a\u6807\u4e861\u7684\u8282\u70b9\u3002  \u5bf9\u4e8e\u8fd9\u9898\u6765\u8bf4\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u8bc1\u7ea2\u8272\u7684\u70b9\u65e0\u6cd5\u5230\u8fbe1\u53f7\u8282\u70b9\u5c31\u884c\u4e86\u3002  \u901a\u8fc7\u8089\u773c\u89c2\u5bdf\u53ef\u4ee5\u5f97\u51fa\u7ed3\u8bba\u2014\u20141\u53f7\u8282\u70b9\u7684\u53f3\u5b50\u6811\uff08\u867d\u7136\u5b9e\u9645\u4e0a\u53ef\u80fd\u6709\u591a\u4e2a\u5b50\u6811\uff0c\u4f46\u8fd9\u91cc\u53ea\u6709\u4e24\u4e2a\u5b50\u6811\uff0c\u6240\u4ee5\u6682\u65f6\u8fd9\u4e48\u79f0\u547c\u4e86\uff09\u4e00\u4e2a\u7ea2\u8272\u8282\u70b9\u90fd\u6728\u6709\uff0c \u6240\u4ee5\u6ca1\u5fc5\u8981\u53bbDp\u5b83 \uff0c\u4e0d\u662f\u5417\uff1f  \u89c2\u5bdf\u9898\u76ee\u7ed9\u51fa\u7684\u6761\u4ef6\uff0c\u7ea2\u8272\u70b9\uff08\u5173\u952e\u70b9\uff09\u7684\u603b\u6570\u662f\u4e0e n n \u540c\u9636\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b9e\u9645\u4e0a\u4e00\u6b21\u8be2\u95ee\u4e2d\u7ea2\u8272\u7684\u70b9\u5bf9\u4e8e\u6574\u68f5\u6811\u6765\u8bf4\u662f\u5f88\u7a00\u758f\u7684\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u80fd\u8ba9\u590d\u6742\u5ea6\u7531\u7ea2\u8272\u70b9\u7684\u603b\u6570\u6765\u51b3\u5b9a\u5c31\u597d\u4e86\u3002  \u56e0\u6b64\u6211\u4eec\u9700\u8981 \u6d53\u7f29\u4fe1\u606f\uff0c\u628a\u4e00\u6574\u9897\u5927\u6811\u6d53\u7f29\u6210\u4e00\u9897\u5c0f\u6811 \u3002  \u7531\u6b64\u6211\u4eec\u5f15\u51fa\u4e86 \u201c\u865a\u6811\u201d \u8fd9\u4e2a\u6982\u5ff5\u3002  \u6211\u4eec\u5148\u76f4\u89c2\u5730\u6765\u770b\u770b\u865a\u6811\u7684\u6837\u5b50\u3002  \u4e0b\u56fe\u4e2d\uff0c\u5de6\u8fb9\u4e3a\u539f\u6811\uff0c\u53f3\u8fb9\u4e3a\u751f\u6210\u7684\u65b0\u7684\u865a\u6811\u3002      \u770b\u660e\u767d\u4e86\u5417\uff1f  \u56e0\u4e3a\u4efb\u610f\u4e24\u4e2a\u5173\u952e\u70b9\u7684LCA\u4e5f\u662f\u9700\u8981\u4fdd\u5b58\u91cd\u8981\u4fe1\u606f\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4fdd\u5b58\u5b83\u4eec\u7684LCA\uff0c\u4e5f\u5c31\u662f\u865a\u6811\u4e2d\u4e0d\u4e00\u5b9a\u53ea\u6709\u5173\u952e\u70b9  \u4e0d\u96be\u53d1\u73b0\u865a\u6811\u4e2d\u7956\u5148->\u540e\u4ee3\u7684\u5173\u7cfb\u5e76\u4e0d\u4f1a\u6539\u53d8\uff08\u5c31\u662f\u4e0d\u4f1a\u51fa\u73b0\u539f\u672c a a \u662f b b \u7684\u7956\u5148\u7ed3\u679c\u540e\u9762 a a \u53d8\u6210 b b \u7684\u540e\u4ee3\u4e86\u4e4b\u7c7b\u7684\u9b3c\u4e8b\uff09  \u4f46\u6211\u4eec\u4e0d\u53ef\u80fd O(k^2) O(k^2) \u66b4\u529b\u679a\u4e3eLCA\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u96be\u60f3\u5230\u2014\u2014\u9996\u5148\u5c06\u5173\u952e\u70b9\u6309dfs\u5e8f\u6392\u5e8f\uff0c\u7136\u540e\u6392\u5b8c\u5e8f\u4ee5\u540e\u76f8\u90bb\u7684\u4e24\u4e2a\u5173\u952e\u70b9\uff08\u76f8\u90bb\u6307\u7684\u662f\u5728\u6392\u5e8f\u540e\u7684\u5e8f\u5217\u4e2d\u4e0b\u8868\u5dee\u503c\u7684\u7edd\u5bf9\u503c\u7b49\u4e8e1\uff09\u6c42\u4e00\u4e0b LCA LCA \uff0c\u5e76\u628a\u5b83\u52a0\u5165\u865a\u6811\u3002  \u56e0\u4e3a\u53ef\u80fd\u591a\u4e2a\u8282\u70b9\u7684 LCA LCA \u53ef\u80fd\u662f\u540c\u4e00\u4e2a\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u591a\u6b21\u5c06\u5b83\u52a0\u5165\u865a\u6811\u3002  \u975e\u5e38\u76f4\u89c2\u7684\u4e00\u4e2a\u65b9\u6cd5\u662f\uff1a   \u5c06\u5173\u952e\u70b9\u6309dfs\u5e8f\u6392\u5e8f  for\u4e00\u904d\uff0c\u4efb\u610f\u4e24\u4e2a\u76f8\u90bb\u7684\u5173\u952e\u70b9\u6c42\u4e00\u4e0b LCA LCA \uff0c\u5e76\u4e14\u54c8\u5e0c\u8868\u5224\u91cd  \u7136\u540e\u6839\u636e\u539f\u6811\u4e2d\u7684\u7956\u5148->\u540e\u4ee3\u5173\u7cfb\u5efa\u6811\uff08\u7136\u800c\u6211\u5e76\u4e0d\u77e5\u9053\u600e\u4e48\u5efa\u6811\uff09   \u3002\u3002\u3002  \u611f\u89c9\u5f88\u4e0d\u53ef\u505a\u7684\u6837\u5b50\u3002<(=\u2518\uffe3\u0414\uffe3)\u2518\u2567\u2550\u2567  \u6240\u4ee5\uff0c\u8fd9\u91cc\u6211\u4eec\u63d0\u51fa\u4e00\u79cd\u7528\u5355\u8c03\u6808\u7684\u505a\u6cd5\u3002  \u5728\u63d0\u51fa\u65b9\u6848\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u786e\u8ba4\u4e00\u4e2a\u4e8b\u5b9e\u2014\u2014\u5728\u865a\u6811\u91cc\uff0c\u53ea\u8981\u4fdd\u8bc1\u7956\u5148->\u540e\u4ee3\u7684\u5173\u7cfb\u6ca1\u6709\u6539\u53d8\uff0c\u5c31\u53ef\u4ee5\u968f\u610f\u6dfb\u52a0\u8282\u70b9\u3002  \u4e5f\u5c31\u662f\uff0c\u5982\u679c\u6211\u4eec\u4e50\u610f\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u539f\u6811\u4e2d\u6240\u6709\u7684\u70b9\u90fd\u52a0\u5165\u865a\u6811\u4e2d\uff0c\u4e5f\u4e0d\u4f1a\u5bfc\u81f4WA\uff08\u867d\u7136\u4f1a\u5bfc\u81f4TLE\uff09  \u56e0\u6b64\uff0c\u6211\u4eec\u4e3a\u4e86\u65b9\u4fbf\uff0c\u53ef\u4ee5\u9996\u5148\u5c06 1 1 \u53f7\u8282\u70b9\u52a0\u5165\u865a\u6811\u4e2d\uff0c\u5e76\u4e14\u5e76\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\u3002  \u597d\uff0c\u5f00\u59cb\u8bb2\u600e\u4e48\u7528\u5355\u8c03\u6808\u6765\u5efa\u7acb\u4e00\u9897\u865a\u6811\u5427\u3002  \u9996\u5148\u6211\u4eec\u8981\u660e\u786e\u4e00\u4e2a\u76ee\u7684\u2014\u2014\u6211\u4eec\u8981\u7528\u5355\u8c03\u6808\u6765\u7ef4\u62a4\u4e00\u6761\u865a\u6811\u4e0a\u7684\u94fe\u3002  \u4e5f\u5c31\u662f\u4e00\u4e2a\u6808\u91cc\u76f8\u90bb\u7684\u4e24\u4e2a\u8282\u70b9\u5728\u865a\u6811\u4e0a\u4e5f\u662f\u76f8\u90bb\u7684\uff0c\u800c\u4e14\u6808\u662f\u4ece\u5e95\u90e8\u5230\u6808\u9996\u5355\u8c03\u9012\u589e\u7684\uff08\u6307\u7684\u662f\u6808\u4e2d\u8282\u70b9Dfs\u5e8f\u5355\u8c03\u9012\u589e\uff09\uff0c\u8bf4\u767d\u4e86\u5c31\u662f\u67d0\u4e2a\u8282\u70b9\u7684\u7236\u4eb2\u5c31\u662f\u6808\u4e2d\u5b83\u4e0b\u9762\u7684\u90a3\u4e2a\u8282\u70b9\u3002   \u9996\u5148\u6211\u4eec\u5728\u6808\u4e2d\u6dfb\u52a0\u8282\u70b9 1 1  \u7136\u540e\u63a5\u4e0b\u6765\u6309\u7167Dfs\u5e8f\u4ece\u5c0f\u5230\u8fbe\u6dfb\u52a0\u5173\u952e\u8282\u70b9\u3002  \u5047\u5982\u5f53\u524d\u7684\u8282\u70b9\u4e0e\u6808\u9876\u8282\u70b9\u7684 LCA LCA \u5c31\u662f\u6808\u9876\u8282\u70b9\u7684\u8bdd\uff0c\u5219\u8bf4\u660e\u5b83\u4eec\u662f\u5728\u4e00\u6761\u94fe\u4e0a\u7684\u3002\u6240\u4ee5\u76f4\u63a5\u628a\u5f53\u524d\u8282\u70b9\u5165\u6808\u5c31\u884c\u4e86\u3002   \u5047\u5982\u5f53\u524d\u8282\u70b9\u4e0e\u6808\u9876\u8282\u70b9\u7684 LCA LCA \u4e0d\u662f\u6808\u9876\u8282\u70b9\u7684\u8bdd\uff0c\u6bd4\u5982\u8fd9\u6837\u2014\u2014   \u90a3\u5c31\uff0c\uff0c\u975e\u5e38\u5c34\u5c2c\u4e86  \u663e\u7136\uff0c\u5f53\u524d\u5355\u8c03\u6808\u7ef4\u62a4\u7684\u94fe\u662f\uff1a   \u800c\u6211\u4eec\u9700\u8981\u628a\u94fe\u53d8\u6210\uff1a   \u90a3\u4e48\u6211\u4eec\u5c31\u865a\u6811\u4e2d\u8fde\u4e0a\u8fd9\u4e9b\u8fb9\uff1a   \u5e76\u4e14\u628a\u8fd9\u4e24\u4e2a\u70b9\u4ece\u6808\u4e2d\u5f39\u51fa\uff1a   \u5047\u5982\u5f39\u51fa\u4ee5\u540e\u53d1\u73b0\u6808\u9996\u4e0d\u662f LCA LCA \u7684\u8bdd\u8981\u8ba9 LCA LCA \u5165\u6808\u3002  \u518d\u628a\u5f53\u524d\u8282\u70b9\u5165\u6808\u5c31\u884c\u4e86\u3002  \u6253\u4e2a\u6bd4\u65b9\u5427\u3002  \u5047\u5982\u90a3\u68f5\u6811\u957f\u8fd9\u6837\uff1a   \u90a3\u4e48\u6b65\u9aa4\u662f\u8fd9\u6837\u7684\uff1a   \u5c063\u4e2a\u5173\u952e\u70b9 6,4,7 6,4,7 \uff08\u6211\u6545\u610f\u6253\u4e71\u4e86\uff09\u6309\u7167dfs\u5e8f\u6392\u5e8f\uff0c\u5f97\u5230\u5e8f\u5217 4,6,7 4,6,7  \u5c06\u70b9 1 1 \u5165\u6808  \u53d6\u5e8f\u5217\u7b2c\u4e00\u4e2a\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\uff0c\u4e3a 4\u200b 4\u200b \u3002\u518d\u53d6\u6808\u9876\u5143\u7d20\uff0c\u4e3a 1\u200b 1\u200b \u3002\u6c42 1\u200b 1\u200b \u548c 4\u200b 4\u200b \u7684 LCA\u200b LCA\u200b \uff1a LCA(1,4)=1\u200b LCA(1,4)=1\u200b \u3002  \u53d1\u73b0 LCA(1,4)= LCA(1,4)= \u6808\u9876\u5143\u7d20\uff0c\u8bf4\u660e\u5b83\u4eec\u5728\u865a\u6811\u7684\u4e00\u6761\u94fe\u4e0a\uff0c\u6240\u4ee5\u76f4\u63a5\u628a\u5f53\u524d\u8282\u70b9 4 4 \u5165\u6808\uff0c\u5f53\u524d\u6808\u4e3a 4,1 4,1  \u53d6\u5e8f\u5217\u7b2c\u4e8c\u4e2a\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\uff0c\u4e3a 6 6 \u3002\u518d\u53d6\u6808\u9876\u5143\u7d20\uff0c\u4e3a 4 4 \u3002\u6c42 6 6 \u548c 4 4 \u7684 LCA LCA \uff1a LCA(6,4)=1 LCA(6,4)=1 \u3002  \u53d1\u73b0 LCA(6,4)!= LCA(6,4)!= \u6808\u9876\u5143\u7d20\uff0c\u8fdb\u5165\u5224\u65ad\u9636\u6bb5\u3002  \u5224\u65ad\u9636\u6bb5\uff1a\u53d1\u73b0\u6808\u9876\u8282\u70b9 4 4 \u7684Dfs\u5e8f\u662f\u5927\u4e8e LCA(6,4) LCA(6,4) \u7684\uff0c\u4f46\u662f\u6b21\u5927\u8282\u70b9\uff08\u6808\u9876\u8282\u70b9\u4e0b\u9762\u7684\u90a3\u4e2a\u8282\u70b9\uff09 1 1 \u7684Dfs\u5e8f\u662f\u7b49\u4e8e LCA LCA \u7684\uff08\u5176\u5b9eDfs\u5e8f\u76f8\u7b49\u8bf4\u660e\u8282\u70b9\u4e5f\u76f8\u7b49\uff09\uff0c\u8bf4\u660e LCA LCA \u5df2\u7ecf\u5165\u6808\u4e86\uff0c\u6240\u4ee5\u76f4\u63a5\u8fde\u63a5 1->4 1->4 \u7684\u8fb9\uff0c\u4e5f\u5c31\u662f LCA LCA \u5230\u6808\u9876\u5143\u7d20\u7684\u8fb9\u3002\u5e76\u628a 4 4 \u4ece\u6808\u4e2d\u5f39\u51fa\u3002  \u7ed3\u675f\u4e86\u5224\u65ad\u9636\u6bb5\uff0c\u5c06 6 6 \u5165\u6808\uff0c\u5f53\u524d\u6808\u4e3a 6,1 6,1  \u53d6\u5e8f\u5217\u7b2c\u4e09\u4e2a\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\uff0c\u4e3a 7 7 \u3002\u518d\u53d6\u6808\u9876\u5143\u7d20\uff0c\u4e3a 6 6 \u3002\u6c42 7 7 \u548c 6 6 \u7684 LCA LCA \uff1a LCA(7,6)=3 LCA(7,6)=3 \u3002  \u53d1\u73b0 LCA(7,6)!= LCA(7,6)!= \u6808\u9876\u5143\u7d20\uff0c\u8fdb\u5165\u5224\u65ad\u9636\u6bb5\u3002  \u5224\u65ad\u9636\u6bb5\uff1a\u53d1\u73b0\u6808\u9876\u8282\u70b9 6 6 \u7684Dfs\u5e8f\u662f\u5927\u4e8e LCA(7,6) LCA(7,6) \u7684\uff0c\u4f46\u662f\u6b21\u5927\u8282\u70b9\uff08\u6808\u9876\u8282\u70b9\u4e0b\u9762\u7684\u90a3\u4e2a\u8282\u70b9\uff09 1 1 \u7684Dfs\u5e8f\u662f\u5c0f\u4e8e LCA LCA \u7684\uff0c\u8bf4\u660e LCA LCA \u8fd8\u6ca1\u6709\u5165\u8fc7\u6808\uff0c\u6240\u4ee5\u76f4\u63a5\u8fde\u63a5 3->6 3->6 \u7684\u8fb9\uff0c\u4e5f\u5c31\u662f LCA LCA \u5230\u6808\u9876\u5143\u7d20\u7684\u8fb9\u3002\u628a 6 6 \u4ece\u6808\u4e2d\u5f39\u51fa\uff0c\u5e76\u4e14\u628a LCA(6,7) LCA(6,7) \u5165\u6808\u3002  \u7ed3\u675f\u4e86\u5224\u65ad\u9636\u6bb5\uff0c\u5c06 7 7 \u5165\u6808\uff0c\u5f53\u524d\u6808\u4e3a 3,7 3,7  \u53d1\u73b0\u5e8f\u5217\u91cc\u76842\u4e2a\u8282\u70b9\u5df2\u7ecf\u5168\u90e8\u52a0\u5165\u8fc7\u6808\u4e86\uff0c\u9000\u51fa\u5faa\u73af\u3002  \u6b64\u65f6\u6808\u4e2d\u8fd8\u67092\u4e2a\u8282\u70b9\uff1a 3,7 3,7 \uff0c\u5f88\u660e\u663e\u5b83\u4eec\u662f\u4e00\u6761\u94fe\u4e0a\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u94fe\u63a5\uff1a 3->7 3->7 \u7684\u8fb9  \u865a\u6811\u5c31\u5efa\u5b8c\u5566\uff01   \u5176\u4e2d\u6709\u5f88\u591a\u7ec6\u8282\uff0c\u6bd4\u5982\u6211\u662f\u7528\u4e34\u63a5\u8868\u5b58\u56fe\u7684\u65b9\u5f0f\u5b58\u865a\u6811\u7684\uff0c\u6240\u4ee5\u9700\u8981\u6e05\u7a7a\u4e34\u63a5\u8868\u3002\u4f46\u662f\u76f4\u63a5\u6e05\u7a7a\u6574\u4e2a\u4e34\u63a5\u8868\u662f\u5f88\u6162\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5728 \u6709\u4e00\u4e2a\u4ece\u672a\u5165\u6808\u7684\u5143\u7d20\u5165\u6808\u7684\u65f6\u5019\u6e05\u7a7a\u8be5\u5143\u7d20\u5bf9\u5e94\u7684\u4e34\u63a5\u8868 \u5373\u53ef\u3002  \u5efa\u7acb\u865a\u6811\u7684C++\u4ee3\u7801\u5927\u6982\u957f\u8fd9\u6837\uff1a  sort ( h   +   1 ,   h   +   1   +   k ,   cmp );  sta [ top   =   1 ]   =   1 ,   g . sz   =   0 ,   g . head [ 1 ]   =   - 1 ;  //1\u53f7\u8282\u70b9\u5165\u6808\uff0c\u6e05\u7a7a1\u53f7\u8282\u70b9\u5bf9\u5e94\u7684\u4e34\u63a5\u8868\uff0c\u8bbe\u7f6e\u4e34\u63a5\u8868\u8fb9\u6570\u4e3a1  for   ( int   i   =   1 ,   l ;   i   <=   k ;   i   +=   1 )   if   ( h [ i ]   !=   1 ) //\u5982\u679c1\u53f7\u8282\u70b9\u662f\u5173\u952e\u8282\u70b9\u5c31\u4e0d\u8981\u91cd\u590d\u6dfb\u52a0  { \n   l   =   lca ( h [ i ],   sta [ top ]); //\u8ba1\u7b97\u5f53\u524d\u8282\u70b9\u4e0e\u6808\u9876\u8282\u70b9\u7684LCA \n   if   ( l   !=   sta [ top ]) //\u5982\u679cLCA\u548c\u6808\u9876\u5143\u7d20\u4e0d\u540c\uff0c\u5219\u8bf4\u660e\u5f53\u524d\u8282\u70b9\u4e0d\u518d\u5f53\u524d\u6808\u6240\u5b58\u7684\u94fe\u4e0a \n   { \n     while   ( id [ l ]   <   id [ sta [ top   -   1 ]]) //\u5f53\u6b21\u5927\u8282\u70b9\u7684Dfs\u5e8f\u5c0f\u4e8eLCA\u7684Dfs\u5e8f \n       g . push ( sta [ top   -   1 ],   sta [ top ]),   top -- ; //\u628a\u4e0e\u5f53\u524d\u8282\u70b9\u6240\u5728\u7684\u94fe\u4e0d\u91cd\u5408\u7684\u94fe\u8fde\u63a5\u6389\u5e76\u4e14\u5f39\u51fa \n     if   ( id [ l ]   >   id [ sta [ top   -   1 ]]) //\u5982\u679cLCA\u4e0d\u7b49\u4e8e\u6b21\u5927\u8282\u70b9\uff08\u8fd9\u91cc\u7684\u5927\u4e8e\u5176\u5b9e\u548c\u4e0d\u7b49\u4e8e\u6ca1\u6709\u533a\u522b\uff09 \n       g . head [ l ]   =   - 1 ,   g . push ( l ,   sta [ top ]),   sta [ top ]   =   l ; \n     //\u8bf4\u660eLCA\u662f\u7b2c\u4e00\u6b21\u5165\u6808\uff0c\u6e05\u7a7a\u5176\u4e34\u63a5\u8868\uff0c\u8fde\u8fb9\u540e\u5f39\u51fa\u6808\u9876\u5143\u7d20\uff0c\u5e76\u5c06LCA\u5165\u6808 \n     else   g . push ( l ,   sta [ top -- ]); //\u8bf4\u660eLCA\u5c31\u662f\u6b21\u5927\u8282\u70b9\uff0c\u76f4\u63a5\u5f39\u51fa\u6808\u9876\u5143\u7d20 \n   } \n   g . head [ h [ i ]]   =   - 1 ,   sta [ ++ top ]   =   h [ i ]; //\u5f53\u524d\u8282\u70b9\u5fc5\u7136\u662f\u7b2c\u4e00\u6b21\u5165\u6808\uff0c\u6e05\u7a7a\u4e34\u63a5\u8868\u5e76\u5165\u6808  }  for   ( int   i   =   1 ;   i   <   top ;   i   +=   1 )   g . push ( sta [ i ],   sta [ i   +   1 ]); //\u5269\u4f59\u7684\u6700\u540e\u4e00\u6761\u94fe\u8fde\u63a5\u4e00\u4e0b  \n\u4e8e\u662f\u6211\u4eec\u5c31\u5b66\u4f1a\u4e86\u865a\u6811\u7684\u5efa\u7acb\u4e86\uff01  \u5bf9\u4e8e\u6d88\u8017\u6218\u8fd9\u9898\uff0c\u76f4\u63a5\u5728\u865a\u6811\u4e0a\u8dd1\u6700\u5f00\u59cb\u8bb2\u7684\u90a3\u4e2a Dp Dp \u5c31\u884c\u4e86\uff0c\u6211\u4eec\u7b49\u4e8e\u5229\u7528\u4e86\u865a\u6811\u6392\u9664\u4e86\u90a3\u4e9b\u6ca1\u7528\u7684\u975e\u5173\u952e\u8282\u70b9\uff01   \u82e5 son[i] son[i] \u4e0d\u662f\u5173\u952e\u70b9\uff1a Dp[i]=Dp[i] + min\\{Dp[son[i]],w[i,son[i]]\\} Dp[i]=Dp[i] + min\\{Dp[son[i]],w[i,son[i]]\\}  \u82e5 son[i] son[i] \u662f\u5173\u952e\u70b9\uff1a Dp[i]=Dp[i] + w[i,son[i]] Dp[i]=Dp[i] + w[i,son[i]]   \u4e8e\u662f\u8fd9\u9898\u5f88\u7b80\u5355\u5c31\u8fc7\u4e86\u3002  \u4ee3\u7801\u770b\u4e0b\u9762\u3002",
            "title": "\u865a\u6811Virtual Tree"
        },
        {
            "location": "/data-structure/intermediate/virtual-tree/#_1",
            "text": "",
            "title": "\u63a8\u8350\u4e60\u9898"
        },
        {
            "location": "/data-structure/intermediate/virtual-tree/#bzoj-2286_1",
            "text": "\u4ee3\u7801\uff1a  #include   <bits/stdc++.h>  #define NS (250005)  #define LGS (18)  using   namespace   std ;  typedef   long   long   LL ;  template   < typename   _Tp >   inline   void   IN ( _Tp &   dig )  { \n     char   c ;   bool   flag   =   0 ;   dig   =   0 ; \n     while   ( c   =   getchar (),   ! isdigit ( c ))   if   ( c   ==   '-' )   flag   =   1 ; \n     while   ( isdigit ( c ))   dig   =   dig   *   10   +   c   -   '0' ,   c   =   getchar (); \n     if   ( flag )   dig   =   - dig ;  }  struct   graph  { \n     int   head [ NS ],   nxt [ NS   <<   1 ],   to [ NS   <<   1 ],   w [ NS   <<   1 ],   sz ; \n     void   init (){ memset ( head ,   - 1 ,   sizeof ( head )),   sz   =   0 ;} \n     graph (){ init ();} \n     void   push ( int   a ,   int   b ,   int   c ) \n     { \n         nxt [ sz ]   =   head [ a ],   to [ sz ]   =   b ,   w [ sz ]   =   c ,   head [ a ]   =   sz ++ ; \n     } \n     int &   operator   []   ( const   int   a ){ return   to [ a ];}  } g ;  int   n ,   pre [ NS ][ LGS   +   1 ],   dep [ NS ],   mx [ NS ][ LGS   +   1 ],   id [ NS ],   dfn ;  int   m ,   k ,   h [ NS ],   sta [ NS ],   top ,   MX ;  LL   f [ NS ];  bool   book [ NS ];  void   Init ( int   a ,   int   fa )  { \n     pre [ a ][ 0 ]   =   fa ,   dep [ a ]   =   dep [ fa ]   +   1 ,   id [ a ]   =   ++ dfn ; \n     for   ( int   i   =   1 ;   i   <=   LGS ;   i   +=   1 ) \n     { \n         pre [ a ][ i ]   =   pre [ pre [ a ][ i   -   1 ]][ i   -   1 ]; \n         mx [ a ][ i ]   =   min ( mx [ a ][ i   -   1 ],   mx [ pre [ a ][ i   -   1 ]][ i   -   1 ]); \n     } \n     for   ( int   i   =   g . head [ a ];   ~ i ;   i   =   g . nxt [ i ]) \n         if   ( g [ i ]   !=   fa )   mx [ g [ i ]][ 0 ]   =   g . w [ i ],   Init ( g [ i ],   a );  }  int   lca ( int   a ,   int   b )  { \n     MX   =   INT_MAX ; \n     if   ( dep [ a ]   >   dep [ b ])   swap ( a ,   b ); \n     for   ( int   i   =   LGS ;   i   >=   0 ;   i   -=   1 ) \n         if   ( dep [ pre [ b ][ i ]]   >=   dep [ a ]) \n             MX   =   min ( MX ,   mx [ b ][ i ]),   b   =   pre [ b ][ i ]; \n     if   ( a   ==   b )   return   a ; \n     for   ( int   i   =   LGS ;   i   >=   0 ;   i   -=   1 ) \n         if   ( pre [ a ][ i ]   !=   pre [ b ][ i ]) \n         { \n             MX   =   min ( MX ,   min ( mx [ a ][ i ],   mx [ b ][ i ])); \n             a   =   pre [ a ][ i ],   b   =   pre [ b ][ i ]; \n         } \n     return   pre [ a ][ 0 ];  }  bool   cmp ( int   a ,   int   b ){ return   id [ a ]   <   id [ b ];}  void   Dp ( int   a )  { \n     f [ a ]   =   0 ; \n     for   ( int   i   =   g . head [ a ];   ~ i ;   i   =   g . nxt [ i ]) \n     { \n         Dp ( g [ i ]); \n         if   ( book [ g [ i ]])   f [ a ]   +=   g . w [ i ]; \n         else   f [ a ]   +=   min (( LL ) g . w [ i ],   f [ g [ i ]]); \n     }  }  int   main   ( int   argc ,   char   const *   argv [])  { \n     IN ( n ); \n     for   ( int   i   =   1 ,   a ,   b ,   c ;   i   <   n ;   i   +=   1 ) \n         IN ( a ),   IN ( b ),   IN ( c ),   g . push ( a ,   b ,   c ),   g . push ( b ,   a ,   c ); \n     Init ( 1 ,   0 ),   IN ( m ); \n     while   ( m -- ) \n     { \n         IN ( k ); \n         for   ( int   i   =   1 ;   i   <=   k ;   i   +=   1 )   IN ( h [ i ]),   book [ h [ i ]]   =   1 ; \n         sort ( h   +   1 ,   h   +   1   +   k ,   cmp ); \n         sta [ top   =   1 ]   =   1 ,   g . sz   =   0 ,   g . head [ 1 ]   =   - 1 ; \n         for   ( int   i   =   1 ,   l ;   i   <=   k ;   i   +=   1 )   if   ( h [ i ]   !=   1 ) \n         { \n             l   =   lca ( sta [ top ],   h [ i ]); \n             if   ( l   !=   sta [ top ]) \n             { \n                 while   ( id [ l ]   <   id [ sta [ top   -   1 ]]) \n                 { \n                     lca ( sta [ top   -   1 ],   sta [ top ]); \n                     g . push ( sta [ top   -   1 ],   sta [ top ],   MX ); \n                     top -- ; \n                 } \n                 if   ( id [ l ]   >   id [ sta [ top   -   1 ]]) \n                 { \n                     g . head [ l ]   =   - 1   , lca ( l ,   sta [ top ]); \n                     g . push ( l ,   sta [ top ],   MX ),   sta [ top ]   =   l ; \n                 } \n                 else   lca ( l ,   sta [ top ]),   g . push ( l ,   sta [ top -- ],   MX ); \n             } \n             g . head [ h [ i ]]   =   - 1 ,   sta [ ++ top ]   =   h [ i ]; \n         } \n         for   ( int   i   =   1 ;   i   <   top ;   i   +=   1 ) \n             lca ( sta [ i ],   sta [ i   +   1 ]),   g . push ( sta [ i ],   sta [ i   +   1 ],   MX ); \n         Dp ( 1 ),   printf ( \"%lld \\n \" ,   f [ 1 ]); \n         for   ( int   i   =   1 ;   i   <=   k ;   i   +=   1 )   book [ h [ i ]]   =   0 ; \n     } \n     return   0 ;  }",
            "title": "BZOJ - 2286 \u6d88\u8017\u6218"
        },
        {
            "location": "/data-structure/intermediate/virtual-tree/#bzoj-3611",
            "text": "\u4ee3\u7801\uff1a  #include   <bits/stdc++.h>  #define NS (1000005)  #define LGS (20)  #define INF (100000000)  using   namespace   std ;  typedef   long   long    LL ;  template   < typename   _Tp >   inline   void   IN ( _Tp &   dig )  { \n     char   c ;   bool   flag   =   0 ;   dig   =   0 ; \n     while   ( c   =   getchar (),   ! isdigit ( c ))   if   ( c   ==   '-' )   flag   =   1 ; \n     while   ( isdigit ( c ))   dig   =   dig   *   10   +   c   -   '0' ,   c   =   getchar (); \n     if   ( flag )   dig   =   - dig ;  }  struct   graph  { \n     int   head [ NS ],   nxt [ NS   <<   1 ],   to [ NS   <<   1 ],   sz ; \n     void   init (){ memset ( head ,   - 1 ,   sizeof ( head )),   sz   =   0 ;} \n     graph (){ init ();} \n     void   push ( int   a ,   int   b ) \n     { \n         nxt [ sz ]   =   head [ a ],   to [ sz ]   =   b ,   head [ a ]   =   sz ++ ; \n     } \n     int   operator   []   ( const   int   a ){ return   to [ a ];}  } g ;  int   n ,   id [ NS ],   dfn ,   q ,   k ,   h [ NS ],   sz [ NS ],   mn [ NS ],   mx [ NS ],   mnans ,   mxans ;  int   pre [ NS ][ LGS   +   1 ],   dep [ NS ];  int   sta [ NS ],   top ;  bool   book [ NS ];  LL   f [ NS ],   tot ;  void   Init ( int   a ,   int   fa )  { \n     pre [ a ][ 0 ]   =   fa ,   dep [ a ]   =   dep [ fa ]   +   1 ,   id [ a ]   =   ++ dfn ; \n     for   ( int   i   =   1 ;   i   <=   LGS ;   i   +=   1 ) \n         pre [ a ][ i ]   =   pre [ pre [ a ][ i   -   1 ]][ i   -   1 ]; \n     for   ( int   i   =   g . head [ a ];   ~ i ;   i   =   g . nxt [ i ]) \n         if   ( g [ i ]   !=   fa )   Init ( g [ i ],   a );  }  int   lca ( int   a ,   int   b )  { \n     if   ( dep [ a ]   >   dep [ b ])   swap ( a , b ); \n     for   ( int   i   =   LGS ;   i   >=   0 ;   i   -=   1 ) \n         if   ( dep [ pre [ b ][ i ]]   >=   dep [ a ]) \n             b   =   pre [ b ][ i ]; \n     if   ( a   ==   b )   return   a ; \n     for   ( int   i   =   LGS ;   i   >=   0 ;   i   -=   1 ) \n         if   ( pre [ a ][ i ]   !=   pre [ b ][ i ]) \n             a   =   pre [ a ][ i ],   b   =   pre [ b ][ i ]; \n     return   pre [ a ][ 0 ];  }  bool   cmp ( int   a ,   int   b ){ return   id [ a ]   <   id [ b ];}  void   Dp ( int   a )  { \n     sz [ a ]   =   book [ a ],   f [ a ]   =   0 ; \n     if   ( book [ a ])   mn [ a ]   =   mx [ a ]   =   0 ; \n     else   mn [ a ]   =   INF ,   mx [ a ]   =   - INF ; \n     for   ( int   i   =   g . head [ a ],   l ;   ~ i ;   i   =   g . nxt [ i ]) \n     { \n         Dp ( g [ i ]),   l   =   dep [ g [ i ]]   -   dep [ a ]; \n         tot   +=   ( f [ a ]   +   sz [ a ]   *   l )   *   sz [ g [ i ]]   +   f [ g [ i ]]   *   sz [ a ]; \n         sz [ a ]   +=   sz [ g [ i ]],   f [ a ]   +=   f [ g [ i ]]   +   l   *   sz [ g [ i ]]; \n         mnans   =   min ( mnans ,   mn [ a ]   +   mn [ g [ i ]]   +   l ); \n         mxans   =   max ( mxans ,   mx [ a ]   +   mx [ g [ i ]]   +   l ); \n         mn [ a ]   =   min ( mn [ a ],   mn [ g [ i ]]   +   l ); \n         mx [ a ]   =   max ( mx [ a ],   mx [ g [ i ]]   +   l ); \n     }  }  int   main   ( int   argc ,   char   const *   argv [])  { \n     IN ( n ); \n     for   ( int   i   =   1 ,   a ,   b ;   i   <   n ;   i   +=   1 ) \n         IN ( a ),   IN ( b ),   g . push ( a ,   b ),   g . push ( b ,   a ); \n     Init ( 1 ,   0 ),   IN ( q ); \n     while   ( q -- ) \n     { \n         IN ( k ); \n         for   ( int   i   =   1 ;   i   <=   k ;   i   +=   1 )   IN ( h [ i ]),   book [ h [ i ]]   =   1 ; \n         sort ( h   +   1 ,   h   +   1   +   k ,   cmp ); \n         sta [ top   =   1 ]   =   1 ,   g . sz   =   0 ,   g . head [ 1 ]   =   - 1 ; \n         for   ( int   i   =   1 ,   l ;   i   <=   k ;   i   +=   1 )   if   ( h [ i ]   !=   1 ) \n         { \n             l   =   lca ( h [ i ],   sta [ top ]); \n             if   ( l   !=   sta [ top ]) \n             { \n                 while   ( id [ l ]   <   id [ sta [ top   -   1 ]]) \n                     g . push ( sta [ top   -   1 ],   sta [ top ]),   top -- ; \n                 if   ( id [ l ]   >   id [ sta [ top   -   1 ]]) \n                     g . head [ l ]   =   - 1 ,   g . push ( l ,   sta [ top ]),   sta [ top ]   =   l ; \n                 else   g . push ( l ,   sta [ top -- ]); \n             } \n             g . head [ h [ i ]]   =   - 1 ,   sta [ ++ top ]   =   h [ i ]; \n         } \n         for   ( int   i   =   1 ;   i   <   top ;   i   +=   1 )   g . push ( sta [ i ],   sta [ i   +   1 ]); \n         mnans   =   INF ,   mxans   =   - INF ,   tot   =   0 ,   Dp ( 1 ); \n         printf ( \"%lld %d %d \\n \" ,   tot ,   mnans ,   mxans ); \n         for   ( int   i   =   1 ;   i   <=   k ;   i   +=   1 )   book [ h [ i ]]   =   0 ; \n     } \n     return   0 ;  }",
            "title": "BZOJ - 3611 \u5927\u5de5\u7a0b"
        },
        {
            "location": "/data-structure/intermediate/virtual-tree/#cf613d-kingdom-and-its-cities",
            "text": "\u4ee3\u7801\uff1a  #include   <bits/stdc++.h>  #define NS (100005)  #define LGS (17)  using   namespace   std ;  template   < typename   _Tp >   inline   void   IN ( _Tp &   dig )  { \n     char   c ;   bool   flag   =   0 ;   dig   =   0 ; \n     while   ( c   =   getchar (),   ! isdigit ( c ))   if   ( c   ==   '-' )   flag   =   1 ; \n     while   ( isdigit ( c ))   dig   =   dig   *   10   +   c   -   '0' ,   c   =   getchar (); \n     if   ( flag )   dig   =   - dig ;  }  struct   graph  { \n     int   head [ NS ],   nxt [ NS   <<   1 ],   to [ NS   <<   1 ],   sz ; \n     void   init (){ memset ( head ,   - 1 ,   sizeof ( head )),   sz   =   0 ;} \n     graph (){ init ();} \n     void   push ( int   a ,   int   b ) \n     { \n         nxt [ sz ]   =   head [ a ],   to [ sz ]   =   b ,   head [ a ]   =   sz ++ ; \n     } \n     int   operator   []   ( const   int   a ){ return   to [ a ];}  } g ;  int   n ,   id [ NS ],   dfn ,   q ,   k ,   h [ NS ],   c [ NS ];  int   pre [ NS ][ LGS   +   1 ],   dep [ NS ];  int   sta [ NS ],   top ;  bool   book [ NS ];  void   Init ( int   a ,   int   fa )  { \n     pre [ a ][ 0 ]   =   fa ,   dep [ a ]   =   dep [ fa ]   +   1 ,   id [ a ]   =   ++ dfn ; \n     for   ( int   i   =   1 ;   i   <=   LGS ;   i   +=   1 ) \n         pre [ a ][ i ]   =   pre [ pre [ a ][ i   -   1 ]][ i   -   1 ]; \n     for   ( int   i   =   g . head [ a ];   ~ i ;   i   =   g . nxt [ i ]) \n         if   ( g [ i ]   !=   fa )   Init ( g [ i ],   a );  }  int   lca ( int   a ,   int   b )  { \n     if   ( dep [ a ]   >   dep [ b ])   swap ( a ,   b ); \n     for   ( int   i   =   LGS ;   i   >=   0 ;   i   -=   1 ) \n         if   ( dep [ pre [ b ][ i ]]   >=   dep [ a ]) \n             b   =   pre [ b ][ i ]; \n     if   ( a   ==   b )   return   a ; \n     for   ( int   i   =   LGS ;   i   >=   0 ;   i   -=   1 ) \n         if   ( pre [ a ][ i ]   !=   pre [ b ][ i ]) \n             a   =   pre [ a ][ i ],   b   =   pre [ b ][ i ]; \n     return   pre [ a ][ 0 ];  }  bool   cmp ( int   a ,   int   b ){ return   id [ a ]   <   id [ b ];}  int   Dp ( int   a )  { \n     int   tot   =   0 ,   ans   =   0 ; \n     for   ( int   i   =   g . head [ a ];   ~ i ;   i   =   g . nxt [ i ])   ans   +=   Dp ( g [ i ]),   tot   +=   c [ g [ i ]]; \n     if   ( book [ a ])   c [ a ]   =   1 ,   ans   +=   tot ; \n     else   if   ( tot   >   1 )   c [ a ]   =   0 ,   ans ++ ; \n     else   c [ a ]   =   tot ; \n     return   ans ;  }  int   main   ( int   argc ,   char   const *   argv [])  { \n     IN ( n ); \n     for   ( int   i   =   1 ,   a ,   b ;   i   <   n ;   i   +=   1 ) \n         IN ( a ),   IN ( b ),   g . push ( a ,   b ),   g . push ( b ,   a ); \n     Init ( 1 ,   0 ),   IN ( q ); \n     while   ( q -- ) \n     { \n         IN ( k ); \n         for   ( int   i   =   1 ;   i   <=   k ;   i   +=   1 )   IN ( h [ i ]),   book [ h [ i ]]   =   1 ; \n         for   ( int   i   =   1 ;   i   <=   k ;   i   +=   1 ) \n             if   ( book [ pre [ h [ i ]][ 0 ]])   { puts ( \"-1\" );   goto   end ;} \n         sort ( h   +   1 ,   h   +   1   +   k ,   cmp ); \n         sta [ top   =   1 ]   =   1 ,   g . sz   =   0 ,   g . head [ 1 ]   =   - 1 ; \n         for   ( int   i   =   1 ,   l ;   i   <=   k ;   i   +=   1 )   if   ( h [ i ]   !=   1 ) \n         { \n             l   =   lca ( h [ i ],   sta [ top ]); \n             if   ( l   !=   sta [ top ]) \n             { \n                 while   ( id [ l ]   <   id [ sta [ top   -   1 ]]) \n                     g . push ( sta [ top   -   1 ],   sta [ top ]),   top -- ; \n                 if   ( id [ l ]   >   id [ sta [ top   -   1 ]]) \n                     g . head [ l ]   =   - 1 ,   g . push ( l ,   sta [ top ]),   sta [ top ]   =   l ; \n                 else   g . push ( l ,   sta [ top -- ]); \n             } \n             g . head [ h [ i ]]   =   - 1 ,   sta [ ++ top ]   =   h [ i ]; \n         } \n         for   ( int   i   =   1 ;   i   <   top ;   i   +=   1 )   g . push ( sta [ i ],   sta [ i   +   1 ]); \n         printf ( \"%d \\n \" ,   Dp ( 1 )); \n         end   :   for   ( int   i   =   1 ;   i   <=   k ;   i   +=   1 )   book [ h [ i ]]   =   0 ; \n     } \n     return   0 ;  }",
            "title": "CF613D Kingdom and its Cities"
        },
        {
            "location": "/data-structure/intermediate/virtual-tree/#bzoj-3572",
            "text": "\u4e27\u5fc3\u75c5\u72c2\u554a  \u4ee3\u7801\uff1a  #include   <bits/stdc++.h>  #define NS (300005)  #define LGS (19)  #define FIR first  #define SEC second  using   namespace   std ;  typedef   pair < int , int >   PII ;  template   < typename   _Tp > inline   void   IN ( _Tp &   dig )  { \n     char   c ;   bool   flag   =   0 ;   dig   =   0 ; \n     while   ( c   =   getchar (),   ! isdigit ( c ))   if   ( c   ==   '-' )   flag   =   1 ; \n     while   ( isdigit ( c ))   dig   =   dig   *   10   +   c   -   '0' ,   c   =   getchar (); \n     if   ( flag )   dig   =   - dig ;  }  struct   graph  { \n     int   head [ NS ],   nxt [ NS   <<   1 ],   to [ NS   <<   1 ],   sz ; \n     void   init (){ memset ( head ,   - 1 ,   sizeof ( head )),   sz   =   0 ;} \n     graph (){ init ();} \n     void   push ( int   a ,   int   b ) \n     { \n         nxt [ sz ]   =   head [ a ],   to [ sz ]   =   b ,   head [ a ]   =   sz ++ ; \n     } \n     int   operator   []   ( const   int   a ){ return   to [ a ];}  } g ;  int   n ,   m ,   q ,   h [ NS ],   arr [ NS ],   ans [ NS ];  int   pre [ NS ][ LGS   +   1 ],   dep [ NS ],   id [ NS ],   dfn ,   sz [ NS ];  int   st [ NS ],   top ;  bool   book [ NS ];  PII   mx [ NS ];  bool   cmp ( int   a , int   b )  { \n     return   id [ a ]   <   id [ b ];  }  void   Init ( int   a ,   int   fa )  { \n     pre [ a ][ 0 ]   =   fa ,   dep [ a ]   =   dep [ fa ]   +   1 ,   id [ a ]   =   ++ dfn ,   sz [ a ]   =   1 ; \n     for   ( int   i   =   1 ;   i   <=   LGS ;   i   +=   1 )   pre [ a ][ i ]   =   pre [ pre [ a ][ i   -   1 ]][ i   -   1 ]; \n     for   ( int   i   =   g . head [ a ];   ~ i ;   i   =   g . nxt [ i ]) \n         if   ( g [ i ]   !=   fa )   Init ( g [ i ],   a ),   sz [ a ]   +=   sz [ g [ i ]];  }  int   jump ( int   a ,   int   k )  { \n     for   ( int   i   =   0 ;   i   <=   LGS ;   i   +=   1 ) \n         if   (( k   >>   i )   &   1 )   a   =   pre [ a ][ i ]; \n     return   a ;  }  int   lca ( int   a ,   int   b )  { \n     if   ( dep [ a ]   >   dep [ b ])   swap ( a ,   b ); \n     b   =   jump ( b ,   dep [ b ]   -   dep [ a ]); \n     if   ( a   ==   b )   return   a ; \n     for   ( int   i   =   LGS ;   i   >=   0 ;   i   -=   1 ) \n         if   ( pre [ a ][ i ]   !=   pre [ b ][ i ]) \n             a   =   pre [ a ][ i ],   b   =   pre [ b ][ i ]; \n     return   pre [ a ][ 0 ];  }  void   dfs1 ( int   a )  { \n     if   ( book [ a ])   mx [ a ]   =   PII ( 0 ,   a ); \n     else   mx [ a ]   =   PII ( 1e8 ,   0 ); \n     for   ( int   i   =   g . head [ a ];   ~ i ;   i   =   g . nxt [ i ]) \n     { \n         dfs1 ( g [ i ]); \n         PII   tmp   =   mx [ g [ i ]]; \n         tmp . FIR   =   dep [ mx [ g [ i ]]. SEC ]   -   dep [ a ]; \n         mx [ a ]   =   min ( mx [ a ],   tmp ); \n     }  }  void   dfs2 ( int   a )  { \n     for   ( int   i   =   g . head [ a ];   ~ i ;   i   =   g . nxt [ i ]) \n     { \n         PII   tmp   =   mx [ a ]; \n         tmp . FIR   +=   dep [ g [ i ]]   -   dep [ a ]; \n         mx [ g [ i ]]   =   min ( mx [ g [ i ]],   tmp ),   dfs2 ( g [ i ]); \n     } \n     ans [ mx [ a ]. SEC ]   =   max ( ans [ mx [ a ]. SEC ],   sz [ a ]);  }  void   dfs3 ( int   a )  { \n     for   ( int   i   =   g . head [ a ],   x ,   y ,   dis ,   z ;   ~ i ;   i   =   g . nxt [ i ]) \n     { \n         if   ( x   =   mx [ a ]. SEC ,   y   =   mx [ g [ i ]]. SEC ,   x   !=   y ) \n         { \n             dis   =   dep [ x ]   +   dep [ y ]   -   ( dep [ lca ( x ,   y )]   <<   1 ); \n             z   =   jump ( g [ i ],   ( dis   >>   1 )   -   mx [ g [ i ]]. FIR ); \n             if   ( dis   &   1 )   ans [ x ]   -=   sz [ z ]; \n             else \n             { \n                 if   ( z   !=   a   &&   z   !=   g [ i ]) \n                     z   =   jump ( g [ i ],   ( dis   >>   1 )   -   mx [ g [ i ]]. FIR   -   ( x   <   y )); \n                 else   if   ( z   ==   a ) \n                     z   =   jump ( g [ i ],   ( dis   >>   1 )   -   mx [ g [ i ]]. FIR   -   1 ); \n                 ans [ x ]   -=   sz [ z ]; \n             } \n             if   ( g [ i ]   !=   z )   ans [ y ]   +=   sz [ z ]   -   sz [ g [ i ]]; \n         } \n         dfs3 ( g [ i ]); \n     }  }  int   main   ( int   argc ,   char   const *   argv [])  { \n     IN ( n ); \n     for   ( int   i   =   1 ,   a ,   b ;   i   <   n ;   i   +=   1 ) \n         IN ( a ),   IN ( b ),   g . push ( a ,   b ),   g . push ( b ,   a ); \n     Init ( 1 ,   0 ),   IN ( q ); \n     while   ( q -- ) \n     { \n         IN ( m ),   g . sz   =   0 ; \n         for   ( int   i   =   1 ;   i   <=   m ;   i   +=   1 ) \n             IN ( h [ i ]),   book [ h [ i ]]   =   1 ,   ans [ arr [ i ]   =   h [ i ]]   =   0 ; \n         sort ( h   +   1 ,   h   +   1   +   m ,   cmp ),   st [ top   =   1 ]   =   1 ,   g . head [ 1 ]   =   - 1 ; \n         for   ( int   i   =   1 ,   l ;   i   <=   m ;   i   +=   1 ) \n         { \n             if   ( h [ i ]   ==   1 )   continue ; \n             l   =   lca ( st [ top ],   h [ i ]); \n             if   ( l   !=   st [ top ]) \n             { \n                 while   ( id [ l ]   <   id [ st [ top   -   1 ]]) \n                     g . push ( st [ top   -   1 ],   st [ top ]),   top -- ; \n                 if   ( id [ l ]   >   id [ st [ top   -   1 ]]) \n                     g . head [ l ]   =   - 1 ,   g . push ( l ,   st [ top ]),   st [ top ]   =   l ; \n                 else   g . push ( l ,   st [ top -- ]); \n             } \n             g . head [ h [ i ]]   =   - 1 ,   st [ ++ top ]   =   h [ i ]; \n         } \n         for   ( int   i   =   1 ;   i   <   top ;   i   +=   1 )   g . push ( st [ i ],   st [ i   +   1 ]); \n         dfs1 ( 1 ),   dfs2 ( 1 ),   dfs3 ( 1 ); \n         for   ( int   i   =   1 ;   i   <=   m ;   i   +=   1 )   printf ( \"%d \" ,   ans [ arr [ i ]]); \n         putchar ( 10 ); \n         for   ( int   i   =   1 ;   i   <=   m ;   i   +=   1 )   book [ h [ i ]]   =   0 ; \n     } \n     return   0 ;  }",
            "title": "BZOJ - 3572 \u4e16\u754c\u6811"
        },
        {
            "location": "/data-structure/advanced/seg-in-seg/",
            "text": "",
            "title": "\u7ebf\u6bb5\u6811\u5957\u7ebf\u6bb5\u6811"
        },
        {
            "location": "/data-structure/advanced/seg-in-balanced/",
            "text": "",
            "title": "\u7ebf\u6bb5\u6811\u5957\u5e73\u8861\u6811"
        },
        {
            "location": "/data-structure/advanced/balanced-in-seg/",
            "text": "",
            "title": "\u5e73\u8861\u6811\u5957\u7ebf\u6bb5\u6811"
        },
        {
            "location": "/data-structure/advanced/avl/",
            "text": "",
            "title": "AVL\u6811"
        },
        {
            "location": "/data-structure/advanced/dividin/",
            "text": "",
            "title": "\u5212\u5206\u6811"
        },
        {
            "location": "/data-structure/advanced/k-dtree/",
            "text": "",
            "title": "K-Dtree"
        },
        {
            "location": "/data-structure/advanced/persistent-seg/",
            "text": "",
            "title": "\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811"
        },
        {
            "location": "/data-structure/advanced/persistent-block-array/",
            "text": "",
            "title": "\u53ef\u6301\u4e45\u5316\u5757\u72b6\u6570\u7ec4"
        },
        {
            "location": "/data-structure/advanced/persistent-balanced/",
            "text": "",
            "title": "\u53ef\u6301\u4e45\u5316\u5e73\u8861\u6811"
        },
        {
            "location": "/data-structure/advanced/persistent-trie/",
            "text": "",
            "title": "\u53ef\u6301\u4e45\u5316\u5b57\u5178\u6811"
        },
        {
            "location": "/data-structure/advanced/lct/",
            "text": "",
            "title": "Link Cut Tree"
        },
        {
            "location": "/data-structure/advanced/ett/",
            "text": "",
            "title": "Euler Tour Tree"
        },
        {
            "location": "/data-structure/advanced/tree-decompose/",
            "text": "",
            "title": "\u6811\u5206\u5757"
        },
        {
            "location": "/graph/",
            "text": "",
            "title": "\u56fe\u8bba\u90e8\u5206\u7b80\u4ecb"
        },
        {
            "location": "/graph/basic/",
            "text": "\u56fe\u662f\u600e\u4e48\u5b58\u7684\uff1f\n\u00b6\n\n\n\u76f4\u63a5\u5b58\u8fb9\n\u00b6\n\n\n\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u6211\u4eec\u5f00\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u91cc\u6bcf\u4e2a\u5143\u7d20\u662f\u56fe\u7684\u4e00\u6761\u8fb9\u3002\n\n\n\u8fd9\u6837\u505a\u6709\u4e2a\u7f3a\u70b9\uff0c\u6bcf\u6b21\u60f3\u8981\u77e5\u9053\u4e24\u4e2a\u70b9\u4e4b\u95f4\u662f\u5426\u6709\u8fde\u8fb9\uff08\u6216\u8005\u8bf4\u4e00\u6761\u8fb9\u662f\u5426\u5b58\u5728\uff09\uff0c\u90fd\u9700\u8981\u5728\u6570\u7ec4\u91cc\u8fdb\u884c\u4e00\u756a\u67e5\u627e\u3002\u800c\u4e14\u5982\u679c\u6ca1\u6709\u5bf9\u8fb9\u4e8b\u5148\u6392\u5e8f\u7684\u8bdd\uff0c\u5c31\u4e0d\u80fd\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u7684\u65b9\u6cd5\uff08\nO(logn)\nO(logn)\n\uff09\uff0c\u800c\u662f\u6bcf\u6b21\u53ea\u80fd\u6309\u987a\u5e8f\u627e\uff08\nO(n)\nO(n)\n\uff09\uff0c\u6210\u672c\u8f83\u9ad8\u3002\n\n\n\u4ec0\u4e48\u65f6\u5019\u4f1a\u7528\u5230\u8fd9\u4e2a\u65b9\u6cd5\u5462\uff1f\u6700\u7b80\u5355\u7684\u4e00\u4e2a\u4f8b\u5b50\u662f\u4f7f\u7528 Kruskal \u7b97\u6cd5\u6c42 \n\u6700\u5c0f\u751f\u6210\u6811\n \u7684\u65f6\u5019\u3001\n\n\n\u90bb\u63a5\u77e9\u9635\n\u00b6\n\n\n\u90bb\u63a5\u77e9\u9635\u7684\u82f1\u6587\u540d\u662f adjacency matrix\u3002\u5b83\u7684\u5f62\u5f0f\u662f \nbool adj[n][n]\n\uff0c\u8fd9\u91cc\u9762 \nn\n \u662f\u8282\u70b9\u4e2a\u6570\uff0c\nadj[i][j]\n \u8868\u793a i \u548c j \u4e4b\u95f4\u662f\u5426\u6709\u8fb9\u3002\n\n\n\u5982\u679c\u8fb9\u6709\u6743\u503c\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7528 \nint adj[n][n]\n\uff0c\u76f4\u63a5\u628a\u8fb9\u6743\u5b58\u8fdb\u53bb\u3002\n\n\n\u5b83\u7684\u4f18\u70b9\u662f\u53ef\u4ee5\u5728 \nO(1)\nO(1)\n \u65f6\u95f4\u5185\u5f97\u5230\u4e00\u6761\u8fb9\u662f\u5426\u5b58\u5728\uff0c\u7f3a\u70b9\u662f\u9700\u8981\u5360\u7528 \nO(n^2)\nO(n^2)\n \u7684\u7a7a\u95f4\u3002\u5bf9\u4e8e\u4e00\u4e2a\u7a00\u758f\u7684\u56fe\uff08\u8fb9\u76f8\u5bf9\u4e8e\u70b9\u6570\u7684\u5e73\u65b9\u6bd4\u8f83\u5c11\uff09\u6765\u8bf4\uff0c\u7528\u90bb\u63a5\u77e9\u9635\u6765\u5b58\u7684\u8bdd\uff0c\u6210\u672c\u504f\u9ad8\u3002\n\n\n\u90bb\u63a5\u8868\n\u00b6\n\n\n\u90bb\u63a5\u8868\u82f1\u6587\u540d\u662f adjacency list\u3002\u5b83\u7684\u5f62\u5f0f\u662f \nvector adj[n]\n\uff0c\u7528 \nadj[i]\n \u5b58\u4ee5 i \u4e3a\u8d77\u70b9\u7684\u8fb9\u3002\n\n\n\u7528 vector \u65e0\u6cd5\u79d1\u5b66\u5730\u5220\u9664\uff0c\u6240\u4ee5\u5e38\u7528 list \u5b9e\u73b0\u3002\n\n\n\u5b83\u7684\u7279\u70b9\u662f\u53ef\u4ee5\u7528\u6765\u6309\u987a\u5e8f\u8bbf\u95ee\u4e00\u4e2a\u7ed3\u70b9\u7684\u51fa\u8fb9\uff08\u6216\u8005\u5165\u8fb9\uff09\u3002\n\n\n\u524d\u5411\u661f\n\u00b6\n\n\n\u4e3a\u4ec0\u4e48\u5b83\u641c\u4e0d\u5230\u82f1\u6587\u540d\u5462\uff1f\u56e0\u4e3a\u662f\u4e2d\u56fd\u73a9\u5bb6\u4e71\u641e\u51fa\u6765\u7684\u3002\n\n\n\u9996\u5148\u4ecb\u7ecd\u4e00\u4e0b\u94fe\u5f0f\u524d\u5411\u661f\uff0c\u672c\u8d28\u4e0a\u662f\u7528\u5355\u5411\u94fe\u8868\u5b9e\u73b0\u7684\u90bb\u63a5\u8868\u3002\n\n\n\u5f62\u5f0f\u4e0a\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\uff1a\nstruct edge {edfge *pre, int to;} *head[N], edge[M]'\n\n\n\u8fd9\u4e2a\u7ed3\u6784\u5e7f\u6cdb\u51fa\u73b0\u4e8e\u7b97\u6cd5\u7ade\u8d5b\u9009\u624b\u7684\u4ee3\u7801\u4e2d\uff0c\u7f16\u5199\u7b80\u6d01\u800c\u4e14\u5bf9\u4e8e\u5927\u591a\u6570\u9898\u76ee\u6548\u7387\u8db3\u591f\u9ad8\u3002\n\n\n\u5176\u4e2d \nhead[i]\n \u7528\u6765\u5b58\u4ee5 i \u4e3a\u8d77\u70b9\u7684\u8fb9\uff0c\nedge\n \u6570\u7ec4\u662f\u8fb9\u8868\u3002\n\n\n\u90a3\u4e48\u4ec0\u4e48\u662f\u524d\u5411\u661f\u5462\uff1f\u4e8b\u5148\u628a \nedge\n \u6570\u7ec4\u6392\u4e2a\u5e8f\u5373\u53ef\u3002\u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528 \n\u57fa\u6570\u6392\u5e8f\n \u505a\u5230 \nO(m)\nO(m)\n\u3002\n\n\n\u4e00\u4e9b\u8ddf\u56fe\u6709\u5173\u7684\u5b9a\u4e49\n\u00b6\n\n\n\u8def\u5f84\n\u00b6\n\n\npath\uff0c\u662f\u6307\u4e00\u4e2a\u8fb9\u7684\u5e8f\u5217\uff0c\u5176\u4e2d\u7684\u8fb9\u9996\u5c3e\u76f8\u8fde\u3002\n\n\n\u7b80\u5355\u8def\u5f84\n\u00b6\n\n\nsimple path\uff0c\u662f\u6bcf\u6761\u8fb9\u53ea\u7ecf\u8fc7\u4e86\u4e00\u6b21\u7684\u8def\u5f84\u3002\n\n\n\u56de\u8def\n\u00b6\n\n\ncycle\uff0c\u4e5f\u79f0\u4e3a \n\u73af\n\uff0c\u662f\u8d77\u70b9\u548c\u7ec8\u70b9\u76f8\u540c\u7684\u8def\u5f84\u3002\n\n\n\u7b80\u5355\u56de\u8def\n\u00b6\n\n\n\u56fe\u7684\u5b9a\u70b9\u5e8f\u5217\u4e2d\uff0c\u9664\u4e86\u8d77\u70b9\u548c\u7ec8\u70b9\u76f8\u540c\u5916\uff0c\u5176\u4f59\u9876\u70b9\u4e0d\u91cd\u590d\u7684\u56de\u8def\u3002\n\n\n\u8fde\u901a\n\u00b6\n\n\n\u4e24\u4e2a\u70b9\u8fde\u901a\n\u00b6\n\n\n\u65e0\u5411\u56fe\u4e2d\u70b9 \nu\n \u548c \nv\n \u8fde\u901a\u662f\u6307\u5b58\u5728\u4e00\u6761 \nu\n \u5230 \nv\n \u7684\u8def\u5f84\u3002\n\n\n\u56fe\u8fde\u901a\n\u00b6\n\n\n\u5982\u679c\u65e0\u5411\u56fe G \u4e2d\u4efb\u610f\u4e24\u4e2a\u8282\u70b9\u8fde\u901a\uff0c\u79f0\u5176\u4e3a\u662f\u8fde\u901a\u7684\u3002\n\n\n\u53ef\u8fbe\n\u00b6\n\n\n\u6709\u5411\u56fe\u4e2d\u70b9 \nu\n \u5230 \nv\n \u53ef\u8fbe\u662f\u6307\u5b58\u5728\u4e00\u6761 \nu\n \u5230 \nv\n \u7684\u8def\u5f84\u3002\n\n\n\u5f3a\u8fde\u901a\n\u00b6\n\n\n\u6709\u5411\u56fe G \u5f3a\u8fde\u901a\u662f\u6307\uff0cG \u4e2d\u4efb\u610f\u4e24\u4e2a\u8282\u70b9\u8fde\u901a\u3002\n\n\n\u5f31\u8fde\u901a\n\u00b6\n\n\n\u6709\u5411\u56fe G \u5f3a\u8fde\u901a\u662f\u6307\uff0cG \u4e2d\u7684\u6240\u6709\u8fb9\u66ff\u6362\u4e3a\u65e0\u5411\u8fb9\u540e\uff0cG \u4e3a\u8fde\u901a\u56fe\u3002\n\n\n\u5b50\u56fe\n\u00b6\n\n\n\u9009\u53d6\u4e00\u4e2a\u8282\u70b9\u7684\u5b50\u96c6\u548c\u8fb9\u7684\u5b50\u96c6\u6784\u6210\u7684\u56fe\u3002\n\n\n\u751f\u6210\u5b50\u56fe\n\u00b6\n\n\n\u9009\u53d6\u7684\u5b50\u56fe\u7684\u8282\u70b9\u548c\u539f\u56fe\u4e00\u6837\u3002\n\n\n\u5bfc\u51fa\u5b50\u56fe\n\u00b6\n\n\n\u9009\u53d6\u4e00\u4e2a\u8282\u70b9\u7684\u5b50\u96c6\uff0c\u518d\u9009\u53d6\u8fd9\u4e9b\u8282\u70b9\u76f8\u5173\u8054\u7684\u8fb9\u7684\u96c6\u5408\u6784\u6210\u7684\u56fe\u3002\n\n\n\u8fb9\u5bfc\u51fa\u5b50\u56fe\n\u00b6\n\n\n\u9009\u53d6\u4e00\u4e2a\u8fb9\u7684\u5b50\u96c6\uff0c\u518d\u9009\u53d6\u8fd9\u4e9b\u8fb9\u76f8\u5173\u8054\u7684\u8282\u70b9\u7684\u96c6\u5408\uff0c\u6784\u6210\u7684\u56fe\u3002\n\n\n\u8fde\u901a\u5b50\u56fe\n\u00b6\n\n\n\uff08\u4e00\u4e2a\u65e0\u5411\u56fe\u7684\uff09\u8fde\u901a\u7684\u5b50\u56fe\u3002\n\n\n\u8fde\u901a\u5206\u91cf\n\u00b6\n\n\n\uff08\u4e00\u4e2a\u65e0\u5411\u56fe\u7684\uff09\u6781\u5927\u7684\u8fde\u901a\u5b50\u56fe\u3002\n\n\n\u3010\u6ce8\u3011\uff1a\u6781\u5927\u662f\u6307\u6dfb\u52a0\u4efb\u4f55\u8282\u70b9\u6216\u8005\u8fb9\u540e\u90fd\u4e0d\u518d\u6ee1\u8db3\n\n\n\u7a00\u758f\u56fe\n\u00b6\n\n\nm = \\Theta(n)\nm = \\Theta(n)\n \u7684\u56fe\uff0c\u6216\u8005\u6307 \nm\n \u76f8\u5bf9\u8f83\u5c0f\u7684\u56fe\u3002\n\n\n\u7a20\u5bc6\u56fe\n\u00b6\n\n\nm = \\Theta(n^2)\nm = \\Theta(n^2)\n \u7684\u56fe\uff0c\u6216\u8005\u6307 \nm\n \u76f8\u5bf9\u8f83\u5927\u7684\u56fe\n\n\n\u5b8c\u5168\u56fe\n\u00b6\n\n\nm = n(n-1) / 2\nm = n(n-1) / 2\n \u7684\u7b80\u5355\u65e0\u5411\u56fe\n\n\n\u8def\u5f84\u7684\u957f\u5ea6\n\u00b6\n\n\n\u4e00\u822c\u6765\u8bf4\uff0c\u8def\u5f84\u7684\u957f\u5ea6\u5728\u6570\u503c\u4e0a\u7b49\u4e8e\u8def\u5f84\u7684\u8fb9\u6570\uff0c\u6216\u8005\u5982\u679c\u8fb9\u662f\u5e26\u6743\u7684\uff0c\u5219\u662f\u8def\u5f84\u7684\u8fb9\u6743\u548c\u3002\n\n\n\u6700\u77ed\u8def\u5f84\n\u00b6\n\n\n\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\uff0c\u957f\u5ea6\u6700\u5c0f\u7684\u8def\u5f84\u3002\n\n\n\u3010\u6ce8\u3011\uff1a\u4e0d\u4e00\u5b9a\u5b58\u5728\uff0c\u4e0d\u4e00\u5b9a\u552f\u4e00\u3002",
            "title": "\u56fe\u8bba\u57fa\u7840"
        },
        {
            "location": "/graph/basic/#_1",
            "text": "",
            "title": "\u56fe\u662f\u600e\u4e48\u5b58\u7684\uff1f"
        },
        {
            "location": "/graph/basic/#_2",
            "text": "\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u6211\u4eec\u5f00\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u91cc\u6bcf\u4e2a\u5143\u7d20\u662f\u56fe\u7684\u4e00\u6761\u8fb9\u3002  \u8fd9\u6837\u505a\u6709\u4e2a\u7f3a\u70b9\uff0c\u6bcf\u6b21\u60f3\u8981\u77e5\u9053\u4e24\u4e2a\u70b9\u4e4b\u95f4\u662f\u5426\u6709\u8fde\u8fb9\uff08\u6216\u8005\u8bf4\u4e00\u6761\u8fb9\u662f\u5426\u5b58\u5728\uff09\uff0c\u90fd\u9700\u8981\u5728\u6570\u7ec4\u91cc\u8fdb\u884c\u4e00\u756a\u67e5\u627e\u3002\u800c\u4e14\u5982\u679c\u6ca1\u6709\u5bf9\u8fb9\u4e8b\u5148\u6392\u5e8f\u7684\u8bdd\uff0c\u5c31\u4e0d\u80fd\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u7684\u65b9\u6cd5\uff08 O(logn) O(logn) \uff09\uff0c\u800c\u662f\u6bcf\u6b21\u53ea\u80fd\u6309\u987a\u5e8f\u627e\uff08 O(n) O(n) \uff09\uff0c\u6210\u672c\u8f83\u9ad8\u3002  \u4ec0\u4e48\u65f6\u5019\u4f1a\u7528\u5230\u8fd9\u4e2a\u65b9\u6cd5\u5462\uff1f\u6700\u7b80\u5355\u7684\u4e00\u4e2a\u4f8b\u5b50\u662f\u4f7f\u7528 Kruskal \u7b97\u6cd5\u6c42  \u6700\u5c0f\u751f\u6210\u6811  \u7684\u65f6\u5019\u3001",
            "title": "\u76f4\u63a5\u5b58\u8fb9"
        },
        {
            "location": "/graph/basic/#_3",
            "text": "\u90bb\u63a5\u77e9\u9635\u7684\u82f1\u6587\u540d\u662f adjacency matrix\u3002\u5b83\u7684\u5f62\u5f0f\u662f  bool adj[n][n] \uff0c\u8fd9\u91cc\u9762  n  \u662f\u8282\u70b9\u4e2a\u6570\uff0c adj[i][j]  \u8868\u793a i \u548c j \u4e4b\u95f4\u662f\u5426\u6709\u8fb9\u3002  \u5982\u679c\u8fb9\u6709\u6743\u503c\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7528  int adj[n][n] \uff0c\u76f4\u63a5\u628a\u8fb9\u6743\u5b58\u8fdb\u53bb\u3002  \u5b83\u7684\u4f18\u70b9\u662f\u53ef\u4ee5\u5728  O(1) O(1)  \u65f6\u95f4\u5185\u5f97\u5230\u4e00\u6761\u8fb9\u662f\u5426\u5b58\u5728\uff0c\u7f3a\u70b9\u662f\u9700\u8981\u5360\u7528  O(n^2) O(n^2)  \u7684\u7a7a\u95f4\u3002\u5bf9\u4e8e\u4e00\u4e2a\u7a00\u758f\u7684\u56fe\uff08\u8fb9\u76f8\u5bf9\u4e8e\u70b9\u6570\u7684\u5e73\u65b9\u6bd4\u8f83\u5c11\uff09\u6765\u8bf4\uff0c\u7528\u90bb\u63a5\u77e9\u9635\u6765\u5b58\u7684\u8bdd\uff0c\u6210\u672c\u504f\u9ad8\u3002",
            "title": "\u90bb\u63a5\u77e9\u9635"
        },
        {
            "location": "/graph/basic/#_4",
            "text": "\u90bb\u63a5\u8868\u82f1\u6587\u540d\u662f adjacency list\u3002\u5b83\u7684\u5f62\u5f0f\u662f  vector adj[n] \uff0c\u7528  adj[i]  \u5b58\u4ee5 i \u4e3a\u8d77\u70b9\u7684\u8fb9\u3002  \u7528 vector \u65e0\u6cd5\u79d1\u5b66\u5730\u5220\u9664\uff0c\u6240\u4ee5\u5e38\u7528 list \u5b9e\u73b0\u3002  \u5b83\u7684\u7279\u70b9\u662f\u53ef\u4ee5\u7528\u6765\u6309\u987a\u5e8f\u8bbf\u95ee\u4e00\u4e2a\u7ed3\u70b9\u7684\u51fa\u8fb9\uff08\u6216\u8005\u5165\u8fb9\uff09\u3002",
            "title": "\u90bb\u63a5\u8868"
        },
        {
            "location": "/graph/basic/#_5",
            "text": "\u4e3a\u4ec0\u4e48\u5b83\u641c\u4e0d\u5230\u82f1\u6587\u540d\u5462\uff1f\u56e0\u4e3a\u662f\u4e2d\u56fd\u73a9\u5bb6\u4e71\u641e\u51fa\u6765\u7684\u3002  \u9996\u5148\u4ecb\u7ecd\u4e00\u4e0b\u94fe\u5f0f\u524d\u5411\u661f\uff0c\u672c\u8d28\u4e0a\u662f\u7528\u5355\u5411\u94fe\u8868\u5b9e\u73b0\u7684\u90bb\u63a5\u8868\u3002  \u5f62\u5f0f\u4e0a\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\uff1a struct edge {edfge *pre, int to;} *head[N], edge[M]'  \u8fd9\u4e2a\u7ed3\u6784\u5e7f\u6cdb\u51fa\u73b0\u4e8e\u7b97\u6cd5\u7ade\u8d5b\u9009\u624b\u7684\u4ee3\u7801\u4e2d\uff0c\u7f16\u5199\u7b80\u6d01\u800c\u4e14\u5bf9\u4e8e\u5927\u591a\u6570\u9898\u76ee\u6548\u7387\u8db3\u591f\u9ad8\u3002  \u5176\u4e2d  head[i]  \u7528\u6765\u5b58\u4ee5 i \u4e3a\u8d77\u70b9\u7684\u8fb9\uff0c edge  \u6570\u7ec4\u662f\u8fb9\u8868\u3002  \u90a3\u4e48\u4ec0\u4e48\u662f\u524d\u5411\u661f\u5462\uff1f\u4e8b\u5148\u628a  edge  \u6570\u7ec4\u6392\u4e2a\u5e8f\u5373\u53ef\u3002\u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528  \u57fa\u6570\u6392\u5e8f  \u505a\u5230  O(m) O(m) \u3002",
            "title": "\u524d\u5411\u661f"
        },
        {
            "location": "/graph/basic/#_6",
            "text": "",
            "title": "\u4e00\u4e9b\u8ddf\u56fe\u6709\u5173\u7684\u5b9a\u4e49"
        },
        {
            "location": "/graph/basic/#_7",
            "text": "path\uff0c\u662f\u6307\u4e00\u4e2a\u8fb9\u7684\u5e8f\u5217\uff0c\u5176\u4e2d\u7684\u8fb9\u9996\u5c3e\u76f8\u8fde\u3002",
            "title": "\u8def\u5f84"
        },
        {
            "location": "/graph/basic/#_8",
            "text": "simple path\uff0c\u662f\u6bcf\u6761\u8fb9\u53ea\u7ecf\u8fc7\u4e86\u4e00\u6b21\u7684\u8def\u5f84\u3002",
            "title": "\u7b80\u5355\u8def\u5f84"
        },
        {
            "location": "/graph/basic/#_9",
            "text": "cycle\uff0c\u4e5f\u79f0\u4e3a  \u73af \uff0c\u662f\u8d77\u70b9\u548c\u7ec8\u70b9\u76f8\u540c\u7684\u8def\u5f84\u3002",
            "title": "\u56de\u8def"
        },
        {
            "location": "/graph/basic/#_10",
            "text": "\u56fe\u7684\u5b9a\u70b9\u5e8f\u5217\u4e2d\uff0c\u9664\u4e86\u8d77\u70b9\u548c\u7ec8\u70b9\u76f8\u540c\u5916\uff0c\u5176\u4f59\u9876\u70b9\u4e0d\u91cd\u590d\u7684\u56de\u8def\u3002",
            "title": "\u7b80\u5355\u56de\u8def"
        },
        {
            "location": "/graph/basic/#_11",
            "text": "",
            "title": "\u8fde\u901a"
        },
        {
            "location": "/graph/basic/#_12",
            "text": "\u65e0\u5411\u56fe\u4e2d\u70b9  u  \u548c  v  \u8fde\u901a\u662f\u6307\u5b58\u5728\u4e00\u6761  u  \u5230  v  \u7684\u8def\u5f84\u3002",
            "title": "\u4e24\u4e2a\u70b9\u8fde\u901a"
        },
        {
            "location": "/graph/basic/#_13",
            "text": "\u5982\u679c\u65e0\u5411\u56fe G \u4e2d\u4efb\u610f\u4e24\u4e2a\u8282\u70b9\u8fde\u901a\uff0c\u79f0\u5176\u4e3a\u662f\u8fde\u901a\u7684\u3002",
            "title": "\u56fe\u8fde\u901a"
        },
        {
            "location": "/graph/basic/#_14",
            "text": "\u6709\u5411\u56fe\u4e2d\u70b9  u  \u5230  v  \u53ef\u8fbe\u662f\u6307\u5b58\u5728\u4e00\u6761  u  \u5230  v  \u7684\u8def\u5f84\u3002",
            "title": "\u53ef\u8fbe"
        },
        {
            "location": "/graph/basic/#_15",
            "text": "\u6709\u5411\u56fe G \u5f3a\u8fde\u901a\u662f\u6307\uff0cG \u4e2d\u4efb\u610f\u4e24\u4e2a\u8282\u70b9\u8fde\u901a\u3002",
            "title": "\u5f3a\u8fde\u901a"
        },
        {
            "location": "/graph/basic/#_16",
            "text": "\u6709\u5411\u56fe G \u5f3a\u8fde\u901a\u662f\u6307\uff0cG \u4e2d\u7684\u6240\u6709\u8fb9\u66ff\u6362\u4e3a\u65e0\u5411\u8fb9\u540e\uff0cG \u4e3a\u8fde\u901a\u56fe\u3002",
            "title": "\u5f31\u8fde\u901a"
        },
        {
            "location": "/graph/basic/#_17",
            "text": "\u9009\u53d6\u4e00\u4e2a\u8282\u70b9\u7684\u5b50\u96c6\u548c\u8fb9\u7684\u5b50\u96c6\u6784\u6210\u7684\u56fe\u3002",
            "title": "\u5b50\u56fe"
        },
        {
            "location": "/graph/basic/#_18",
            "text": "\u9009\u53d6\u7684\u5b50\u56fe\u7684\u8282\u70b9\u548c\u539f\u56fe\u4e00\u6837\u3002",
            "title": "\u751f\u6210\u5b50\u56fe"
        },
        {
            "location": "/graph/basic/#_19",
            "text": "\u9009\u53d6\u4e00\u4e2a\u8282\u70b9\u7684\u5b50\u96c6\uff0c\u518d\u9009\u53d6\u8fd9\u4e9b\u8282\u70b9\u76f8\u5173\u8054\u7684\u8fb9\u7684\u96c6\u5408\u6784\u6210\u7684\u56fe\u3002",
            "title": "\u5bfc\u51fa\u5b50\u56fe"
        },
        {
            "location": "/graph/basic/#_20",
            "text": "\u9009\u53d6\u4e00\u4e2a\u8fb9\u7684\u5b50\u96c6\uff0c\u518d\u9009\u53d6\u8fd9\u4e9b\u8fb9\u76f8\u5173\u8054\u7684\u8282\u70b9\u7684\u96c6\u5408\uff0c\u6784\u6210\u7684\u56fe\u3002",
            "title": "\u8fb9\u5bfc\u51fa\u5b50\u56fe"
        },
        {
            "location": "/graph/basic/#_21",
            "text": "\uff08\u4e00\u4e2a\u65e0\u5411\u56fe\u7684\uff09\u8fde\u901a\u7684\u5b50\u56fe\u3002",
            "title": "\u8fde\u901a\u5b50\u56fe"
        },
        {
            "location": "/graph/basic/#_22",
            "text": "\uff08\u4e00\u4e2a\u65e0\u5411\u56fe\u7684\uff09\u6781\u5927\u7684\u8fde\u901a\u5b50\u56fe\u3002  \u3010\u6ce8\u3011\uff1a\u6781\u5927\u662f\u6307\u6dfb\u52a0\u4efb\u4f55\u8282\u70b9\u6216\u8005\u8fb9\u540e\u90fd\u4e0d\u518d\u6ee1\u8db3",
            "title": "\u8fde\u901a\u5206\u91cf"
        },
        {
            "location": "/graph/basic/#_23",
            "text": "m = \\Theta(n) m = \\Theta(n)  \u7684\u56fe\uff0c\u6216\u8005\u6307  m  \u76f8\u5bf9\u8f83\u5c0f\u7684\u56fe\u3002",
            "title": "\u7a00\u758f\u56fe"
        },
        {
            "location": "/graph/basic/#_24",
            "text": "m = \\Theta(n^2) m = \\Theta(n^2)  \u7684\u56fe\uff0c\u6216\u8005\u6307  m  \u76f8\u5bf9\u8f83\u5927\u7684\u56fe",
            "title": "\u7a20\u5bc6\u56fe"
        },
        {
            "location": "/graph/basic/#_25",
            "text": "m = n(n-1) / 2 m = n(n-1) / 2  \u7684\u7b80\u5355\u65e0\u5411\u56fe",
            "title": "\u5b8c\u5168\u56fe"
        },
        {
            "location": "/graph/basic/#_26",
            "text": "\u4e00\u822c\u6765\u8bf4\uff0c\u8def\u5f84\u7684\u957f\u5ea6\u5728\u6570\u503c\u4e0a\u7b49\u4e8e\u8def\u5f84\u7684\u8fb9\u6570\uff0c\u6216\u8005\u5982\u679c\u8fb9\u662f\u5e26\u6743\u7684\uff0c\u5219\u662f\u8def\u5f84\u7684\u8fb9\u6743\u548c\u3002",
            "title": "\u8def\u5f84\u7684\u957f\u5ea6"
        },
        {
            "location": "/graph/basic/#_27",
            "text": "\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\uff0c\u957f\u5ea6\u6700\u5c0f\u7684\u8def\u5f84\u3002  \u3010\u6ce8\u3011\uff1a\u4e0d\u4e00\u5b9a\u5b58\u5728\uff0c\u4e0d\u4e00\u5b9a\u552f\u4e00\u3002",
            "title": "\u6700\u77ed\u8def\u5f84"
        },
        {
            "location": "/graph/tree-basic/",
            "text": "\u7b97\u6cd5\u7ade\u8d5b\u7684\u6811\u548c\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u6811\u957f\u5f97\u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7\u6211\u4eec\u4e60\u60ef\u4e8e\u5904\u7406\u95ee\u9898\u7684\u65f6\u5019\u628a\u6811\u6839\u653e\u5230\u4e0a\u65b9\u6765\u8003\u8651\u3002\n\n\n\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u770b\u8d77\u6765\u50cf\u662f\u4e00\u4e2a\u5012\u6302\u7684\u6811\uff0c\u56e0\u6b64\u5f97\u540d\u3002\n\n\n\u5f62\u5f0f\u5316\u7684\u5b9a\u4e49\uff1a\n- \u6709 \nn\nn\n \u4e2a\u8282\u70b9\uff0c \nn-1\nn-1\n \u6761\u8fb9\u7684\u8fde\u901a\u65e0\u5411\u56fe\uff0c\n- \u65e0\u5411\u65e0\u73af\u8fde\u901a\u56fe\n- \u4efb\u610f\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u7b80\u5355\u8def\u5f84\u7684\u65e0\u5411\u56fe\n\n\n\u6709\u5173\u6811\u7684\u5b9a\u4e49s\n\u00b6\n\n\n\u68ee\u6797\n\u00b6\n\n\n\u6bcf\u4e2a\u8fde\u901a\u5206\u91cf\uff08\u8fde\u901a\u5757\uff09\u90fd\u662f\u6811\u7684\u56fe\n\n\n\u751f\u6210\u6811\n\u00b6\n\n\n\u4e00\u4e2a\u56fe\u7684\u751f\u6210\u5b50\u56fe\uff0c\u540c\u65f6\u8981\u6c42\u662f\u6811\u3002\n\n\n\u6709\u6839\u6811\n\u00b6\n\n\n\u6307\u5b9a\u4e86\u4e00\u4e2a\u70b9\u662f\u6839\u7684\u6811\n\n\n\u65e0\u6839\u6811\n\u00b6\n\n\n\u6ca1\u6709\u6307\u5b9a\u4e00\u4e2a\u6839\u8282\u70b9\u7684\u6811\n\n\n\u6df1\u5ea6\n\u00b6\n\n\n\u8282\u70b9\u7684\u6df1\u5ea6\n\u00b6\n\n\n\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\uff08\u6700\u77ed\u8def\u5f84\u7684\u957f\u5ea6\uff09\n\n\n\u6811\u7684\u6df1\u5ea6\n\u00b6\n\n\n\u6240\u6709\u8282\u70b9\u7684\u6df1\u5ea6\u7684\u6700\u5927\u503c\n\n\n\u7236\u4eb2\n\u00b6\n\n\n\u4e00\u4e2a\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u7b2c\u4e8c\u4e2a\u8282\u70b9\n\n\n\u7956\u5148\n\u00b6\n\n\n\u4e00\u4e2a\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\uff0c\u9664\u4e86\u5b83\u672c\u8eab\u5916\u7684\u6240\u6709\u8282\u70b9\n\n\n\u5b50\u8282\u70b9\n\u00b6\n\n\n\u5982\u679c u \u662f v \u7684\u7236\u4eb2\uff0c\u90a3\u4e48 v \u662f u \u7684\u5b50\u8282\u70b9\u3002\n\n\n\u5144\u5f1f\n\u00b6\n\n\n\u540c\u4e00\u4e2a\u7236\u4eb2\u7684\u591a\u4e2a\u5b50\u8282\u70b9\u4e92\u4e3a\u5144\u5f1f\n\n\n\u540e\u4ee3\uff08\u5b50\u5b59\uff09\n\u00b6\n\n\n\u5b50\u8282\u70b9\u548c\u5b50\u8282\u70b9\u7684\u540e\u4ee3\n\n\n\u6216\u8005\u7406\u89e3\u6210\uff1a\u5982\u679c u \u662f v \u7684\u7956\u5148\uff0c\u90a3\u4e48 v \u662f u \u7684\u540e\u4ee3\u3002\n\n\n\u5ea6\u6570\n\u00b6\n\n\n\u65e0\u6839\u6811\n\u00b6\n\n\n\u548c\u4e00\u4e2a\u70b9\u76f8\u5173\u7684\u8fb9\u7684\u4e2a\u6570\n\n\n\u6709\u6839\u6811\n\u00b6\n\n\n\u5b50\u8282\u70b9\u4e2a\u6570\n\n\n\u53f6\u8282\u70b9\n\u00b6\n\n\n\u65e0\u6839\u6811\n\u00b6\n\n\n\u5ea6\u6570\u4e0d\u8d85\u8fc7 1 \u7684\u8282\u70b9\n\n\n\u4e3a\u4ec0\u4e48\u4e0d\u662f\u5ea6\u4e3a 1\uff1f\n\u8003\u8651 \nn = 1\nn = 1\n \u7684\u65f6\u5019\u3002\n\u6709\u6839\u6811\n\u00b6\n\n\n\u6ca1\u6709\u5b50\u8282\u70b9\uff08\u5ea6\u6570\u4e3a 0\uff09\u7684\u8282\u70b9\n\n\n\u5b50\u6811\n\u00b6\n\n\n\u5220\u6389\u4e0e\u7236\u4eb2\u76f8\u8fde\u7684\u8fb9\u540e\uff0c\u8be5\u8282\u70b9\u6240\u5728\u7684\u5b50\u56fe\n\n\n\u7279\u6b8a\u7684\u6811\n\u00b6\n\n\n\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\n\u00b6\n\n\n\u6ca1\u6709\u8fb9\n\n\nn = 1, m = 0\nn = 1, m = 0\n\n\n\u94fe\n\u00b6\n\n\n\u70b9 \ni\ni\n \u7684\u7236\u4eb2\u4e3a \ni - 1\ni - 1\n\u3002\n\n\n\u6811\u7684\u6df1\u5ea6\u4e3a\nn - i\nn - i\n\u3002\n\n\n\u83ca\u82b1\n\u00b6\n\n\n\u6240\u6709\u975e\u6839\u8282\u70b9\u7684\u7236\u4eb2\u5747\u4e3a\u6839\u8282\u70b9\u3002\n\n\n\u8f93\u7684\u6df1\u5ea6\u4e3a 1.\n\n\n\u4e8c\u53c9\u6811\n\u00b6\n\n\n\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u53ea\u6709\u4e24\u4e2a\u513f\u5b50\uff08\u5b50\u8282\u70b9\uff09\u7684\u6811\n\n\n\u6ee1\u4e8c\u53c9\u6811\n\u00b6\n\n\n\u5b8c\u5168\u4e8c\u53c9\u6811\n\u00b6\n\n\n\u8fd9\u91cc\u597d\u50cf\u9700\u8981\u6709\u56fe\u3002\uff08\u56fe\u5f85\u8865\uff09\n\n\n\u5982\u4f55\u5b58\u6811\n\u00b6\n\n\n\u5b58\u7236\u4eb2\n\u00b6\n\n\n\u7528\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u4eb2\u8282\u70b9\uff1a\nfa\n\u6570\u7ec4\n\n\n\u90bb\u63a5\u8868\n\u00b6\n\n\n\u5f53\u6210\u56fe\u6765\u5b58\n\n\n\u6709\u6839\u6811\uff1a\nvector<int> childs[n], fa[n]\n\n\n\u4e8c\u53c9\u6811\uff1a\nint lch[n], rch[n], fa[n]",
            "title": "\u6811\u76f8\u5173\u57fa\u7840"
        },
        {
            "location": "/graph/tree-basic/#s",
            "text": "",
            "title": "\u6709\u5173\u6811\u7684\u5b9a\u4e49s"
        },
        {
            "location": "/graph/tree-basic/#_1",
            "text": "\u6bcf\u4e2a\u8fde\u901a\u5206\u91cf\uff08\u8fde\u901a\u5757\uff09\u90fd\u662f\u6811\u7684\u56fe",
            "title": "\u68ee\u6797"
        },
        {
            "location": "/graph/tree-basic/#_2",
            "text": "\u4e00\u4e2a\u56fe\u7684\u751f\u6210\u5b50\u56fe\uff0c\u540c\u65f6\u8981\u6c42\u662f\u6811\u3002",
            "title": "\u751f\u6210\u6811"
        },
        {
            "location": "/graph/tree-basic/#_3",
            "text": "\u6307\u5b9a\u4e86\u4e00\u4e2a\u70b9\u662f\u6839\u7684\u6811",
            "title": "\u6709\u6839\u6811"
        },
        {
            "location": "/graph/tree-basic/#_4",
            "text": "\u6ca1\u6709\u6307\u5b9a\u4e00\u4e2a\u6839\u8282\u70b9\u7684\u6811",
            "title": "\u65e0\u6839\u6811"
        },
        {
            "location": "/graph/tree-basic/#_5",
            "text": "",
            "title": "\u6df1\u5ea6"
        },
        {
            "location": "/graph/tree-basic/#_6",
            "text": "\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\uff08\u6700\u77ed\u8def\u5f84\u7684\u957f\u5ea6\uff09",
            "title": "\u8282\u70b9\u7684\u6df1\u5ea6"
        },
        {
            "location": "/graph/tree-basic/#_7",
            "text": "\u6240\u6709\u8282\u70b9\u7684\u6df1\u5ea6\u7684\u6700\u5927\u503c",
            "title": "\u6811\u7684\u6df1\u5ea6"
        },
        {
            "location": "/graph/tree-basic/#_8",
            "text": "\u4e00\u4e2a\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u7b2c\u4e8c\u4e2a\u8282\u70b9",
            "title": "\u7236\u4eb2"
        },
        {
            "location": "/graph/tree-basic/#_9",
            "text": "\u4e00\u4e2a\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\uff0c\u9664\u4e86\u5b83\u672c\u8eab\u5916\u7684\u6240\u6709\u8282\u70b9",
            "title": "\u7956\u5148"
        },
        {
            "location": "/graph/tree-basic/#_10",
            "text": "\u5982\u679c u \u662f v \u7684\u7236\u4eb2\uff0c\u90a3\u4e48 v \u662f u \u7684\u5b50\u8282\u70b9\u3002",
            "title": "\u5b50\u8282\u70b9"
        },
        {
            "location": "/graph/tree-basic/#_11",
            "text": "\u540c\u4e00\u4e2a\u7236\u4eb2\u7684\u591a\u4e2a\u5b50\u8282\u70b9\u4e92\u4e3a\u5144\u5f1f",
            "title": "\u5144\u5f1f"
        },
        {
            "location": "/graph/tree-basic/#_12",
            "text": "\u5b50\u8282\u70b9\u548c\u5b50\u8282\u70b9\u7684\u540e\u4ee3  \u6216\u8005\u7406\u89e3\u6210\uff1a\u5982\u679c u \u662f v \u7684\u7956\u5148\uff0c\u90a3\u4e48 v \u662f u \u7684\u540e\u4ee3\u3002",
            "title": "\u540e\u4ee3\uff08\u5b50\u5b59\uff09"
        },
        {
            "location": "/graph/tree-basic/#_13",
            "text": "",
            "title": "\u5ea6\u6570"
        },
        {
            "location": "/graph/tree-basic/#_14",
            "text": "\u548c\u4e00\u4e2a\u70b9\u76f8\u5173\u7684\u8fb9\u7684\u4e2a\u6570",
            "title": "\u65e0\u6839\u6811"
        },
        {
            "location": "/graph/tree-basic/#_15",
            "text": "\u5b50\u8282\u70b9\u4e2a\u6570",
            "title": "\u6709\u6839\u6811"
        },
        {
            "location": "/graph/tree-basic/#_16",
            "text": "",
            "title": "\u53f6\u8282\u70b9"
        },
        {
            "location": "/graph/tree-basic/#_17",
            "text": "\u5ea6\u6570\u4e0d\u8d85\u8fc7 1 \u7684\u8282\u70b9  \u4e3a\u4ec0\u4e48\u4e0d\u662f\u5ea6\u4e3a 1\uff1f \u8003\u8651  n = 1 n = 1  \u7684\u65f6\u5019\u3002",
            "title": "\u65e0\u6839\u6811"
        },
        {
            "location": "/graph/tree-basic/#_18",
            "text": "\u6ca1\u6709\u5b50\u8282\u70b9\uff08\u5ea6\u6570\u4e3a 0\uff09\u7684\u8282\u70b9",
            "title": "\u6709\u6839\u6811"
        },
        {
            "location": "/graph/tree-basic/#_19",
            "text": "\u5220\u6389\u4e0e\u7236\u4eb2\u76f8\u8fde\u7684\u8fb9\u540e\uff0c\u8be5\u8282\u70b9\u6240\u5728\u7684\u5b50\u56fe",
            "title": "\u5b50\u6811"
        },
        {
            "location": "/graph/tree-basic/#_20",
            "text": "",
            "title": "\u7279\u6b8a\u7684\u6811"
        },
        {
            "location": "/graph/tree-basic/#_21",
            "text": "\u6ca1\u6709\u8fb9  n = 1, m = 0 n = 1, m = 0",
            "title": "\u53ea\u6709\u4e00\u4e2a\u8282\u70b9"
        },
        {
            "location": "/graph/tree-basic/#_22",
            "text": "\u70b9  i i  \u7684\u7236\u4eb2\u4e3a  i - 1 i - 1 \u3002  \u6811\u7684\u6df1\u5ea6\u4e3a n - i n - i \u3002",
            "title": "\u94fe"
        },
        {
            "location": "/graph/tree-basic/#_23",
            "text": "\u6240\u6709\u975e\u6839\u8282\u70b9\u7684\u7236\u4eb2\u5747\u4e3a\u6839\u8282\u70b9\u3002  \u8f93\u7684\u6df1\u5ea6\u4e3a 1.",
            "title": "\u83ca\u82b1"
        },
        {
            "location": "/graph/tree-basic/#_24",
            "text": "\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u53ea\u6709\u4e24\u4e2a\u513f\u5b50\uff08\u5b50\u8282\u70b9\uff09\u7684\u6811",
            "title": "\u4e8c\u53c9\u6811"
        },
        {
            "location": "/graph/tree-basic/#_25",
            "text": "",
            "title": "\u6ee1\u4e8c\u53c9\u6811"
        },
        {
            "location": "/graph/tree-basic/#_26",
            "text": "\u8fd9\u91cc\u597d\u50cf\u9700\u8981\u6709\u56fe\u3002\uff08\u56fe\u5f85\u8865\uff09",
            "title": "\u5b8c\u5168\u4e8c\u53c9\u6811"
        },
        {
            "location": "/graph/tree-basic/#_27",
            "text": "",
            "title": "\u5982\u4f55\u5b58\u6811"
        },
        {
            "location": "/graph/tree-basic/#_28",
            "text": "\u7528\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u4eb2\u8282\u70b9\uff1a fa \u6570\u7ec4",
            "title": "\u5b58\u7236\u4eb2"
        },
        {
            "location": "/graph/tree-basic/#_29",
            "text": "\u5f53\u6210\u56fe\u6765\u5b58  \u6709\u6839\u6811\uff1a vector<int> childs[n], fa[n]  \u4e8c\u53c9\u6811\uff1a int lch[n], rch[n], fa[n]",
            "title": "\u90bb\u63a5\u8868"
        },
        {
            "location": "/graph/traverse/",
            "text": "dfs\n\u00b6\n\n\n\u6811\u4e0a dfs\n\u00b6\n\n\n\u5728\u6811\u4e0a dfs \u662f\u8fd9\u6837\u7684\u4e00\u4e2a\u8fc7\u7a0b\uff1a\u5148\u8bbf\u95ee\u6839\u8282\u70b9\uff0c\u7136\u540e\u5206\u522b\u8bbf\u95ee\u6839\u8282\u70b9\u6bcf\u4e2a\u513f\u5b50\u7684\u5b50\u6811\n\n\n\u53ef\u4ee5\u7528\u6765\u6c42\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\u3001\u7236\u4eb2\u7b49\u4fe1\u606f\n\n\ndfs \u5e8f\u5217\n\u00b6\n\n\ndfs \u5e8f\u5217\u662f\u6307 dfs \u8c03\u7528\u8fc7\u7a0b\u4e2d\u8bbf\u95ee\u7684\u8282\u70b9\u7f16\u53f7\u7684\u5e8f\u5217\u3002\n\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u4e2a\u5b50\u6811\u90fd\u5bf9\u5e94 dfs \u5e8f\u5217\u4e2d\u7684\u8fde\u7eed\u4e00\u6bb5\uff08\u4e00\u6bb5\u533a\u95f4\uff09\u3002\n\n\n\u62ec\u53f7\u5e8f\u5217\n\u00b6\n\n\ndfs \u8fdb\u5165\u67d0\u4e2a\u8282\u70b9\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e2a\u5de6\u62ec\u53f7 \n(\n\uff0c\u9000\u51fa\u67d0\u4e2a\u8282\u70b9\u7684\u5565\u65f6\u5019\u8bb0\u5f55\u4e00\u4e2a\u53f3\u62ec\u53f7 \n)\n\u3002\n\n\n\u6bcf\u4e2a\u8282\u70b9\u4f1a\u51fa\u73b0\u4e24\u6b21\n\n\n\u76f8\u90bb\u4e24\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\u76f8\u5dee 1\u3002\n\n\n\u4e8c\u53c9\u6811\u4e0a dfs\n\u00b6\n\n\n\uff08\u56fe\u5f85\u8865\uff09\n\n\n\u5148\u5e8f\u904d\u5386\n\u00b6\n\n\n\u5148\u8bbf\u95ee\u6839\uff0c\u518d\u8bbf\u95ee\u5b50\u8282\u70b9\u3002\n\n\n\u4e2d\u5e8f\u904d\u5386\n\u00b6\n\n\n\u5148\u8bbf\u95ee\u5de6\u5b50\u6811\uff0c\u518d\u8bbf\u95ee\u8ddf\uff0c\u518d\u8bbf\u95ee\u53f3\u5b50\u6811\u3002\n\n\n\u540e\u5e8f\u904d\u5386\n\u00b6\n\n\n\u5148\u8bbf\u95ee\u5b50\u8282\u70b9\uff0c\u518d\u8bbf\u95ee\u6839\u3002\n\n\n\u5df2\u77e5\u4e24\u4e2a\u53ef\u4ee5\u6c42\u7b2c\u4e09\u4e2a\n\u00b6\n\n\n\u4e00\u822c\u56fe\u4e0a dfs\n\u00b6\n\n\n\u5bf9\u4e8e\u975e\u8fde\u901a\u56fe\uff0c\u53ea\u80fd\u8bbf\u95ee\u5230\u4e03\u70b9\u6240\u5728\u7684\u8fde\u901a\u5206\u91cf\u3002\n\n\n\u5bf9\u4e8e\u8fde\u901a\u56fe\uff0cdfs \u5e8f\u5217\u901a\u5e38\u4e0d\u552f\u4e00\n\n\n\u3010\u6ce8\u3011\uff1a\u6811\u7684 dfs \u5e8f\u5217\u4e5f\u662f\u4e0d\u552f\u4e00\u7684\u3002\n\n\n\u5728 dfs \u8fc7\u7a0b\u4e2d\uff0c\u901a\u8fc7\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u4ece\u54ea\u4e2a\u70b9\u8bbf\u95ee\u800c\u6765\uff0c\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u6811\u7ed3\u6784\uff0c\u79f0\u4e3a dfs \u6811\u3002 dfs \u6811\u662f\u539f\u56fe\u7684\u4e00\u4e2a\u751f\u6210\u6811\u3002\n\n\ndfs \u6811\u6709\u5f88\u591a\u6027\u8d28\uff0c\u6bd4\u5982\u7528\u6765\u6c42 \n\u5f3a\u8fde\u901a\u5206\u91cf\n\n\nbfs\n\u00b6\n\n\n\u6811\u4e0a bfs\n\u00b6\n\n\n\u4ece\u6811\u6839\u5f00\u59cb\uff0c\u4e25\u683c\u6309\u7167\u5c42\u6b21\u6765\u8bbf\u95ee\u8282\u70b9\u3002\n\n\nbfs \u8fc7\u7a0b\u4e2d\u4e5f\u53ef\u4ee5\u987a\u4fbf\u6c42\u51fa\u5404\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\u548c\u7236\u4eb2\u8282\u70b9\u3002\n\n\nbfs \u5e8f\u5217\n\u00b6\n\n\n\u7c7b\u4f3c dfs \u5e8f\u5217\uff0cbfs \u5e8f\u5217\u662f\u6307\u5728 bfs \u8fc7\u7a0b\u4e2d\u8bbf\u95ee\u7684\u8282\u70b9\u7f16\u53f7\u7684\u5e8f\u5217\u3002\n\n\n\u4e00\u822c\u56fe\u4e0a bfs\n\u00b6\n\n\n\u540c\u6837\uff0c\u5982\u679c\u539f\u56fe\u4e0d\u8fde\u901a\uff0c\u53ea\u80fd\u8bbf\u95ee\u5230\u8d77\u70b9\u6240\u5728\u7684\u8fde\u901a\u5206\u91cf\u3002\n\n\nbfs \u5e8f\u5217\u901a\u5e38\u4e5f\u4e0d\u552f\u4e00\u3002\n\n\n\u7c7b\u4f3c\u7684\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9a\u4e49 bfs \u6811\uff1a\u5728 bfs \u8fc7\u7a0b\u4e2d\uff0c\u901a\u8fc7\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u4ece\u54ea\u4e2a\u70b9\u8bbf\u95ee\u800c\u6765\uff0c\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u6811\u7ed3\u6784",
            "title": "\u904d\u5386\uff1aBFS \u548c DFS"
        },
        {
            "location": "/graph/traverse/#dfs",
            "text": "",
            "title": "dfs"
        },
        {
            "location": "/graph/traverse/#dfs_1",
            "text": "\u5728\u6811\u4e0a dfs \u662f\u8fd9\u6837\u7684\u4e00\u4e2a\u8fc7\u7a0b\uff1a\u5148\u8bbf\u95ee\u6839\u8282\u70b9\uff0c\u7136\u540e\u5206\u522b\u8bbf\u95ee\u6839\u8282\u70b9\u6bcf\u4e2a\u513f\u5b50\u7684\u5b50\u6811  \u53ef\u4ee5\u7528\u6765\u6c42\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\u3001\u7236\u4eb2\u7b49\u4fe1\u606f",
            "title": "\u6811\u4e0a dfs"
        },
        {
            "location": "/graph/traverse/#dfs_2",
            "text": "dfs \u5e8f\u5217\u662f\u6307 dfs \u8c03\u7528\u8fc7\u7a0b\u4e2d\u8bbf\u95ee\u7684\u8282\u70b9\u7f16\u53f7\u7684\u5e8f\u5217\u3002  \u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u4e2a\u5b50\u6811\u90fd\u5bf9\u5e94 dfs \u5e8f\u5217\u4e2d\u7684\u8fde\u7eed\u4e00\u6bb5\uff08\u4e00\u6bb5\u533a\u95f4\uff09\u3002",
            "title": "dfs \u5e8f\u5217"
        },
        {
            "location": "/graph/traverse/#_1",
            "text": "dfs \u8fdb\u5165\u67d0\u4e2a\u8282\u70b9\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e2a\u5de6\u62ec\u53f7  ( \uff0c\u9000\u51fa\u67d0\u4e2a\u8282\u70b9\u7684\u5565\u65f6\u5019\u8bb0\u5f55\u4e00\u4e2a\u53f3\u62ec\u53f7  ) \u3002  \u6bcf\u4e2a\u8282\u70b9\u4f1a\u51fa\u73b0\u4e24\u6b21  \u76f8\u90bb\u4e24\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\u76f8\u5dee 1\u3002",
            "title": "\u62ec\u53f7\u5e8f\u5217"
        },
        {
            "location": "/graph/traverse/#dfs_3",
            "text": "\uff08\u56fe\u5f85\u8865\uff09",
            "title": "\u4e8c\u53c9\u6811\u4e0a dfs"
        },
        {
            "location": "/graph/traverse/#_2",
            "text": "\u5148\u8bbf\u95ee\u6839\uff0c\u518d\u8bbf\u95ee\u5b50\u8282\u70b9\u3002",
            "title": "\u5148\u5e8f\u904d\u5386"
        },
        {
            "location": "/graph/traverse/#_3",
            "text": "\u5148\u8bbf\u95ee\u5de6\u5b50\u6811\uff0c\u518d\u8bbf\u95ee\u8ddf\uff0c\u518d\u8bbf\u95ee\u53f3\u5b50\u6811\u3002",
            "title": "\u4e2d\u5e8f\u904d\u5386"
        },
        {
            "location": "/graph/traverse/#_4",
            "text": "\u5148\u8bbf\u95ee\u5b50\u8282\u70b9\uff0c\u518d\u8bbf\u95ee\u6839\u3002",
            "title": "\u540e\u5e8f\u904d\u5386"
        },
        {
            "location": "/graph/traverse/#_5",
            "text": "",
            "title": "\u5df2\u77e5\u4e24\u4e2a\u53ef\u4ee5\u6c42\u7b2c\u4e09\u4e2a"
        },
        {
            "location": "/graph/traverse/#dfs_4",
            "text": "\u5bf9\u4e8e\u975e\u8fde\u901a\u56fe\uff0c\u53ea\u80fd\u8bbf\u95ee\u5230\u4e03\u70b9\u6240\u5728\u7684\u8fde\u901a\u5206\u91cf\u3002  \u5bf9\u4e8e\u8fde\u901a\u56fe\uff0cdfs \u5e8f\u5217\u901a\u5e38\u4e0d\u552f\u4e00  \u3010\u6ce8\u3011\uff1a\u6811\u7684 dfs \u5e8f\u5217\u4e5f\u662f\u4e0d\u552f\u4e00\u7684\u3002  \u5728 dfs \u8fc7\u7a0b\u4e2d\uff0c\u901a\u8fc7\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u4ece\u54ea\u4e2a\u70b9\u8bbf\u95ee\u800c\u6765\uff0c\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u6811\u7ed3\u6784\uff0c\u79f0\u4e3a dfs \u6811\u3002 dfs \u6811\u662f\u539f\u56fe\u7684\u4e00\u4e2a\u751f\u6210\u6811\u3002  dfs \u6811\u6709\u5f88\u591a\u6027\u8d28\uff0c\u6bd4\u5982\u7528\u6765\u6c42  \u5f3a\u8fde\u901a\u5206\u91cf",
            "title": "\u4e00\u822c\u56fe\u4e0a dfs"
        },
        {
            "location": "/graph/traverse/#bfs",
            "text": "",
            "title": "bfs"
        },
        {
            "location": "/graph/traverse/#bfs_1",
            "text": "\u4ece\u6811\u6839\u5f00\u59cb\uff0c\u4e25\u683c\u6309\u7167\u5c42\u6b21\u6765\u8bbf\u95ee\u8282\u70b9\u3002  bfs \u8fc7\u7a0b\u4e2d\u4e5f\u53ef\u4ee5\u987a\u4fbf\u6c42\u51fa\u5404\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\u548c\u7236\u4eb2\u8282\u70b9\u3002",
            "title": "\u6811\u4e0a bfs"
        },
        {
            "location": "/graph/traverse/#bfs_2",
            "text": "\u7c7b\u4f3c dfs \u5e8f\u5217\uff0cbfs \u5e8f\u5217\u662f\u6307\u5728 bfs \u8fc7\u7a0b\u4e2d\u8bbf\u95ee\u7684\u8282\u70b9\u7f16\u53f7\u7684\u5e8f\u5217\u3002",
            "title": "bfs \u5e8f\u5217"
        },
        {
            "location": "/graph/traverse/#bfs_3",
            "text": "\u540c\u6837\uff0c\u5982\u679c\u539f\u56fe\u4e0d\u8fde\u901a\uff0c\u53ea\u80fd\u8bbf\u95ee\u5230\u8d77\u70b9\u6240\u5728\u7684\u8fde\u901a\u5206\u91cf\u3002  bfs \u5e8f\u5217\u901a\u5e38\u4e5f\u4e0d\u552f\u4e00\u3002  \u7c7b\u4f3c\u7684\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9a\u4e49 bfs \u6811\uff1a\u5728 bfs \u8fc7\u7a0b\u4e2d\uff0c\u901a\u8fc7\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u4ece\u54ea\u4e2a\u70b9\u8bbf\u95ee\u800c\u6765\uff0c\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u6811\u7ed3\u6784",
            "title": "\u4e00\u822c\u56fe\u4e0a bfs"
        },
        {
            "location": "/graph/mst/",
            "text": "",
            "title": "\u6700\u5c0f\u751f\u6210\u6811"
        },
        {
            "location": "/graph/lca/",
            "text": "",
            "title": "\u6700\u8fd1\u516c\u5171\u7956\u5148"
        },
        {
            "location": "/graph/heavy-light-decomposition/",
            "text": "",
            "title": "\u6811\u94fe\u5256\u5206"
        },
        {
            "location": "/graph/tree-divide/",
            "text": "",
            "title": "\u6811\u5206\u6cbb"
        },
        {
            "location": "/graph/tree-misc/",
            "text": "",
            "title": "\u6811\u7684\u5176\u4ed6\u95ee\u9898"
        },
        {
            "location": "/graph/topo/",
            "text": "\u5b9a\u4e49\n\u00b6\n\n\n\u62d3\u6251\u6392\u5e8f\u7684\u82f1\u6587\u540d\u662f topological sort\u3002\n\n\n\u62d3\u6251\u6392\u5e8f\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\u7ed9\u4e00\u4e2a\u56fe\u7684\u6240\u6709\u8282\u70b9\u6392\u5e8f\uff0c\u800c\u56fe\u4e2d\u6709\u82e5\u5e72\u9650\u5236\uff0c\u5f62\u5982\uff1a\u201c\u70b9 x \u8981\u5728\u70b9 y \u540e\u9762\u201d\u3002\n\n\n\u4e3e\u4e2a\u73b0\u5b9e\u4e00\u4e9b\u7684\u6817\u5b50\uff0c\u6bd4\u5982\u4f60\u53bb\u7ed9\u521a\u5f00\u59cb\u5b66 OI \u7684\u540c\u5b66\u4eec\u8bb2\u8bfe\uff0c\u4f60\u4f1a\u53d1\u73b0\u6709\u5f88\u591a\u77e5\u8bc6\u70b9\u9700\u8981\u524d\u7f6e\u6280\u80fd\u624d\u80fd\u591f\u542c\u61c2\uff0c\u5e76\u975e\u662f\u6240\u6709\u4eba\u90fd\u53ef\u4ee5\u7b2c\u4e00\u5929\u5c31\u5b66\u660e\u767d \n\u7ebf\u6bb5\u6811\n\u3002\u600e\u4e48\u529e\u5462\uff1f\u8bb2\u8bfe\u7684\u65f6\u5019\u662f\u9700\u8981\u6309\u987a\u5e8f\u6765\u7684\uff0c\u5e76\u4e0d\u80fd\u540c\u65f6\u8bb2\u82e5\u5e72\u4e2a\u77e5\u8bc6\u70b9\u3002\u8fd9\u65f6\u5019\u5c31\u9700\u8981\u7528\u5230\u62d3\u6251\u6392\u5e8f\u4e86\u3002\n\n\n\u5f62\u5f0f\u5316\u5b9a\u4e49\u4e00\u4e0b\uff1a\n\n\n\u7ed9\u5b9a\u4e00\u4e2a [DAG \uff08\u6709\u5411\u65e0\u73af\u56fe\uff09])(dag)\uff0c\u5982\u679c\u4ece \ni\ni\n \u5230 \nj\nj\n \u6709\u8fb9\uff0c\u5567\u8ba4\u4e3a \nj\nj\n \u4f9d\u8d56\u4e8e \ni\ni\n\u3002\u5982\u679c \ni\ni\n \u5230 \nj\nj\n \u6709\u8def\u5f84\uff08\ni\ni\n \u53ef\u8fbe \nj\nj\n\uff09\uff0c\u5219\u79f0 \nj\nj\n \u95f4\u63a5\u4f9d\u8d56\u4e8e \ni\ni\n\u3002\n\n\n\u62d3\u6251\u6392\u5e8f\u7684\u76ee\u6807\u662f\u5c06\u6240\u6709\u8282\u70b9\u6392\u5e8f\uff0c\u4f7f\u5f97\u6392\u5728\u524d\u9762\u7684\u8282\u70b9\u4e0d\u80fd\u4f9d\u8d56\u4e8e\u6392\u5728\u540e\u9762\u7684\u8282\u70b9\u3002\n\n\n\u62d3\u6251\u6392\u5e8f\u7b97\u6cd5\u53ca\u5b9e\u73b0\n\u00b6\n\n\n\u7b97\u6cd5\u601d\u8def\n\u00b6\n\n\n\u6838\u5fc3\u601d\u60f3\u662f\u6bcf\u6b21\u627e\u4e00\u4e2a\u5165\u5ea6\u4e3a 0 \u7684\u8282\u70b9\uff0c\u53d6\u51fa\u6765\u4e22\u5230\u7b54\u6848\u5e8f\u5217\u91cc\u3002\u7136\u540e\u518d\u5220\u9664\u8fd9\u4e2a\u8282\u70b9\uff08\u4ee5\u53ca\u5bf9\u5e94\u7684\u8fb9\uff09\uff0c\u66f4\u65b0\u5176\u4ed6\u8282\u70b9\u7684\u5165\u5ea6\uff0c\u4e0d\u65ad\u91cd\u590d\u6b64\u64cd\u4f5c\u76f4\u5230\u7b54\u6848\u5e8f\u5217\u5305\u542b\u4e86\u6240\u6709\u7684\u8282\u70b9\u3002\n\n\n\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u67d0\u4e00\u65f6\u523b\u53d1\u73b0\u627e\u4e0d\u5230\u5165\u5ea6\u4e3a 0 \u7684\u8282\u70b9\uff0c\u5219\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u4e2a\u56fe\u4e0d\u80fd\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff08\u4f1a\u4ea7\u751f\u51b2\u7a81\uff09\u3002\n\n\n\u8fd9\u91cc\u5165\u5ea6\u4e3a 0 \u7684\u70b9\u5e94\u8be5\u5982\u4f55\u9009\u53d6\u5462\uff1f\n\u968f\u4fbf\u9009\u5c31\u597d\u5566\uff01\u627e\u5230\u4e00\u4e2a\u5c31\u53ef\u4ee5\u76f4\u63a5\u7528\uff01\n\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u5462\uff1f\n\u662f\u56e0\u4e3a\u67d0\u4e2a\u70b9\u65e2\u7136\u5728\u65b0\u56fe\u4e2d\u5165\u5ea6\u4e3a 0 \u4e86\uff0c\u90a3\u4e48\u5b83\u5c31\u6ca1\u6709\u4f9d\u8d56\u7684\u4e1c\u897f\u4e86\uff08\u6216\u8005\u4f9d\u8d56\u7684\u90fd\u5df2\u7ecf\u88ab\u5b8c\u6210\u4e86\uff09\u3002\n\u5b9e\u73b0\n\u00b6\n\n\n\u4f2a\u4ee3\u7801\uff1a\n\n\nbool toposort() {\n    q = new queue();\n    for (i = 0; i < n; i++)\n        if (in_deg[i] == 0) q.push(i);\n    ans = new vector();\n    while (!q.empty()) {\n        u = q.pop();\n        ans.push_back(u);\n        for each edge(u, v) {\n            if (--in_deg[v] == 0) q.push(v);\n        }\n    }\n    if (ans.size() == n) {\n        for (i = 0; i < n; i++)\n            std::cout << ans[i] << std::endl;\n        return true;\n    } else {\n        return false;\n    }\n}\n\n\n\n\n// dfs \u7248\u672c\n\n\nbool\n \ndfs\n(\nint\n \nu\n){\n\n  \nc\n[\nu\n]\n \n=\n \n-\n1\n;\n\n  \nfor\n(\nint\n \nv\n \n=\n \n0\n;\n \nv\n \n<=\n \nn\n;\n \nv\n++\n)\n \nif\n(\nG\n[\nu\n][\nv\n])\n \n{\n\n    \nif\n(\nc\n[\nv\n]\n<\n0\n)\n \nreturn\n \nfalse\n;\n\n    \nelse\n \nif\n(\n!\nc\n[\nv\n])\n \ndfs\n(\nv\n);\n\n  \n}\n\n  \nc\n[\nu\n]\n \n=\n \n1\n;\n \ntopo\n.\npush_back\n(\nu\n);\n\n  \nreturn\n \ntrue\n;\n\n\n}\n\n\nbool\n \ntoposort\n(){\n\n  \ntopo\n.\nclear\n();\n\n  \nmemset\n(\nc\n,\n \n0\n,\n \nsizeof\n(\nc\n));\n\n  \nfor\n(\nint\n \nu\n \n=\n \n0\n;\n \nu\n \n<=\n \nn\n;\n \nu\n++\n)\n \nif\n(\n!\nc\n[\nu\n])\n\n    \nif\n(\n!\ndfs\n(\nu\n))\n \nreturn\n \nfalse\n;\n\n  \nreverse\n(\ntopo\n.\nbegin\n(),\n \ntopo\n.\nend\n());\n\n  \nreturn\n \ntrue\n;\n\n\n}\n\n\n\n\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\nO(n+m)\nO(n+m)\n\n\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\nO(n)\nO(n)\n\n\n\u5408\u7406\u6027\u8bc1\u660e\n\u00b6\n\n\n\u8003\u8651\u4e00\u4e2a\u56fe\uff0c\u5220\u6389\u67d0\u4e2a\u5165\u5ea6\u4e3a 0 \u7684\u8282\u70b9\u4e4b\u540e\uff0c\u5982\u679c\u65b0\u56fe\u53ef\u4ee5\u62d3\u6251\u6392\u5e8f\uff0c\u90a3\u4e48\u539f\u56fe\u4e00\u5b9a\u4e5f\u53ef\u4ee5\u3002\u53cd\u8fc7\u6765\uff0c\u5982\u679c\u539f\u56fe\u53ef\u4ee5\u62d3\u6251\u6392\u5e8f\uff0c\u90a3\u4e48\u5220\u6389\u540e\u4e5f\u53ef\u4ee5\u3002",
            "title": "\u62d3\u6251\u6392\u5e8f"
        },
        {
            "location": "/graph/topo/#_1",
            "text": "\u62d3\u6251\u6392\u5e8f\u7684\u82f1\u6587\u540d\u662f topological sort\u3002  \u62d3\u6251\u6392\u5e8f\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\u7ed9\u4e00\u4e2a\u56fe\u7684\u6240\u6709\u8282\u70b9\u6392\u5e8f\uff0c\u800c\u56fe\u4e2d\u6709\u82e5\u5e72\u9650\u5236\uff0c\u5f62\u5982\uff1a\u201c\u70b9 x \u8981\u5728\u70b9 y \u540e\u9762\u201d\u3002  \u4e3e\u4e2a\u73b0\u5b9e\u4e00\u4e9b\u7684\u6817\u5b50\uff0c\u6bd4\u5982\u4f60\u53bb\u7ed9\u521a\u5f00\u59cb\u5b66 OI \u7684\u540c\u5b66\u4eec\u8bb2\u8bfe\uff0c\u4f60\u4f1a\u53d1\u73b0\u6709\u5f88\u591a\u77e5\u8bc6\u70b9\u9700\u8981\u524d\u7f6e\u6280\u80fd\u624d\u80fd\u591f\u542c\u61c2\uff0c\u5e76\u975e\u662f\u6240\u6709\u4eba\u90fd\u53ef\u4ee5\u7b2c\u4e00\u5929\u5c31\u5b66\u660e\u767d  \u7ebf\u6bb5\u6811 \u3002\u600e\u4e48\u529e\u5462\uff1f\u8bb2\u8bfe\u7684\u65f6\u5019\u662f\u9700\u8981\u6309\u987a\u5e8f\u6765\u7684\uff0c\u5e76\u4e0d\u80fd\u540c\u65f6\u8bb2\u82e5\u5e72\u4e2a\u77e5\u8bc6\u70b9\u3002\u8fd9\u65f6\u5019\u5c31\u9700\u8981\u7528\u5230\u62d3\u6251\u6392\u5e8f\u4e86\u3002  \u5f62\u5f0f\u5316\u5b9a\u4e49\u4e00\u4e0b\uff1a  \u7ed9\u5b9a\u4e00\u4e2a [DAG \uff08\u6709\u5411\u65e0\u73af\u56fe\uff09])(dag)\uff0c\u5982\u679c\u4ece  i i  \u5230  j j  \u6709\u8fb9\uff0c\u5567\u8ba4\u4e3a  j j  \u4f9d\u8d56\u4e8e  i i \u3002\u5982\u679c  i i  \u5230  j j  \u6709\u8def\u5f84\uff08 i i  \u53ef\u8fbe  j j \uff09\uff0c\u5219\u79f0  j j  \u95f4\u63a5\u4f9d\u8d56\u4e8e  i i \u3002  \u62d3\u6251\u6392\u5e8f\u7684\u76ee\u6807\u662f\u5c06\u6240\u6709\u8282\u70b9\u6392\u5e8f\uff0c\u4f7f\u5f97\u6392\u5728\u524d\u9762\u7684\u8282\u70b9\u4e0d\u80fd\u4f9d\u8d56\u4e8e\u6392\u5728\u540e\u9762\u7684\u8282\u70b9\u3002",
            "title": "\u5b9a\u4e49"
        },
        {
            "location": "/graph/topo/#_2",
            "text": "",
            "title": "\u62d3\u6251\u6392\u5e8f\u7b97\u6cd5\u53ca\u5b9e\u73b0"
        },
        {
            "location": "/graph/topo/#_3",
            "text": "\u6838\u5fc3\u601d\u60f3\u662f\u6bcf\u6b21\u627e\u4e00\u4e2a\u5165\u5ea6\u4e3a 0 \u7684\u8282\u70b9\uff0c\u53d6\u51fa\u6765\u4e22\u5230\u7b54\u6848\u5e8f\u5217\u91cc\u3002\u7136\u540e\u518d\u5220\u9664\u8fd9\u4e2a\u8282\u70b9\uff08\u4ee5\u53ca\u5bf9\u5e94\u7684\u8fb9\uff09\uff0c\u66f4\u65b0\u5176\u4ed6\u8282\u70b9\u7684\u5165\u5ea6\uff0c\u4e0d\u65ad\u91cd\u590d\u6b64\u64cd\u4f5c\u76f4\u5230\u7b54\u6848\u5e8f\u5217\u5305\u542b\u4e86\u6240\u6709\u7684\u8282\u70b9\u3002  \u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u67d0\u4e00\u65f6\u523b\u53d1\u73b0\u627e\u4e0d\u5230\u5165\u5ea6\u4e3a 0 \u7684\u8282\u70b9\uff0c\u5219\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u4e2a\u56fe\u4e0d\u80fd\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff08\u4f1a\u4ea7\u751f\u51b2\u7a81\uff09\u3002  \u8fd9\u91cc\u5165\u5ea6\u4e3a 0 \u7684\u70b9\u5e94\u8be5\u5982\u4f55\u9009\u53d6\u5462\uff1f \u968f\u4fbf\u9009\u5c31\u597d\u5566\uff01\u627e\u5230\u4e00\u4e2a\u5c31\u53ef\u4ee5\u76f4\u63a5\u7528\uff01 \u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u5462\uff1f\n\u662f\u56e0\u4e3a\u67d0\u4e2a\u70b9\u65e2\u7136\u5728\u65b0\u56fe\u4e2d\u5165\u5ea6\u4e3a 0 \u4e86\uff0c\u90a3\u4e48\u5b83\u5c31\u6ca1\u6709\u4f9d\u8d56\u7684\u4e1c\u897f\u4e86\uff08\u6216\u8005\u4f9d\u8d56\u7684\u90fd\u5df2\u7ecf\u88ab\u5b8c\u6210\u4e86\uff09\u3002",
            "title": "\u7b97\u6cd5\u601d\u8def"
        },
        {
            "location": "/graph/topo/#_4",
            "text": "\u4f2a\u4ee3\u7801\uff1a  bool toposort() {\n    q = new queue();\n    for (i = 0; i < n; i++)\n        if (in_deg[i] == 0) q.push(i);\n    ans = new vector();\n    while (!q.empty()) {\n        u = q.pop();\n        ans.push_back(u);\n        for each edge(u, v) {\n            if (--in_deg[v] == 0) q.push(v);\n        }\n    }\n    if (ans.size() == n) {\n        for (i = 0; i < n; i++)\n            std::cout << ans[i] << std::endl;\n        return true;\n    } else {\n        return false;\n    }\n}  // dfs \u7248\u672c  bool   dfs ( int   u ){ \n   c [ u ]   =   - 1 ; \n   for ( int   v   =   0 ;   v   <=   n ;   v ++ )   if ( G [ u ][ v ])   { \n     if ( c [ v ] < 0 )   return   false ; \n     else   if ( ! c [ v ])   dfs ( v ); \n   } \n   c [ u ]   =   1 ;   topo . push_back ( u ); \n   return   true ;  }  bool   toposort (){ \n   topo . clear (); \n   memset ( c ,   0 ,   sizeof ( c )); \n   for ( int   u   =   0 ;   u   <=   n ;   u ++ )   if ( ! c [ u ]) \n     if ( ! dfs ( u ))   return   false ; \n   reverse ( topo . begin (),   topo . end ()); \n   return   true ;  }   \u65f6\u95f4\u590d\u6742\u5ea6\uff1a O(n+m) O(n+m) \n\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a O(n) O(n)",
            "title": "\u5b9e\u73b0"
        },
        {
            "location": "/graph/topo/#_5",
            "text": "\u8003\u8651\u4e00\u4e2a\u56fe\uff0c\u5220\u6389\u67d0\u4e2a\u5165\u5ea6\u4e3a 0 \u7684\u8282\u70b9\u4e4b\u540e\uff0c\u5982\u679c\u65b0\u56fe\u53ef\u4ee5\u62d3\u6251\u6392\u5e8f\uff0c\u90a3\u4e48\u539f\u56fe\u4e00\u5b9a\u4e5f\u53ef\u4ee5\u3002\u53cd\u8fc7\u6765\uff0c\u5982\u679c\u539f\u56fe\u53ef\u4ee5\u62d3\u6251\u6392\u5e8f\uff0c\u90a3\u4e48\u5220\u6389\u540e\u4e5f\u53ef\u4ee5\u3002",
            "title": "\u5408\u7406\u6027\u8bc1\u660e"
        },
        {
            "location": "/graph/dynamic-tree-divide/",
            "text": "",
            "title": "\u52a8\u6001\u6811\u5206\u6cbb"
        },
        {
            "location": "/graph/2-sat/",
            "text": "",
            "title": "2-SAT"
        },
        {
            "location": "/graph/euler/",
            "text": "",
            "title": "\u6b27\u62c9\u56fe"
        },
        {
            "location": "/graph/scc/",
            "text": "",
            "title": "\u5f3a\u8fde\u901a\u5206\u91cf"
        },
        {
            "location": "/graph/bcc/",
            "text": "",
            "title": "\u53cc\u8fde\u901a\u5206\u91cf"
        },
        {
            "location": "/graph/bridge/",
            "text": "",
            "title": "\u5272\u70b9\u5272\u8fb9"
        },
        {
            "location": "/graph/differential-constraints/",
            "text": "",
            "title": "\u5dee\u5206\u7ea6\u675f"
        },
        {
            "location": "/graph/dag/",
            "text": "\u5b9a\u4e49\n\u00b6\n\n\n\u8fb9\u6709\u5411\uff0c\u65e0\u73af\u3002\n\n\n\u82f1\u6587\u540d\u53eb Directed Acyclic Graph\uff0c\u7f29\u5199\u662f DAG\u3002\n\n\n\u6027\u8d28\n\u00b6\n\n\n\n\n\n\n\u80fd \n\u62d3\u6251\u6392\u5e8f\n \u7684\u56fe\uff0c\u4e00\u5b9a\u662f\u6709\u5411\u65e0\u73af\u56fe\n\n\n\u5982\u679c\u6709\u73af\uff0c\u90a3\u4e48\u73af\u4e0a\u7684\u4efb\u610f\u4e24\u4e2a\u8282\u70b9\u5728\u4efb\u610f\u5e8f\u5217\u4e2d\u90fd\u4e0d\u6ee1\u8db3\u6761\u4ef6\u4e86\n\n\n\n\n\n\n\u6709\u5411\u65e0\u73af\u56fe\uff0c\u4e00\u5b9a\u80fd\u62d3\u6251\u6392\u5e8f\n\n\n\uff08\u5f52\u7eb3\u6cd5\uff09\u5047\u8bbe\u8282\u70b9\u6570\u4e0d\u8d85\u8fc7 \nk\nk\n \u7684 \u6709\u5411\u65e0\u73af\u56fe\u90fd\u80fd\u62d3\u6251\u6392\u5e8f\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8282\u70b9\u6570\u7b49\u4e8e \nk\nk\n \u7684\uff0c\u8003\u8651\u6267\u884c\u62d3\u6251\u6392\u5e8f\u7b2c\u4e00\u6b65\u4e4b\u540e\u7684\u60c5\u5f62\u5373\u53ef\u3002\n\n\n\n\n\n\n\u5224\u5b9a\n\u00b6\n\n\n\u5982\u4f55\u5224\u5b9a\u4e00\u4e2a\u56fe\u662f\u5426\u662f\u6709\u5411\u65e0\u73af\u56fe\u5462\uff1f\n\n\n\u68c0\u9a8c\u5b83\u662f\u5426\u53ef\u4ee5\u8fdb\u884c \n\u62d3\u6251\u6392\u5e8f\n \u5373\u53ef\u3002\n\n\n\u5f53\u7136\u4e5f\u6709\u53e6\u5916\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5bf9\u56fe\u8fdb\u884c\u4e00\u904d \nDFS\n\uff0c\u5728\u5f97\u5230\u7684 DFS \u6811\u4e0a\u770b\u770b\u6709\u6ca1\u6709\u8fde\u5411\u7956\u5148\u7684\u975e\u6811\u8fb9\uff08\u8fd4\u7956\u8fb9\uff09\u3002\u5982\u679c\u6709\u7684\u8bdd\uff0c\u90a3\u5c31\u6709\u73af\u4e86\u3002",
            "title": "\u6709\u5411\u65e0\u73af\u56fe"
        },
        {
            "location": "/graph/dag/#_1",
            "text": "\u8fb9\u6709\u5411\uff0c\u65e0\u73af\u3002  \u82f1\u6587\u540d\u53eb Directed Acyclic Graph\uff0c\u7f29\u5199\u662f DAG\u3002",
            "title": "\u5b9a\u4e49"
        },
        {
            "location": "/graph/dag/#_2",
            "text": "\u80fd  \u62d3\u6251\u6392\u5e8f  \u7684\u56fe\uff0c\u4e00\u5b9a\u662f\u6709\u5411\u65e0\u73af\u56fe  \u5982\u679c\u6709\u73af\uff0c\u90a3\u4e48\u73af\u4e0a\u7684\u4efb\u610f\u4e24\u4e2a\u8282\u70b9\u5728\u4efb\u610f\u5e8f\u5217\u4e2d\u90fd\u4e0d\u6ee1\u8db3\u6761\u4ef6\u4e86    \u6709\u5411\u65e0\u73af\u56fe\uff0c\u4e00\u5b9a\u80fd\u62d3\u6251\u6392\u5e8f  \uff08\u5f52\u7eb3\u6cd5\uff09\u5047\u8bbe\u8282\u70b9\u6570\u4e0d\u8d85\u8fc7  k k  \u7684 \u6709\u5411\u65e0\u73af\u56fe\u90fd\u80fd\u62d3\u6251\u6392\u5e8f\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8282\u70b9\u6570\u7b49\u4e8e  k k  \u7684\uff0c\u8003\u8651\u6267\u884c\u62d3\u6251\u6392\u5e8f\u7b2c\u4e00\u6b65\u4e4b\u540e\u7684\u60c5\u5f62\u5373\u53ef\u3002",
            "title": "\u6027\u8d28"
        },
        {
            "location": "/graph/dag/#_3",
            "text": "\u5982\u4f55\u5224\u5b9a\u4e00\u4e2a\u56fe\u662f\u5426\u662f\u6709\u5411\u65e0\u73af\u56fe\u5462\uff1f  \u68c0\u9a8c\u5b83\u662f\u5426\u53ef\u4ee5\u8fdb\u884c  \u62d3\u6251\u6392\u5e8f  \u5373\u53ef\u3002  \u5f53\u7136\u4e5f\u6709\u53e6\u5916\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5bf9\u56fe\u8fdb\u884c\u4e00\u904d  DFS \uff0c\u5728\u5f97\u5230\u7684 DFS \u6811\u4e0a\u770b\u770b\u6709\u6ca1\u6709\u8fde\u5411\u7956\u5148\u7684\u975e\u6811\u8fb9\uff08\u8fd4\u7956\u8fb9\uff09\u3002\u5982\u679c\u6709\u7684\u8bdd\uff0c\u90a3\u5c31\u6709\u73af\u4e86\u3002",
            "title": "\u5224\u5b9a"
        },
        {
            "location": "/graph/bi-graph/",
            "text": "\u5b9a\u4e49\n\u00b6\n\n\n\u4e8c\u5206\u56fe\u7684\u82f1\u6587\u540d\u53eb Bipartite graph\u3002\n\n\n\u4e8c\u5206\u56fe\u662f\u4ec0\u4e48\uff1f\u8282\u70b9\u7531\u4e24\u4e2a\u96c6\u5408\u7ec4\u6210\uff0c\u4e14\u4e24\u4e2a\u96c6\u5408\u4e4b\u95f4\u6ca1\u6709\u8fb9\u7684\u56fe\u3002\n\n\n\u6362\u8a00\u4e4b\uff0c\u5b58\u5728\u4e00\u79cd\u65b9\u6848\uff0c\u5c06\u8282\u70b9\u5212\u5206\u6210\u6ee1\u8db3\u4ee5\u4e0a\u6027\u8d28\u7684\u4e24\u4e2a\u96c6\u5408\u3002\n\n\n\n\n\uff08\u56fe\u6e90 \n\u82f1\u6587\u7ef4\u57fa\n\uff09\n\n\n\u6027\u8d28\n\u00b6\n\n\n\n\n\n\n\u5982\u679c\u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u70b9\u5206\u522b\u67d3\u6210\u9ed1\u8272\u548c\u767d\u8272\uff0c\u53ef\u4ee5\u53d1\u73b0\u4e8c\u5206\u56fe\u4e2d\u7684\u6bcf\u4e00\u6761\u8fb9\u90fd\u4e00\u5b9a\u662f\u8fde\u63a5\u4e00\u4e2a\u9ed1\u8272\u70b9\u548c\u4e00\u4e2a\u767d\u8272\u70b9\u3002\n\n\n\n\n\u4e8c\u5206\u56fe\u4e0d\u5b58\u5728\u957f\u5ea6\u4e3a\u5947\u6570\u7684\u73af\n\u56e0\u4e3a\u6bcf\u4e00\u6761\u8fb9\u90fd\u662f\u4ece\u4e00\u4e2a\u96c6\u5408\u8d70\u5230\u53e6\u4e00\u4e2a\u96c6\u5408\uff0c\u53ea\u6709\u8d70\u5076\u6570\u6b21\u624d\u53ef\u80fd\u56de\u5230\u540c\u4e00\u4e2a\u96c6\u5408\n\n\n\n\n\u5224\u5b9a\n\u00b6\n\n\n\u5982\u4f55\u5224\u5b9a\u4e00\u4e2a\u56fe\u662f\u4e0d\u662f\u4e8c\u5206\u56fe\u5462\uff1f\n\n\n\u6362\u8a00\u4e4b\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u662f\u5426\u53ef\u4ee5\u5c06\u56fe\u4e2d\u7684\u9876\u70b9\u5206\u6210\u4e24\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u96c6\u5408\u3002\n\n\n\u663e\u7136\uff0c\u76f4\u63a5\u679a\u4e3e\u7b54\u6848\u96c6\u5408\u7684\u8bdd\u5b9e\u5728\u662f\u592a\u6162\u4e86\uff0c\u6211\u4eec\u9700\u8981\u66f4\u9ad8\u6548\u7684\u65b9\u6cd5\u3002\n\n\n\u8003\u8651\u4e0a\u6587\u63d0\u5230\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \nDFS\n \u6216\u8005 \nBFS\n \u6765\u904d\u5386\u8fd9\u5f20\u56fe\u3002\u5982\u679c\u53d1\u73b0\u4e86\u5947\u73af\uff0c\u90a3\u4e48\u5c31\u4e0d\u662f\u4e8c\u5206\u56fe\uff0c\u5426\u5219\u662f\u3002\n\n\n\u5e94\u7528\n\u00b6\n\n\n\u4e8c\u5206\u56fe\u5339\u914d\n\u00b6\n\n\n\u6700\u5927\u5339\u914d\n\u00b6\n\n\n\u6700\u5927\u6743\u5339\u914d\n\u00b6\n\n\n\u4e00\u822c\u56fe\u5339\u914d\n\u00b6",
            "title": "\u4e8c\u5206\u56fe"
        },
        {
            "location": "/graph/bi-graph/#_1",
            "text": "\u4e8c\u5206\u56fe\u7684\u82f1\u6587\u540d\u53eb Bipartite graph\u3002  \u4e8c\u5206\u56fe\u662f\u4ec0\u4e48\uff1f\u8282\u70b9\u7531\u4e24\u4e2a\u96c6\u5408\u7ec4\u6210\uff0c\u4e14\u4e24\u4e2a\u96c6\u5408\u4e4b\u95f4\u6ca1\u6709\u8fb9\u7684\u56fe\u3002  \u6362\u8a00\u4e4b\uff0c\u5b58\u5728\u4e00\u79cd\u65b9\u6848\uff0c\u5c06\u8282\u70b9\u5212\u5206\u6210\u6ee1\u8db3\u4ee5\u4e0a\u6027\u8d28\u7684\u4e24\u4e2a\u96c6\u5408\u3002   \uff08\u56fe\u6e90  \u82f1\u6587\u7ef4\u57fa \uff09",
            "title": "\u5b9a\u4e49"
        },
        {
            "location": "/graph/bi-graph/#_2",
            "text": "\u5982\u679c\u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u70b9\u5206\u522b\u67d3\u6210\u9ed1\u8272\u548c\u767d\u8272\uff0c\u53ef\u4ee5\u53d1\u73b0\u4e8c\u5206\u56fe\u4e2d\u7684\u6bcf\u4e00\u6761\u8fb9\u90fd\u4e00\u5b9a\u662f\u8fde\u63a5\u4e00\u4e2a\u9ed1\u8272\u70b9\u548c\u4e00\u4e2a\u767d\u8272\u70b9\u3002   \u4e8c\u5206\u56fe\u4e0d\u5b58\u5728\u957f\u5ea6\u4e3a\u5947\u6570\u7684\u73af \u56e0\u4e3a\u6bcf\u4e00\u6761\u8fb9\u90fd\u662f\u4ece\u4e00\u4e2a\u96c6\u5408\u8d70\u5230\u53e6\u4e00\u4e2a\u96c6\u5408\uff0c\u53ea\u6709\u8d70\u5076\u6570\u6b21\u624d\u53ef\u80fd\u56de\u5230\u540c\u4e00\u4e2a\u96c6\u5408",
            "title": "\u6027\u8d28"
        },
        {
            "location": "/graph/bi-graph/#_3",
            "text": "\u5982\u4f55\u5224\u5b9a\u4e00\u4e2a\u56fe\u662f\u4e0d\u662f\u4e8c\u5206\u56fe\u5462\uff1f  \u6362\u8a00\u4e4b\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u662f\u5426\u53ef\u4ee5\u5c06\u56fe\u4e2d\u7684\u9876\u70b9\u5206\u6210\u4e24\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u96c6\u5408\u3002  \u663e\u7136\uff0c\u76f4\u63a5\u679a\u4e3e\u7b54\u6848\u96c6\u5408\u7684\u8bdd\u5b9e\u5728\u662f\u592a\u6162\u4e86\uff0c\u6211\u4eec\u9700\u8981\u66f4\u9ad8\u6548\u7684\u65b9\u6cd5\u3002  \u8003\u8651\u4e0a\u6587\u63d0\u5230\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528  DFS  \u6216\u8005  BFS  \u6765\u904d\u5386\u8fd9\u5f20\u56fe\u3002\u5982\u679c\u53d1\u73b0\u4e86\u5947\u73af\uff0c\u90a3\u4e48\u5c31\u4e0d\u662f\u4e8c\u5206\u56fe\uff0c\u5426\u5219\u662f\u3002",
            "title": "\u5224\u5b9a"
        },
        {
            "location": "/graph/bi-graph/#_4",
            "text": "",
            "title": "\u5e94\u7528"
        },
        {
            "location": "/graph/bi-graph/#_5",
            "text": "",
            "title": "\u4e8c\u5206\u56fe\u5339\u914d"
        },
        {
            "location": "/graph/bi-graph/#_6",
            "text": "",
            "title": "\u6700\u5927\u5339\u914d"
        },
        {
            "location": "/graph/bi-graph/#_7",
            "text": "",
            "title": "\u6700\u5927\u6743\u5339\u914d"
        },
        {
            "location": "/graph/bi-graph/#_8",
            "text": "",
            "title": "\u4e00\u822c\u56fe\u5339\u914d"
        },
        {
            "location": "/graph/shortest-path/",
            "text": "",
            "title": "\u6700\u77ed\u8def"
        },
        {
            "location": "/graph/min-circle/",
            "text": "",
            "title": "\u6700\u5c0f\u73af"
        },
        {
            "location": "/graph/kth-path/",
            "text": "",
            "title": "k \u77ed\u8def"
        },
        {
            "location": "/graph/euler/",
            "text": "",
            "title": "\u6b27\u62c9\u56fe"
        },
        {
            "location": "/graph/flow/",
            "text": "",
            "title": "\u7f51\u7edc\u6d41"
        },
        {
            "location": "/graph/flow/node/",
            "text": "",
            "title": "\u62c6\u70b9"
        },
        {
            "location": "/graph/flow/max-flow/",
            "text": "",
            "title": "\u6700\u5927\u6d41"
        },
        {
            "location": "/graph/flow/min-cut/",
            "text": "",
            "title": "\u6700\u5c0f\u5272"
        },
        {
            "location": "/graph/flow/min-cost/",
            "text": "",
            "title": "\u8d39\u7528\u6d41"
        },
        {
            "location": "/graph/flow/bound/",
            "text": "",
            "title": "\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41"
        },
        {
            "location": "/geometry/",
            "text": "",
            "title": "\u8ba1\u7b97\u51e0\u4f55\u90e8\u5206\u7b80\u4ecb"
        },
        {
            "location": "/geometry/2d/",
            "text": "",
            "title": "\u4e8c\u7ef4\u8ba1\u7b97\u51e0\u4f55\u57fa\u7840"
        },
        {
            "location": "/geometry/3d/",
            "text": "",
            "title": "\u4e09\u7ef4\u8ba1\u7b97\u51e0\u4f55\u57fa\u7840"
        },
        {
            "location": "/geometry/pick/",
            "text": "",
            "title": "pick\u5b9a\u7406"
        },
        {
            "location": "/geometry/triangulation/",
            "text": "",
            "title": "\u4e09\u89d2\u5256\u5206"
        },
        {
            "location": "/geometry/convex-hull/",
            "text": "",
            "title": "\u51f8\u5305"
        },
        {
            "location": "/geometry/scanning/",
            "text": "",
            "title": "\u626b\u63cf\u7ebf"
        },
        {
            "location": "/geometry/rotating-calipers/",
            "text": "",
            "title": "\u65cb\u8f6c\u5361\u58f3"
        },
        {
            "location": "/geometry/half-plane-intersection/",
            "text": "",
            "title": "\u534a\u5e73\u9762\u4ea4"
        },
        {
            "location": "/geometry/magic/",
            "text": "",
            "title": "\u5176\u4ed6\u9ed1\u79d1\u6280"
        },
        {
            "location": "/misc/",
            "text": "",
            "title": "\u6742\u9879\u7b80\u4ecb"
        },
        {
            "location": "/misc/non-traditional/",
            "text": "",
            "title": "\u975e\u4f20\u7edf\u9898\uff08\u63d0\u7b54\u5927\u6cd5\uff09"
        },
        {
            "location": "/misc/cdq-divide/",
            "text": "",
            "title": "cdq\u5206\u6cbb"
        },
        {
            "location": "/misc/mo-algo/",
            "text": "\u666e\u901a\u83ab\u961f\u7b97\u6cd5\n\u00b6\n\n\n\u8fd9\u91cc\u5185\u5bb9\u6709\u8bf8\u591a\u662f\u501f\u9274\u7f51\u4e0a\u7684\uff08O(\u2229_\u2229)O\u8c22\u8c22\u5566\uff01\uff09\uff0c\u4e3b\u8981\u501f\u9274\u4e86\uff1a\nhttps://blog.sengxian.com/algorithms/mo-s-algorithm\n\n\n\u6982\u8ff0\n\u00b6\n\n\n\u83ab\u961f\u7b97\u6cd5\u662f\u7531\u83ab\u6d9b\u63d0\u51fa\u7684\u7b97\u6cd5\uff0c\u53ef\u4ee5\u89e3\u51b3\u4e00\u7c7b\u79bb\u7ebf\u533a\u95f4\u8be2\u95ee\u95ee\u9898\uff0c\u9002\u7528\u6027\u6781\u4e3a\u5e7f\u6cdb\u3002\u540c\u65f6\u5c06\u5176\u52a0\u4ee5\u6269\u5c55\uff0c\u4fbf\u80fd\u8f7b\u677e\u5904\u7406\u6811\u4e0a\u8def\u5f84\u8be2\u95ee\u4ee5\u53ca\u652f\u6301\u4fee\u6539\u64cd\u4f5c\u3002\n\n\n\u5f62\u5f0f\n\u00b6\n\n\n\u5bf9\u4e8e\u5e8f\u5217\u4e0a\u7684\u533a\u95f4\u8be2\u95ee\u95ee\u9898\uff0c\u5982\u679c\u4ece\n[l,r]\n[l,r]\n\u7684\u7b54\u6848\u80fd\u591f\nO(1)\nO(1)\n\u6269\u5c55\u5230\n[l-1,r],[l+1,r],[l,r+1],[l,r-1]\n[l-1,r],[l+1,r],[l,r+1],[l,r-1]\n\uff08\u5373\u4e0e\n[l,r]\n[l,r]\n\u76f8\u90bb\u7684\u533a\u95f4\uff09\u7684\u7b54\u6848\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\nO(n\\sqrt{n})\nO(n\\sqrt{n})\n\u7684\u590d\u6742\u5ea6\u5185\u6c42\u51fa\u6240\u6709\u8be2\u95ee\u7684\u7b54\u6848\u3002\n\n\n\u5b9e\u73b0\n\u00b6\n\n\n\u79bb\u7ebf\u540e\u6392\u5e8f\uff0c\u987a\u5e8f\u5904\u7406\u6bcf\u4e2a\u8be2\u95ee\uff0c\u66b4\u529b\u4ece\u4e0a\u4e00\u4e2a\u533a\u95f4\u7684\u7b54\u6848\u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2a\u533a\u95f4\u7b54\u6848\uff08\u4e00\u6b65\u4e00\u6b65\u79fb\u52a8\u5373\u53ef\uff09\u3002\n\n\n\u6392\u5e8f\u65b9\u6cd5\n\u00b6\n\n\n\u5bf9\u4e8e\u533a\u95f4\n[l,r]\n[l,r]\n,\u4ee5l\u6240\u5728\u5757\u7684\u7f16\u53f7\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0cr\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\n\u6a21\u677f\n\u00b6\n\n\nint l = 0, r = 0, nowAns = 0;\n\ninline void move(int pos, int sign) {\n    // update nowAns\n}\n\nvoid solve() {\n    BLOCK_SIZE = int(ceil(pow(n, 0.5)));\n      sort(querys, querys + m);\n    for (int i = 0; i \n<\n m; ++i) {\n        const query &q = querys[i];\n        while (l > q.l) move(--l, 1);\n        while (r \n<\n q.r) move(r++, 1);\n        while (l \n<\n q.l) move(l++, -1);\n        while (r > q.r) move(--r, -1);\n        ans[q.id] = nowAns;\n    }\n}\n\n\n\n\n\u590d\u6742\u5ea6\u5206\u6790\n\u00b6\n\n\n\u9996\u5148\u662f\u5206\u5757\u8fd9\u4e00\u6b65\uff0c\u8fd9\u4e00\u6b65\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6beb\u65e0\u7591\u95ee\u5730\u662f \nO(\\sqrt{n}\\sqrt{n}log\\sqrt{n}+nlogn)=O(nlogn)\nO(\\sqrt{n}\\sqrt{n}log\\sqrt{n}+nlogn)=O(nlogn)\n;\n\n\n\u63a5\u7740\u5c31\u5230\u4e86\u83ab\u961f\u7b97\u6cd5\u7684\u7cbe\u9ad3\u4e86\uff0c\u4e0b\u9762\u6211\u4eec\u7528\u901a\u4fd7\u6613\u61c2\u7684\u521d\u4e2d\u65b9\u6cd5\u6765\u8bc1\u660e\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\nO(n\\sqrt{n})\nO(n\\sqrt{n})\n\uff1b\n\n\n\u8bc1\uff1a\u4ee4\u6bcf\u4e00\u5757\u4e2dL\u7684\u6700\u5927\u503c\u4e3a \nmax1,max2,max3,...,maxceil(\\sqrt{n})\nmax1,max2,max3,...,maxceil(\\sqrt{n})\n\u3002\n\n\n\u7531\u7b2c\u4e00\u6b21\u6392\u5e8f\u53ef\u77e5\uff0c\nmax1<=max2<=...<=maxceil(\\sqrt{n})\nmax1<=max2<=...<=maxceil(\\sqrt{n})\n\u3002\n\n\n\u663e\u7136\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5757\u66b4\u529b\u6c42\u51fa\u7b2c\u4e00\u4e2a\u8be2\u95ee\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \nO(n)\nO(n)\n\u3002\n\n\n\u8003\u8651\u6700\u574f\u7684\u60c5\u51b5\uff0c\u5728\u6bcf\u4e00\u5757\u4e2d\uff0cR \u7684\u6700\u5927\u503c\u5747\u4e3a n\uff0c\u6bcf\u6b21\u4fee\u6539\u64cd\u4f5c\u5747\u8981\u5c06 L \u7531 \nmax_{i - 1}\nmax_{i - 1}\n \u4fee\u6539\u81f3 \nmax_i\nmax_i\n \u6216\u7531 \nmax_i\nmax_i\n \u4fee\u6539\u81f3 \nmax_{i - 1}\nmax_{i - 1}\n\u3002\n\n\n\u8003\u8651 R\uff1a\u56e0\u4e3a R \u5728\u5757\u4e2d\u5df2\u7ecf\u6392\u597d\u5e8f\uff0c\u6240\u4ee5\u5728\u540c\u4e00\u5757\u4fee\u6539\u5b8c\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \nO(n)\nO(n)\n\u3002\u5bf9\u4e8e\u6240\u6709\u5757\u5c31\u662f \nO(n\\sqrt{n})\nO(n\\sqrt{n})\n\u3002\n\n\n\u91cd\u70b9\u5206\u6790 L\uff1a\u56e0\u4e3a\u6bcf\u4e00\u6b21\u6539\u53d8\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f \nO(maxi-maxi-1)\nO(maxi-maxi-1)\n \u7684\uff0c\u6240\u4ee5\u5728\u540c\u4e00\u5757\u4e2d\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \nO(\\sqrt{n}*(max_i-max_{i-1}))\nO(\\sqrt{n}*(max_i-max_{i-1}))\n\u3002\n\n\n\u5c06\u6bcf\u4e00\u5757L\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5408\u5728\u4e00\u8d77\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a\n\n\n\n\n\n\\begin{aligned}\n\u5bf9\u4e8e L \u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a & = O(\\sqrt{n}(max1-1)+\\sqrt{n}(max2-max1)+\\sqrt{n}(max3-max2)+...+\\sqrt{n}(maxceil(\\sqrt{n})-maxceil(\\sqrt{n}-1))) \\\\\\\\\n& = O(\\sqrt{n}*(max1-1+max2-max1+max3-max2+...+maxceil(\\sqrt{n}-1)-maxceil(\\sqrt{n}-2)+maxceil(\\sqrt{n})-maxceil(\\sqrt{n}-1))) \\\\\\\\\n& = O(\\sqrt{n}*(maxceil(\\sqrt{n})-1))\n\\end{aligned}\n\n\n\n\n\\begin{aligned}\n\u5bf9\u4e8e L \u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a & = O(\\sqrt{n}(max1-1)+\\sqrt{n}(max2-max1)+\\sqrt{n}(max3-max2)+...+\\sqrt{n}(maxceil(\\sqrt{n})-maxceil(\\sqrt{n}-1))) \\\\\\\\\n& = O(\\sqrt{n}*(max1-1+max2-max1+max3-max2+...+maxceil(\\sqrt{n}-1)-maxceil(\\sqrt{n}-2)+maxceil(\\sqrt{n})-maxceil(\\sqrt{n}-1))) \\\\\\\\\n& = O(\\sqrt{n}*(maxceil(\\sqrt{n})-1))\n\\end{aligned}\n\n\n\n\n\n(\u88c2\u9879\u6c42\u548c)\n\n\n\u7531\u9898\u53ef\u77e5 \nmaxceil(\\sqrt{n})\nmaxceil(\\sqrt{n})\n \u6700\u5927\u4e3a n\uff0c\u6240\u4ee5 L \u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u574f\u60c5\u51b5\u4e0b\u4e3a \nO(n\\sqrt{n})\nO(n\\sqrt{n})\n\u3002\n\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u83ab\u961f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \nO(n\\sqrt{n})\nO(n\\sqrt{n})\n\uff1b\n\n\n\u4f8b\u9898&\u4ee3\u7801\n\u00b6\n\n\n\u5c0fZ\u7684\u889c\u5b50\n\n\n\u601d\u8def\uff1a\u83ab\u961f\u7b97\u6cd5\u6a21\u677f\u9898\u3002\n\u5bf9\u4e8e\u533a\u95f4\n[l,r]\n[l,r]\n,\u4ee5l\u6240\u5728\u5757\u7684\u7f16\u53f7\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0cr\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\u7136\u540e\u4ece\u5e8f\u5217\u7684\u7b2c\u4e00\u4e2a\u8be2\u95ee\u5f00\u59cb\u8ba1\u7b97\u7b54\u6848\uff0c\u7b2c\u4e00\u4e2a\u8be2\u95ee\u901a\u8fc7\u76f4\u63a5\u66b4\u529b\u7b97\u51fa\uff0c\u590d\u6742\u5ea6\u4e3a\nO(n)\nO(n)\n\uff0c\u540e\u9762\u7684\u8be2\u95ee\u5728\u524d\u4e00\u4e2a\u8be2\u95ee\u7684\u57fa\u7840\u4e0a\u5f97\u5230\u7b54\u6848\u3002\n\n\n\u5177\u4f53\u505a\u6cd5\uff1a\n\u5bf9\u4e8e\u533a\u95f4\n[i,i]\n[i,i]\n\uff0c\u7531\u4e8e\u533a\u95f4\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u80fd\u77e5\u9053\u7b54\u6848\u3002\n\u7136\u540e\u4e00\u6b65\u4e00\u6b65\u4ece\u5f53\u524d\u533a\u95f4\uff08\u5df2\u77e5\u7b54\u6848\uff09\u5411\u4e0b\u4e00\u4e2a\u533a\u95f4\u9760\u8fd1\u3002\n\n\n\u6211\u4eec\u8bbe\ncol[i]\ncol[i]\n\u8868\u793a\u5f53\u524d\u989c\u8272i\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff0c\nans\nans\n\u5f53\u524d\u5171\u6709\u591a\u5c11\u79cd\u53ef\u884c\u7684\u914d\u5bf9\u65b9\u6848\uff08\u6709\u591a\u5c11\u79cd\u53ef\u4ee5\u9009\u5230\u4e00\u53cc\u989c\u8272\u76f8\u540c\u7684\u889c\u5b50\uff09\uff0c\u8868\u793a\u7136\u540e\u6bcf\u6b21\u79fb\u52a8\u7684\u65f6\u5019\u66f4\u65b0\u7b54\u6848\u2014\u2014\u8bbe\u5f53\u524d\u989c\u8272\u4e3ak\uff0c\u5982\u679c\u662f\u589e\u957f\u533a\u95f4\u5c31\u662f\nans\nans\n\u52a0\u4e0a\nC(col[k]+1,2)-C(col[k],2)\nC(col[k]+1,2)-C(col[k],2)\n\uff0c\u5982\u679c\u662f\u7f29\u77ed\u5c31\u662f\nans\nans\n\u51cf\u53bb\nC(col[k],2)-C(col[k]-1,2)\nC(col[k],2)-C(col[k]-1,2)\n\u3002\u8fd9\u5e94\u8be5\u5f88\u597d\u7406\u89e3\u3002\n\u800c\u8fd9\u4e2a\u8be2\u95ee\u7684\u7b54\u6848\u5c31\u662f\nans/C(r-l+1,2)\nans/C(r-l+1,2)\n\n\n\u8fd9\u91cc\u6709\u4e2a\u4f18\u5316\uff1a\n\nC(a,2)\nC(a,2)\n=\na\\times (a-1)/2\na\\times (a-1)/2\n\n\u6240\u4ee5\nC(a+1,2)-C(a,2)\nC(a+1,2)-C(a,2)\n=\n(a+1)\\times a/2-a\\times (a-1)/2\n(a+1)\\times a/2-a\\times (a-1)/2\n=\na/2\\times (a+1-a+1)\na/2\\times (a+1-a+1)\n=\na/2\\times 2\na/2\\times 2\n=\na\na\n\n\u6240\u4ee5\nC(col[k]+1,2)-C(col[k],2)\nC(col[k]+1,2)-C(col[k],2)\n=\ncol[k]\ncol[k]\n\n\n\u8fd9\u6837\u6211\u4eec\u5c11\u7b97\u4e86\u5f88\u591a\u4e1c\u897f\u5462\uff01\n\u81f3\u5c11\u6211\u7684\u4ee3\u7801\u5728BZOJ\u4e0a\u6d4b\u5feb\u4e86\u4e00\u500d\u3002\n\n\n\u8fd8\u6709\uff0c\u7b97\nC(a,2)\nC(a,2)\n\u53ef\u4ee5\u7528\u4f4d\u8fd0\u7b97\uff0c\na/2\na/2\n\u53ef\u4ee5\u5199\u6210\na>>1\na>>1\n\u3002\n\n\n\u7b97\u6cd5\u603b\u590d\u6742\u5ea6\uff1a\nO(n\\sqrt{n} )\nO(n\\sqrt{n} )\n\n\n\u4e0b\u9762\u7684\u4ee3\u7801\u4e2dmot\u8868\u793a\u7b54\u6848\u7684\u5206\u6bcd(mother)\uff0csub\u8868\u793a\u5206\u5b50\uff0csqn\u8868\u793a\u5757\u7684\u5927\u5c0f\uff1a\n\\sqrt{n}\n\\sqrt{n}\n(sqrt(n))\uff0carr\u662f\u8f93\u5165\u7684\u6570\u7ec4\uff0cnode\u662f\u5b58\u50a8\u8be2\u95ee\u7684\u7ed3\u6784\u4f53\uff0ctab\u662f\u8be2\u95ee\u5e8f\u5217\uff08\u6392\u5e8f\u540e\u7684\uff09\uff0ccol\u540c\u4e0a\u6240\u8ff0\u3002\n\n\u6ce8\u610f\uff1a\u4e0b\u9762\u4ee3\u7801\u4e2d\u7684\u79fb\u52a8\u533a\u95f4\u76844\u4e2afor\u5faa\u73af\u7684\u4f4d\u7f6e\u5f88\u5173\u952e\uff0c\u4e0d\u80fd\u6539\u53d8\u5b83\u4eec\u4e4b\u95f4\u7684\u4f4d\u7f6e\u5173\u7cfb\uff0c\u4e0d\u7136\u4f1aWA\uff08\u56e0\u4e3a\u6709\u90a3\u4e2a++l\u548c--r\uff09\u3002\n\n\u4ee3\u7801\uff1a\n\n\n#include \n\n#define bi(a) ((a-1)/sqn+1)\nusing namespace std;\ntypedef long long LL;\ntemplate\nvoid read(tp & dig)\n{\n    char c=getchar();dig=0;\n    while(!isdigit(c))c=getchar();\n    while(isdigit(c))dig=dig*10+c-'0',c=getchar();\n}\nstruct node{LL l,r,i;};\nLL n,m,sqn,arr[50005],l,r,ans,col[50005],sub[50005],mot[50005];\nvector\n tab;\nbool cmp(node a,node b){if(bi(a.l)==bi(b.l))return a.r\n=tab[i].l;l--)ans+=col[arr[l]],col[arr[l]]++;\n        for(;r>tab[i].r;r--)col[arr[r]]--,ans-=col[arr[r]];\n        for(++r;r\n<\n=tab[i].r;r++)ans+=col[arr[r]],col[arr[r]]++;\n        sub[tab[i].i]=ans,l=tab[i].l,r=tab[i].r;\n        mot[tab[i].i]=((r-l)*(r-l+1))>>1;\n    }\n    for(LL i=1,gcdn;i\n<\n=m;i++)\n        gcdn=gcd(sub[i],mot[i]),printf(\"%lld/%lld\\n\",sub[i]/gcdn,mot[i]/gcdn);\n    return 0;\n}\n\n\n\n\n\u5e26\u4fee\u6539\n\u00b6\n\n\n\u8bf7\u786e\u4fdd\u60a8\u5df2\u7ecf\u4f1a\u666e\u901a\u83ab\u961f\u7b97\u6cd5\u4e86\u3002\n\u5982\u679c\u60a8\u8fd8\u4e0d\u4f1a\uff0c\u8bf7\u5148\u9605\u8bfb\u4e0a\u9762\u7684\u201c\u666e\u901a\u83ab\u961f\u7b97\u6cd5\u201d\n\n\n\u7279\u70b9\n\u00b6\n\n\n\n\n\u7528\u4e8e\u79bb\u7ebf\u5904\u7406\u533a\u95f4\u95ee\u9898\n\n\n\u4ec5\u542b\u5355\u70b9\u4fee\u6539\n\n\n\u80fd\nO(1)\nO(1)\n\u8f6c\u79fb\u533a\u95f4\uff08\u548c\u666e\u901a\u83ab\u961f\u4e00\u6837\uff09\n\n\n\u5206\u5757\u7684\u6bcf\u4e00\u5757\u7684\u5927\u5c0f\u662f\nn^\\frac{2}{3}\nn^\\frac{2}{3}\n\n\n\u590d\u6742\u5ea6\nO(n^\\frac{5}{3})\nO(n^\\frac{5}{3})\n\n\n\n\n\u5e26\u4fee\u6539\u7684\u83ab\u961f\u7684\u8be2\u95ee\u6392\u5e8f\u65b9\u6cd5\u4e3a\uff1a\n\n\n\n\n\u7b2c\u4e00\u5173\u952e\u5b57\uff1a\u5de6\u7aef\u70b9\u6240\u5728\u5757\u7f16\u53f7\uff0c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\n\u7b2c\u4e8c\u5173\u952e\u5b57\uff1a\u53f3\u7aef\u70b9\u6240\u5728\u5757\u7f16\u53f7\uff0c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\n\u7b2c\u4e09\u5173\u952e\u5b57\uff1a\n\u7ecf\u5386\u7684\u4fee\u6539\u6b21\u6570\n\u3002\u4e5f\u53ef\u4ee5\u8bf4\u662f\u8be2\u95ee\u7684\u5148\u540e\uff0c\u5148\u8be2\u95ee\u7684\u6392\u524d\u9762\u3002\n\n\n\n\n\u5bf9\u4e8e\u524d\u540e\u4e24\u4e2a\u533a\u95f4\u7684\u8f6c\u79fb\uff1a\n\n\n\u8bbe\u5f53\u524d\u8be2\u95ee\u4e3a\na\na\n\uff0c\u4e0b\u4e00\u4e2a\u8be2\u95ee\u4e3a\nb\nb\n\uff0c\u6211\u4eec\u5df2\u77e5\na\na\n\uff0c\u8981\u6c42\nb\nb\n\u3002\n\n\n\u9996\u5148\u6211\u4eec\u50cf\u666e\u901a\u83ab\u961f\u4e00\u6837\u8f6c\u79fb\u5de6\u53f3\u7aef\u70b9\u3002\n\n\n\u8fd9\u65f6\u5019\u6211\u4eec\u53ef\u80fd\u4f1a\u53d1\u73b0\na\na\n\u548c\nb\nb\n\u7684\u7ecf\u5386\u7684\u4fee\u6539\u6b21\u6570\u4e0d\u540c\n\uff01\n\n\n\u600e\u4e48\u529e\u5462\uff1f\n\n\n\u7136\u800c\uff0c\u83ab\u961f\u5c31\u662f\u4e2a\u4f18\u96c5\u7684\u66b4\u529b\u3002\n\n\n\u5047\u5982\na\na\n\u8f83\nb\nb\n\u5c11\u4fee\u6539\u4e86\np\np\n\u6b21\uff0c\u90a3\u6211\u4eec\u5c31\u628a\u8fd9\np\np\n\u6b21\u4fee\u6539\u4e00\u4e2a\u4e00\u4e2a \n\u4ece\u524d\u5f80\u540e\n \u66b4\u529b\u5730\u52a0\u4e0a\u53bb\u3002\u5047\u5982\na\na\n\u8f83\nb\nb\n\u591a\u4fee\u6539\u4e86\nq\nq\n\u6b21\uff0c\u90a3\u6211\u4eec\u5c31\u628a\u8fd9\nq\nq\n\u6b21\u4fee\u6539\n\u4ece\u540e\u5f80\u524d\n\u8fd8\u539f\u6389\u3002\n\n\n\u5177\u4f53\u600e\u4e48\u505a\u5462\uff1f\u6211\u4eec\u6765\u770b\u4e00\u9053\u4f8b\u9898\u3002\n\n\n\u4f8b\u9898\n\u00b6\n\n\n\u6570\u989c\u8272 BZOJ - 2120\n\n\n\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217\uff0cM\u4e2a\u64cd\u4f5c\uff0c\u6709\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n\n\n\n\u4fee\u6539\u5e8f\u5217\u4e0a\u67d0\u4e00\u4f4d\u7684\u6570\u5b57\n\n\n\u8be2\u95ee\u533a\u95f4\n[l,r]\n[l,r]\n\u4e2d\u6570\u5b57\u7684\u79cd\u7c7b\u6570\uff08\u591a\u4e2a\u76f8\u540c\u7684\u6570\u5b57\u53ea\u7b97\u4e00\u4e2a\uff09\n\n\n\n\n\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u4e0d\u5e26\u64cd\u4f5c1\uff08\u4fee\u6539\uff09\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u80fd\u8f7b\u677e\u7528\u666e\u901a\u83ab\u961f\u89e3\u51b3\u3002\n\n\n\u4f46\u662f\u9898\u76ee\u8fd8\u5e26\u5355\u70b9\u4fee\u6539\uff0c\u6240\u4ee5\u7528\n\u5e26\u4fee\u6539\u7684\u83ab\u961f\n\u3002\n\n\n\u5148\u8003\u8651\u666e\u901a\u83ab\u961f\u7684\u505a\u6cd5\uff1a\n\n\n\n\n\u6bcf\u6b21\u6269\u5927\u533a\u95f4\u65f6\uff0c\u6bcf\u52a0\u5165\u4e00\u4e2a\u6570\u5b57\uff0c\u5219\u7edf\u8ba1\u5b83\u5df2\u7ecf\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5982\u679c\u52a0\u5165\u524d\u8fd9\u79cd\u6570\u5b57\u51fa\u73b0\u6b21\u6570\u4e3a0\uff0c\u5219\u8bf4\u660e\u8fd9\u662f\u4e00\u79cd\u65b0\u7684\u6570\u5b57\uff0c\u7b54\u6848+1\u3002\u7136\u540e\u8fd9\u79cd\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570+1\u3002\n\n\n\u6bcf\u6b21\u51cf\u5c0f\u533a\u95f4\u65f6\uff0c\u6bcf\u5220\u9664\u4e00\u4e2a\u6570\u5b57\uff0c\u5219\u7edf\u8ba1\u5b83\u5220\u9664\u540e\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5982\u679c\u5220\u9664\u540e\u8fd9\u79cd\u6570\u5b57\u51fa\u73b0\u6b21\u6570\u4e3a0\uff0c\u5219\u8bf4\u660e\u8fd9\u79cd\u6570\u5b57\u5df2\u7ecf\u4ece\u5f53\u524d\u7684\u533a\u95f4\u5185\u5220\u5149\u4e86\uff0c\u4e5f\u5c31\u662f\u5f53\u524d\u533a\u95f4\u51cf\u5c11\u4e86\u4e00\u79cd\u989c\u8272\uff0c\u7b54\u6848-1\u3002\u7136\u540e\u8fd9\u79cd\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570-1\u3002\n\n\n\n\n\u73b0\u5728\u518d\u6765\u8003\u8651\u4fee\u6539\uff1a\n\n\n\n\n\u5355\u70b9\u4fee\u6539\uff0c\u628a\u67d0\u4e00\u4f4d\u7684\u6570\u5b57\u4fee\u6539\u6389\u3002\u5047\u5982\u6211\u4eec\u662f\u4ece\u4e00\u4e2a\u7ecf\u5386\u4fee\u6539\u6b21\u6570\u4e3a\ni\ni\n\u7684\u8be2\u95ee\u8f6c\u79fb\u5230\u4e00\u4e2a\u7ecf\u5386\u4fee\u6539\u6b21\u6570\u4e3a\nj\nj\n\u7684\u8be2\u95ee\u4e0a\uff0c\u4e14\ni<j\ni<j\n\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u9700\u8981\u628a\u7b2c\ni+1\ni+1\n\u4e2a\u5230\u7b2c\nj\nj\n\u4e2a\u4fee\u6539\u5f3a\u884c\u52a0\u4e0a\u3002\n\n\n\u5047\u5982\nj<i\nj<i\n\u7684\u8bdd\uff0c\u5219\u9700\u8981\u628a\u7b2c\ni\ni\n\u4e2a\u5230\u7b2c\nj+1\nj+1\n\u4e2a\u4fee\u6539\u5f3a\u884c\u8fd8\u539f\u3002\n\n\n\n\n\u600e\u4e48\u5f3a\u884c\u52a0\u4e0a\u4e00\u4e2a\u4fee\u6539\u5462\uff1f\u5047\u8bbe\u4e00\u4e2a\u4fee\u6539\u662f\u4fee\u6539\u7b2c\npos\npos\n\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u989c\u8272\uff0c\u539f\u672c\npos\npos\n\u4e0a\u7684\u989c\u8272\u4e3a\na\na\n\uff0c\u4fee\u6539\u540e\u989c\u8272\u4e3a\nb\nb\n\uff0c\u8fd8\u5047\u8bbe\u5f53\u524d\u83ab\u961f\u7684\u533a\u95f4\u6269\u5c55\u5230\u4e86\n[l,r]\n[l,r]\n\u3002\n\n\n\n\n\u52a0\u4e0a\u8fd9\u4e2a\u4fee\u6539\uff1a\u6211\u4eec\u9996\u5148\u5224\u65ad\npos\npos\n\u662f\u5426\u5728\u533a\u95f4\n[l,r]\n[l,r]\n\u5185\u3002\u5982\u679c\u662f\u7684\u8bdd\uff0c\u6211\u4eec\u7b49\u4e8e\u662f\u4ece\u533a\u95f4\u4e2d\u5220\u6389\u989c\u8272\na\na\n\uff0c\u52a0\u4e0a\u989c\u8272\nb\nb\n\uff0c\u5e76\u4e14\u5f53\u524d\u989c\u8272\u5e8f\u5217\u7684\u7b2c\npos\npos\n\u9879\u7684\u989c\u8272\u6539\u6210\nb\nb\n\u3002\u5982\u679c\u4e0d\u5728\u533a\u95f4\n[l,r]\n[l,r]\n\u5185\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u76f4\u63a5\u4fee\u6539\u5f53\u524d\u989c\u8272\u5e8f\u5217\u7684\u7b2c\npos\npos\n\u9879\u4e3a\nb\nb\n\u3002\n\n\n\u8fd8\u539f\u8fd9\u4e2a\u4fee\u6539\uff1a\u7b49\u4e8e\u52a0\u4e0a\u4e00\u4e2a\u4fee\u6539\u7b2c\npos\npos\n\u9879\u3001\u628a\u989c\u8272\nb\nb\n\u6539\u6210\u989c\u8272\na\na\n\u7684\u4fee\u6539\u3002\n\n\n\n\n\u56e0\u6b64\u8fd9\u9053\u9898\u5c31\u8fd9\u6837\u7528\u5e26\u4fee\u6539\u83ab\u961f\u8f7b\u677e\u89e3\u51b3\u5566\uff01\n\n\n\u8bb0\u5f97\u524d\u9762\u8bf4\u7684\u4e00\u4e9b\u666e\u901a\u83ab\u961f\u4e0e\u5e26\u4fee\u6539\u83ab\u961f\u4e0d\u540c\u7684\u5730\u65b9\u5c31\u884c\u4e86\uff0c\u6bd4\u5982\u5206\u5757\u7684\u6bcf\u4e00\u5757\u7684\u5927\u5c0f\u662f\nn^\\frac{2}{3}\nn^\\frac{2}{3}\n\u3002\u8fd9\u4e2a\u5f88\u91cd\u8981\u3002\u3002\u3002\n\n\n\u4ee3\u7801\uff1a\n\n#include\n \n<bits/stdc++.h>\n\n\n#define SZ (10005)\n\n\nusing\n \nnamespace\n \nstd\n;\n\n\ntemplate\n<\ntypename\n \n_Tp\n>\ninline\n \nvoid\n \nIN\n(\n_Tp\n&\ndig\n)\n\n\n{\n\n    \nchar\n \nc\n;\ndig\n=\n0\n;\n\n    \nwhile\n(\nc\n=\ngetchar\n(),\n!\nisdigit\n(\nc\n));\n\n    \nwhile\n(\nisdigit\n(\nc\n))\ndig\n=\ndig\n*\n10\n+\nc\n-\n'0'\n,\nc\n=\ngetchar\n();\n\n\n}\n\n\nint\n \nn\n,\nm\n,\nsqn\n,\nc\n[\nSZ\n],\nct\n[\nSZ\n],\nc1\n,\nc2\n,\nmem\n[\nSZ\n][\n3\n],\nans\n,\ntot\n[\n1000005\n],\nnal\n[\nSZ\n];\n\n\nstruct\n \nquery\n\n\n{\n\n    \nint\n \nl\n,\nr\n,\ni\n,\nc\n;\n\n    \nbool\n \noperator\n \n<\n \n(\nconst\n \nquery\n \nanother\n)\nconst\n\n    \n{\n\n        \nif\n(\nl\n/\nsqn\n==\nanother\n.\nl\n/\nsqn\n)\n\n        \n{\n\n            \nif\n(\nr\n/\nsqn\n==\nanother\n.\nr\n/\nsqn\n)\nreturn\n \ni\n<\nanother\n.\ni\n;\n\n            \nreturn\n \nr\n<\nanother\n.\nr\n;\n\n        \n}\n\n        \nreturn\n \nl\n<\nanother\n.\nl\n;\n\n    \n}\n\n\n}\nQ\n[\nSZ\n];\n\n\nvoid\n \nadd\n(\nint\n \na\n){\nif\n(\n!\ntot\n[\na\n])\nans\n++\n;\ntot\n[\na\n]\n++\n;}\n\n\nvoid\n \ndel\n(\nint\n \na\n){\ntot\n[\na\n]\n--\n;\nif\n(\n!\ntot\n[\na\n])\nans\n--\n;}\n\n\nchar\n \nopt\n[\n10\n];\n\n\nint\n \nmain\n()\n\n\n{\n\n    \nIN\n(\nn\n),\nIN\n(\nm\n),\nsqn\n=\npow\n(\nn\n,(\ndouble\n)\n2\n/\n(\ndouble\n)\n3\n);\n\n    \nfor\n(\nint\n \ni\n=\n1\n;\ni\n<=\nn\n;\ni\n++\n)\nIN\n(\nc\n[\ni\n]),\nct\n[\ni\n]\n=\nc\n[\ni\n];\n\n    \nfor\n(\nint\n \ni\n=\n1\n,\na\n,\nb\n;\ni\n<=\nm\n;\ni\n++\n)\n\n        \nif\n(\nscanf\n(\n\"%s\"\n,\nopt\n),\nIN\n(\na\n),\nIN\n(\nb\n),\nopt\n[\n0\n]\n==\n'Q'\n)\n\n            \nQ\n[\nc1\n].\nl\n=\na\n,\nQ\n[\nc1\n].\nr\n=\nb\n,\nQ\n[\nc1\n].\ni\n=\nc1\n,\nQ\n[\nc1\n].\nc\n=\nc2\n,\nc1\n++\n;\n\n        \nelse\n \nmem\n[\nc2\n][\n0\n]\n=\na\n,\nmem\n[\nc2\n][\n1\n]\n=\nct\n[\na\n],\nmem\n[\nc2\n][\n2\n]\n=\nct\n[\na\n]\n=\nb\n,\nc2\n++\n;\n\n    \nsort\n(\nQ\n,\nQ\n+\nc1\n),\nadd\n(\nc\n[\n1\n]);\n\n    \nint\n \nl\n=\n1\n,\nr\n=\n1\n,\nlst\n=\n0\n;\n\n    \nfor\n(\nint\n \ni\n=\n0\n;\ni\n<\nc1\n;\ni\n++\n)\n\n    \n{\n\n        \nfor\n(;\nlst\n<\nQ\n[\ni\n].\nc\n;\nlst\n++\n)\n\n        \n{\n\n            \nif\n(\nl\n<=\nmem\n[\nlst\n][\n0\n]\n&&\nmem\n[\nlst\n][\n0\n]\n<=\nr\n)\n\n                \ndel\n(\nmem\n[\nlst\n][\n1\n]),\nadd\n(\nmem\n[\nlst\n][\n2\n]);\n\n            \nc\n[\nmem\n[\nlst\n][\n0\n]]\n=\nmem\n[\nlst\n][\n2\n];\n\n        \n}\n\n        \nfor\n(;\nlst\n>\nQ\n[\ni\n].\nc\n;\nlst\n--\n)\n\n        \n{\n\n            \nif\n(\nl\n<=\nmem\n[\nlst\n-\n1\n][\n0\n]\n&&\nmem\n[\nlst\n-\n1\n][\n0\n]\n<=\nr\n)\n\n                \ndel\n(\nmem\n[\nlst\n-\n1\n][\n2\n]),\nadd\n(\nmem\n[\nlst\n-\n1\n][\n1\n]);\n\n            \nc\n[\nmem\n[\nlst\n-\n1\n][\n0\n]]\n=\nmem\n[\nlst\n-\n1\n][\n1\n];\n\n        \n}\n\n        \nfor\n(\n++\nr\n;\nr\n<=\nQ\n[\ni\n].\nr\n;\nr\n++\n)\nadd\n(\nc\n[\nr\n]);\n\n        \nfor\n(\n--\nr\n;\nr\n>\nQ\n[\ni\n].\nr\n;\nr\n--\n)\ndel\n(\nc\n[\nr\n]);\n\n        \nfor\n(\n--\nl\n;\nl\n>=\nQ\n[\ni\n].\nl\n;\nl\n--\n)\nadd\n(\nc\n[\nl\n]);\n\n        \nfor\n(\n++\nl\n;\nl\n<\nQ\n[\ni\n].\nl\n;\nl\n++\n)\ndel\n(\nc\n[\nl\n]);\n\n        \nnal\n[\nQ\n[\ni\n].\ni\n]\n=\nans\n;\n\n    \n}\n\n    \nfor\n(\nint\n \ni\n=\n0\n;\ni\n<\nc1\n;\ni\n++\n)\nprintf\n(\n\"%d\n\\n\n\"\n,\nnal\n[\ni\n]);\n\n    \nreturn\n \n0\n;\n\n\n}",
            "title": "\u83ab\u961f\u7b97\u6cd5"
        },
        {
            "location": "/misc/mo-algo/#_1",
            "text": "\u8fd9\u91cc\u5185\u5bb9\u6709\u8bf8\u591a\u662f\u501f\u9274\u7f51\u4e0a\u7684\uff08O(\u2229_\u2229)O\u8c22\u8c22\u5566\uff01\uff09\uff0c\u4e3b\u8981\u501f\u9274\u4e86\uff1a https://blog.sengxian.com/algorithms/mo-s-algorithm",
            "title": "\u666e\u901a\u83ab\u961f\u7b97\u6cd5"
        },
        {
            "location": "/misc/mo-algo/#_2",
            "text": "\u83ab\u961f\u7b97\u6cd5\u662f\u7531\u83ab\u6d9b\u63d0\u51fa\u7684\u7b97\u6cd5\uff0c\u53ef\u4ee5\u89e3\u51b3\u4e00\u7c7b\u79bb\u7ebf\u533a\u95f4\u8be2\u95ee\u95ee\u9898\uff0c\u9002\u7528\u6027\u6781\u4e3a\u5e7f\u6cdb\u3002\u540c\u65f6\u5c06\u5176\u52a0\u4ee5\u6269\u5c55\uff0c\u4fbf\u80fd\u8f7b\u677e\u5904\u7406\u6811\u4e0a\u8def\u5f84\u8be2\u95ee\u4ee5\u53ca\u652f\u6301\u4fee\u6539\u64cd\u4f5c\u3002",
            "title": "\u6982\u8ff0"
        },
        {
            "location": "/misc/mo-algo/#_3",
            "text": "\u5bf9\u4e8e\u5e8f\u5217\u4e0a\u7684\u533a\u95f4\u8be2\u95ee\u95ee\u9898\uff0c\u5982\u679c\u4ece [l,r] [l,r] \u7684\u7b54\u6848\u80fd\u591f O(1) O(1) \u6269\u5c55\u5230 [l-1,r],[l+1,r],[l,r+1],[l,r-1] [l-1,r],[l+1,r],[l,r+1],[l,r-1] \uff08\u5373\u4e0e [l,r] [l,r] \u76f8\u90bb\u7684\u533a\u95f4\uff09\u7684\u7b54\u6848\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728 O(n\\sqrt{n}) O(n\\sqrt{n}) \u7684\u590d\u6742\u5ea6\u5185\u6c42\u51fa\u6240\u6709\u8be2\u95ee\u7684\u7b54\u6848\u3002",
            "title": "\u5f62\u5f0f"
        },
        {
            "location": "/misc/mo-algo/#_4",
            "text": "\u79bb\u7ebf\u540e\u6392\u5e8f\uff0c\u987a\u5e8f\u5904\u7406\u6bcf\u4e2a\u8be2\u95ee\uff0c\u66b4\u529b\u4ece\u4e0a\u4e00\u4e2a\u533a\u95f4\u7684\u7b54\u6848\u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2a\u533a\u95f4\u7b54\u6848\uff08\u4e00\u6b65\u4e00\u6b65\u79fb\u52a8\u5373\u53ef\uff09\u3002",
            "title": "\u5b9e\u73b0"
        },
        {
            "location": "/misc/mo-algo/#_5",
            "text": "\u5bf9\u4e8e\u533a\u95f4 [l,r] [l,r] ,\u4ee5l\u6240\u5728\u5757\u7684\u7f16\u53f7\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0cr\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002",
            "title": "\u6392\u5e8f\u65b9\u6cd5"
        },
        {
            "location": "/misc/mo-algo/#_6",
            "text": "int l = 0, r = 0, nowAns = 0;\n\ninline void move(int pos, int sign) {\n    // update nowAns\n}\n\nvoid solve() {\n    BLOCK_SIZE = int(ceil(pow(n, 0.5)));\n      sort(querys, querys + m);\n    for (int i = 0; i  <  m; ++i) {\n        const query &q = querys[i];\n        while (l > q.l) move(--l, 1);\n        while (r  <  q.r) move(r++, 1);\n        while (l  <  q.l) move(l++, -1);\n        while (r > q.r) move(--r, -1);\n        ans[q.id] = nowAns;\n    }\n}",
            "title": "\u6a21\u677f"
        },
        {
            "location": "/misc/mo-algo/#_7",
            "text": "\u9996\u5148\u662f\u5206\u5757\u8fd9\u4e00\u6b65\uff0c\u8fd9\u4e00\u6b65\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6beb\u65e0\u7591\u95ee\u5730\u662f  O(\\sqrt{n}\\sqrt{n}log\\sqrt{n}+nlogn)=O(nlogn) O(\\sqrt{n}\\sqrt{n}log\\sqrt{n}+nlogn)=O(nlogn) ;  \u63a5\u7740\u5c31\u5230\u4e86\u83ab\u961f\u7b97\u6cd5\u7684\u7cbe\u9ad3\u4e86\uff0c\u4e0b\u9762\u6211\u4eec\u7528\u901a\u4fd7\u6613\u61c2\u7684\u521d\u4e2d\u65b9\u6cd5\u6765\u8bc1\u660e\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n\\sqrt{n}) O(n\\sqrt{n}) \uff1b  \u8bc1\uff1a\u4ee4\u6bcf\u4e00\u5757\u4e2dL\u7684\u6700\u5927\u503c\u4e3a  max1,max2,max3,...,maxceil(\\sqrt{n}) max1,max2,max3,...,maxceil(\\sqrt{n}) \u3002  \u7531\u7b2c\u4e00\u6b21\u6392\u5e8f\u53ef\u77e5\uff0c max1<=max2<=...<=maxceil(\\sqrt{n}) max1<=max2<=...<=maxceil(\\sqrt{n}) \u3002  \u663e\u7136\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5757\u66b4\u529b\u6c42\u51fa\u7b2c\u4e00\u4e2a\u8be2\u95ee\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a  O(n) O(n) \u3002  \u8003\u8651\u6700\u574f\u7684\u60c5\u51b5\uff0c\u5728\u6bcf\u4e00\u5757\u4e2d\uff0cR \u7684\u6700\u5927\u503c\u5747\u4e3a n\uff0c\u6bcf\u6b21\u4fee\u6539\u64cd\u4f5c\u5747\u8981\u5c06 L \u7531  max_{i - 1} max_{i - 1}  \u4fee\u6539\u81f3  max_i max_i  \u6216\u7531  max_i max_i  \u4fee\u6539\u81f3  max_{i - 1} max_{i - 1} \u3002  \u8003\u8651 R\uff1a\u56e0\u4e3a R \u5728\u5757\u4e2d\u5df2\u7ecf\u6392\u597d\u5e8f\uff0c\u6240\u4ee5\u5728\u540c\u4e00\u5757\u4fee\u6539\u5b8c\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a  O(n) O(n) \u3002\u5bf9\u4e8e\u6240\u6709\u5757\u5c31\u662f  O(n\\sqrt{n}) O(n\\sqrt{n}) \u3002  \u91cd\u70b9\u5206\u6790 L\uff1a\u56e0\u4e3a\u6bcf\u4e00\u6b21\u6539\u53d8\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f  O(maxi-maxi-1) O(maxi-maxi-1)  \u7684\uff0c\u6240\u4ee5\u5728\u540c\u4e00\u5757\u4e2d\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a  O(\\sqrt{n}*(max_i-max_{i-1})) O(\\sqrt{n}*(max_i-max_{i-1})) \u3002  \u5c06\u6bcf\u4e00\u5757L\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5408\u5728\u4e00\u8d77\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a   \n\\begin{aligned}\n\u5bf9\u4e8e L \u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a & = O(\\sqrt{n}(max1-1)+\\sqrt{n}(max2-max1)+\\sqrt{n}(max3-max2)+...+\\sqrt{n}(maxceil(\\sqrt{n})-maxceil(\\sqrt{n}-1))) \\\\\\\\\n& = O(\\sqrt{n}*(max1-1+max2-max1+max3-max2+...+maxceil(\\sqrt{n}-1)-maxceil(\\sqrt{n}-2)+maxceil(\\sqrt{n})-maxceil(\\sqrt{n}-1))) \\\\\\\\\n& = O(\\sqrt{n}*(maxceil(\\sqrt{n})-1))\n\\end{aligned}  \n\\begin{aligned}\n\u5bf9\u4e8e L \u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a & = O(\\sqrt{n}(max1-1)+\\sqrt{n}(max2-max1)+\\sqrt{n}(max3-max2)+...+\\sqrt{n}(maxceil(\\sqrt{n})-maxceil(\\sqrt{n}-1))) \\\\\\\\\n& = O(\\sqrt{n}*(max1-1+max2-max1+max3-max2+...+maxceil(\\sqrt{n}-1)-maxceil(\\sqrt{n}-2)+maxceil(\\sqrt{n})-maxceil(\\sqrt{n}-1))) \\\\\\\\\n& = O(\\sqrt{n}*(maxceil(\\sqrt{n})-1))\n\\end{aligned}   (\u88c2\u9879\u6c42\u548c)  \u7531\u9898\u53ef\u77e5  maxceil(\\sqrt{n}) maxceil(\\sqrt{n})  \u6700\u5927\u4e3a n\uff0c\u6240\u4ee5 L \u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u574f\u60c5\u51b5\u4e0b\u4e3a  O(n\\sqrt{n}) O(n\\sqrt{n}) \u3002  \u7efc\u4e0a\u6240\u8ff0\uff0c\u83ab\u961f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a  O(n\\sqrt{n}) O(n\\sqrt{n}) \uff1b",
            "title": "\u590d\u6742\u5ea6\u5206\u6790"
        },
        {
            "location": "/misc/mo-algo/#_8",
            "text": "\u5c0fZ\u7684\u889c\u5b50  \u601d\u8def\uff1a\u83ab\u961f\u7b97\u6cd5\u6a21\u677f\u9898\u3002\n\u5bf9\u4e8e\u533a\u95f4 [l,r] [l,r] ,\u4ee5l\u6240\u5728\u5757\u7684\u7f16\u53f7\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0cr\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\u7136\u540e\u4ece\u5e8f\u5217\u7684\u7b2c\u4e00\u4e2a\u8be2\u95ee\u5f00\u59cb\u8ba1\u7b97\u7b54\u6848\uff0c\u7b2c\u4e00\u4e2a\u8be2\u95ee\u901a\u8fc7\u76f4\u63a5\u66b4\u529b\u7b97\u51fa\uff0c\u590d\u6742\u5ea6\u4e3a O(n) O(n) \uff0c\u540e\u9762\u7684\u8be2\u95ee\u5728\u524d\u4e00\u4e2a\u8be2\u95ee\u7684\u57fa\u7840\u4e0a\u5f97\u5230\u7b54\u6848\u3002  \u5177\u4f53\u505a\u6cd5\uff1a\n\u5bf9\u4e8e\u533a\u95f4 [i,i] [i,i] \uff0c\u7531\u4e8e\u533a\u95f4\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u80fd\u77e5\u9053\u7b54\u6848\u3002\n\u7136\u540e\u4e00\u6b65\u4e00\u6b65\u4ece\u5f53\u524d\u533a\u95f4\uff08\u5df2\u77e5\u7b54\u6848\uff09\u5411\u4e0b\u4e00\u4e2a\u533a\u95f4\u9760\u8fd1\u3002  \u6211\u4eec\u8bbe col[i] col[i] \u8868\u793a\u5f53\u524d\u989c\u8272i\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff0c ans ans \u5f53\u524d\u5171\u6709\u591a\u5c11\u79cd\u53ef\u884c\u7684\u914d\u5bf9\u65b9\u6848\uff08\u6709\u591a\u5c11\u79cd\u53ef\u4ee5\u9009\u5230\u4e00\u53cc\u989c\u8272\u76f8\u540c\u7684\u889c\u5b50\uff09\uff0c\u8868\u793a\u7136\u540e\u6bcf\u6b21\u79fb\u52a8\u7684\u65f6\u5019\u66f4\u65b0\u7b54\u6848\u2014\u2014\u8bbe\u5f53\u524d\u989c\u8272\u4e3ak\uff0c\u5982\u679c\u662f\u589e\u957f\u533a\u95f4\u5c31\u662f ans ans \u52a0\u4e0a C(col[k]+1,2)-C(col[k],2) C(col[k]+1,2)-C(col[k],2) \uff0c\u5982\u679c\u662f\u7f29\u77ed\u5c31\u662f ans ans \u51cf\u53bb C(col[k],2)-C(col[k]-1,2) C(col[k],2)-C(col[k]-1,2) \u3002\u8fd9\u5e94\u8be5\u5f88\u597d\u7406\u89e3\u3002\n\u800c\u8fd9\u4e2a\u8be2\u95ee\u7684\u7b54\u6848\u5c31\u662f ans/C(r-l+1,2) ans/C(r-l+1,2)  \u8fd9\u91cc\u6709\u4e2a\u4f18\u5316\uff1a C(a,2) C(a,2) = a\\times (a-1)/2 a\\times (a-1)/2 \n\u6240\u4ee5 C(a+1,2)-C(a,2) C(a+1,2)-C(a,2) = (a+1)\\times a/2-a\\times (a-1)/2 (a+1)\\times a/2-a\\times (a-1)/2 = a/2\\times (a+1-a+1) a/2\\times (a+1-a+1) = a/2\\times 2 a/2\\times 2 = a a \n\u6240\u4ee5 C(col[k]+1,2)-C(col[k],2) C(col[k]+1,2)-C(col[k],2) = col[k] col[k]  \u8fd9\u6837\u6211\u4eec\u5c11\u7b97\u4e86\u5f88\u591a\u4e1c\u897f\u5462\uff01\n\u81f3\u5c11\u6211\u7684\u4ee3\u7801\u5728BZOJ\u4e0a\u6d4b\u5feb\u4e86\u4e00\u500d\u3002  \u8fd8\u6709\uff0c\u7b97 C(a,2) C(a,2) \u53ef\u4ee5\u7528\u4f4d\u8fd0\u7b97\uff0c a/2 a/2 \u53ef\u4ee5\u5199\u6210 a>>1 a>>1 \u3002  \u7b97\u6cd5\u603b\u590d\u6742\u5ea6\uff1a O(n\\sqrt{n} ) O(n\\sqrt{n} )  \u4e0b\u9762\u7684\u4ee3\u7801\u4e2dmot\u8868\u793a\u7b54\u6848\u7684\u5206\u6bcd(mother)\uff0csub\u8868\u793a\u5206\u5b50\uff0csqn\u8868\u793a\u5757\u7684\u5927\u5c0f\uff1a \\sqrt{n} \\sqrt{n} (sqrt(n))\uff0carr\u662f\u8f93\u5165\u7684\u6570\u7ec4\uff0cnode\u662f\u5b58\u50a8\u8be2\u95ee\u7684\u7ed3\u6784\u4f53\uff0ctab\u662f\u8be2\u95ee\u5e8f\u5217\uff08\u6392\u5e8f\u540e\u7684\uff09\uff0ccol\u540c\u4e0a\u6240\u8ff0\u3002 \u6ce8\u610f\uff1a\u4e0b\u9762\u4ee3\u7801\u4e2d\u7684\u79fb\u52a8\u533a\u95f4\u76844\u4e2afor\u5faa\u73af\u7684\u4f4d\u7f6e\u5f88\u5173\u952e\uff0c\u4e0d\u80fd\u6539\u53d8\u5b83\u4eec\u4e4b\u95f4\u7684\u4f4d\u7f6e\u5173\u7cfb\uff0c\u4e0d\u7136\u4f1aWA\uff08\u56e0\u4e3a\u6709\u90a3\u4e2a++l\u548c--r\uff09\u3002 \n\u4ee3\u7801\uff1a  #include  \n#define bi(a) ((a-1)/sqn+1)\nusing namespace std;\ntypedef long long LL;\ntemplate void read(tp & dig)\n{\n    char c=getchar();dig=0;\n    while(!isdigit(c))c=getchar();\n    while(isdigit(c))dig=dig*10+c-'0',c=getchar();\n}\nstruct node{LL l,r,i;};\nLL n,m,sqn,arr[50005],l,r,ans,col[50005],sub[50005],mot[50005];\nvector  tab;\nbool cmp(node a,node b){if(bi(a.l)==bi(b.l))return a.r =tab[i].l;l--)ans+=col[arr[l]],col[arr[l]]++;\n        for(;r>tab[i].r;r--)col[arr[r]]--,ans-=col[arr[r]];\n        for(++r;r < =tab[i].r;r++)ans+=col[arr[r]],col[arr[r]]++;\n        sub[tab[i].i]=ans,l=tab[i].l,r=tab[i].r;\n        mot[tab[i].i]=((r-l)*(r-l+1))>>1;\n    }\n    for(LL i=1,gcdn;i < =m;i++)\n        gcdn=gcd(sub[i],mot[i]),printf(\"%lld/%lld\\n\",sub[i]/gcdn,mot[i]/gcdn);\n    return 0;\n}",
            "title": "\u4f8b\u9898&amp;\u4ee3\u7801"
        },
        {
            "location": "/misc/mo-algo/#_9",
            "text": "\u8bf7\u786e\u4fdd\u60a8\u5df2\u7ecf\u4f1a\u666e\u901a\u83ab\u961f\u7b97\u6cd5\u4e86\u3002\n\u5982\u679c\u60a8\u8fd8\u4e0d\u4f1a\uff0c\u8bf7\u5148\u9605\u8bfb\u4e0a\u9762\u7684\u201c\u666e\u901a\u83ab\u961f\u7b97\u6cd5\u201d",
            "title": "\u5e26\u4fee\u6539"
        },
        {
            "location": "/misc/mo-algo/#_10",
            "text": "\u7528\u4e8e\u79bb\u7ebf\u5904\u7406\u533a\u95f4\u95ee\u9898  \u4ec5\u542b\u5355\u70b9\u4fee\u6539  \u80fd O(1) O(1) \u8f6c\u79fb\u533a\u95f4\uff08\u548c\u666e\u901a\u83ab\u961f\u4e00\u6837\uff09  \u5206\u5757\u7684\u6bcf\u4e00\u5757\u7684\u5927\u5c0f\u662f n^\\frac{2}{3} n^\\frac{2}{3}  \u590d\u6742\u5ea6 O(n^\\frac{5}{3}) O(n^\\frac{5}{3})   \u5e26\u4fee\u6539\u7684\u83ab\u961f\u7684\u8be2\u95ee\u6392\u5e8f\u65b9\u6cd5\u4e3a\uff1a   \u7b2c\u4e00\u5173\u952e\u5b57\uff1a\u5de6\u7aef\u70b9\u6240\u5728\u5757\u7f16\u53f7\uff0c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002  \u7b2c\u4e8c\u5173\u952e\u5b57\uff1a\u53f3\u7aef\u70b9\u6240\u5728\u5757\u7f16\u53f7\uff0c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002  \u7b2c\u4e09\u5173\u952e\u5b57\uff1a \u7ecf\u5386\u7684\u4fee\u6539\u6b21\u6570 \u3002\u4e5f\u53ef\u4ee5\u8bf4\u662f\u8be2\u95ee\u7684\u5148\u540e\uff0c\u5148\u8be2\u95ee\u7684\u6392\u524d\u9762\u3002   \u5bf9\u4e8e\u524d\u540e\u4e24\u4e2a\u533a\u95f4\u7684\u8f6c\u79fb\uff1a  \u8bbe\u5f53\u524d\u8be2\u95ee\u4e3a a a \uff0c\u4e0b\u4e00\u4e2a\u8be2\u95ee\u4e3a b b \uff0c\u6211\u4eec\u5df2\u77e5 a a \uff0c\u8981\u6c42 b b \u3002  \u9996\u5148\u6211\u4eec\u50cf\u666e\u901a\u83ab\u961f\u4e00\u6837\u8f6c\u79fb\u5de6\u53f3\u7aef\u70b9\u3002  \u8fd9\u65f6\u5019\u6211\u4eec\u53ef\u80fd\u4f1a\u53d1\u73b0 a a \u548c b b \u7684\u7ecf\u5386\u7684\u4fee\u6539\u6b21\u6570\u4e0d\u540c \uff01  \u600e\u4e48\u529e\u5462\uff1f  \u7136\u800c\uff0c\u83ab\u961f\u5c31\u662f\u4e2a\u4f18\u96c5\u7684\u66b4\u529b\u3002  \u5047\u5982 a a \u8f83 b b \u5c11\u4fee\u6539\u4e86 p p \u6b21\uff0c\u90a3\u6211\u4eec\u5c31\u628a\u8fd9 p p \u6b21\u4fee\u6539\u4e00\u4e2a\u4e00\u4e2a  \u4ece\u524d\u5f80\u540e  \u66b4\u529b\u5730\u52a0\u4e0a\u53bb\u3002\u5047\u5982 a a \u8f83 b b \u591a\u4fee\u6539\u4e86 q q \u6b21\uff0c\u90a3\u6211\u4eec\u5c31\u628a\u8fd9 q q \u6b21\u4fee\u6539 \u4ece\u540e\u5f80\u524d \u8fd8\u539f\u6389\u3002  \u5177\u4f53\u600e\u4e48\u505a\u5462\uff1f\u6211\u4eec\u6765\u770b\u4e00\u9053\u4f8b\u9898\u3002",
            "title": "\u7279\u70b9"
        },
        {
            "location": "/misc/mo-algo/#_11",
            "text": "\u6570\u989c\u8272 BZOJ - 2120  \u9898\u76ee\u5927\u610f\uff1a\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217\uff0cM\u4e2a\u64cd\u4f5c\uff0c\u6709\u4e24\u79cd\u64cd\u4f5c\uff1a   \u4fee\u6539\u5e8f\u5217\u4e0a\u67d0\u4e00\u4f4d\u7684\u6570\u5b57  \u8be2\u95ee\u533a\u95f4 [l,r] [l,r] \u4e2d\u6570\u5b57\u7684\u79cd\u7c7b\u6570\uff08\u591a\u4e2a\u76f8\u540c\u7684\u6570\u5b57\u53ea\u7b97\u4e00\u4e2a\uff09   \u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u4e0d\u5e26\u64cd\u4f5c1\uff08\u4fee\u6539\uff09\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u80fd\u8f7b\u677e\u7528\u666e\u901a\u83ab\u961f\u89e3\u51b3\u3002  \u4f46\u662f\u9898\u76ee\u8fd8\u5e26\u5355\u70b9\u4fee\u6539\uff0c\u6240\u4ee5\u7528 \u5e26\u4fee\u6539\u7684\u83ab\u961f \u3002  \u5148\u8003\u8651\u666e\u901a\u83ab\u961f\u7684\u505a\u6cd5\uff1a   \u6bcf\u6b21\u6269\u5927\u533a\u95f4\u65f6\uff0c\u6bcf\u52a0\u5165\u4e00\u4e2a\u6570\u5b57\uff0c\u5219\u7edf\u8ba1\u5b83\u5df2\u7ecf\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5982\u679c\u52a0\u5165\u524d\u8fd9\u79cd\u6570\u5b57\u51fa\u73b0\u6b21\u6570\u4e3a0\uff0c\u5219\u8bf4\u660e\u8fd9\u662f\u4e00\u79cd\u65b0\u7684\u6570\u5b57\uff0c\u7b54\u6848+1\u3002\u7136\u540e\u8fd9\u79cd\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570+1\u3002  \u6bcf\u6b21\u51cf\u5c0f\u533a\u95f4\u65f6\uff0c\u6bcf\u5220\u9664\u4e00\u4e2a\u6570\u5b57\uff0c\u5219\u7edf\u8ba1\u5b83\u5220\u9664\u540e\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5982\u679c\u5220\u9664\u540e\u8fd9\u79cd\u6570\u5b57\u51fa\u73b0\u6b21\u6570\u4e3a0\uff0c\u5219\u8bf4\u660e\u8fd9\u79cd\u6570\u5b57\u5df2\u7ecf\u4ece\u5f53\u524d\u7684\u533a\u95f4\u5185\u5220\u5149\u4e86\uff0c\u4e5f\u5c31\u662f\u5f53\u524d\u533a\u95f4\u51cf\u5c11\u4e86\u4e00\u79cd\u989c\u8272\uff0c\u7b54\u6848-1\u3002\u7136\u540e\u8fd9\u79cd\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570-1\u3002   \u73b0\u5728\u518d\u6765\u8003\u8651\u4fee\u6539\uff1a   \u5355\u70b9\u4fee\u6539\uff0c\u628a\u67d0\u4e00\u4f4d\u7684\u6570\u5b57\u4fee\u6539\u6389\u3002\u5047\u5982\u6211\u4eec\u662f\u4ece\u4e00\u4e2a\u7ecf\u5386\u4fee\u6539\u6b21\u6570\u4e3a i i \u7684\u8be2\u95ee\u8f6c\u79fb\u5230\u4e00\u4e2a\u7ecf\u5386\u4fee\u6539\u6b21\u6570\u4e3a j j \u7684\u8be2\u95ee\u4e0a\uff0c\u4e14 i<j i<j \u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u9700\u8981\u628a\u7b2c i+1 i+1 \u4e2a\u5230\u7b2c j j \u4e2a\u4fee\u6539\u5f3a\u884c\u52a0\u4e0a\u3002  \u5047\u5982 j<i j<i \u7684\u8bdd\uff0c\u5219\u9700\u8981\u628a\u7b2c i i \u4e2a\u5230\u7b2c j+1 j+1 \u4e2a\u4fee\u6539\u5f3a\u884c\u8fd8\u539f\u3002   \u600e\u4e48\u5f3a\u884c\u52a0\u4e0a\u4e00\u4e2a\u4fee\u6539\u5462\uff1f\u5047\u8bbe\u4e00\u4e2a\u4fee\u6539\u662f\u4fee\u6539\u7b2c pos pos \u4e2a\u4f4d\u7f6e\u4e0a\u7684\u989c\u8272\uff0c\u539f\u672c pos pos \u4e0a\u7684\u989c\u8272\u4e3a a a \uff0c\u4fee\u6539\u540e\u989c\u8272\u4e3a b b \uff0c\u8fd8\u5047\u8bbe\u5f53\u524d\u83ab\u961f\u7684\u533a\u95f4\u6269\u5c55\u5230\u4e86 [l,r] [l,r] \u3002   \u52a0\u4e0a\u8fd9\u4e2a\u4fee\u6539\uff1a\u6211\u4eec\u9996\u5148\u5224\u65ad pos pos \u662f\u5426\u5728\u533a\u95f4 [l,r] [l,r] \u5185\u3002\u5982\u679c\u662f\u7684\u8bdd\uff0c\u6211\u4eec\u7b49\u4e8e\u662f\u4ece\u533a\u95f4\u4e2d\u5220\u6389\u989c\u8272 a a \uff0c\u52a0\u4e0a\u989c\u8272 b b \uff0c\u5e76\u4e14\u5f53\u524d\u989c\u8272\u5e8f\u5217\u7684\u7b2c pos pos \u9879\u7684\u989c\u8272\u6539\u6210 b b \u3002\u5982\u679c\u4e0d\u5728\u533a\u95f4 [l,r] [l,r] \u5185\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u76f4\u63a5\u4fee\u6539\u5f53\u524d\u989c\u8272\u5e8f\u5217\u7684\u7b2c pos pos \u9879\u4e3a b b \u3002  \u8fd8\u539f\u8fd9\u4e2a\u4fee\u6539\uff1a\u7b49\u4e8e\u52a0\u4e0a\u4e00\u4e2a\u4fee\u6539\u7b2c pos pos \u9879\u3001\u628a\u989c\u8272 b b \u6539\u6210\u989c\u8272 a a \u7684\u4fee\u6539\u3002   \u56e0\u6b64\u8fd9\u9053\u9898\u5c31\u8fd9\u6837\u7528\u5e26\u4fee\u6539\u83ab\u961f\u8f7b\u677e\u89e3\u51b3\u5566\uff01  \u8bb0\u5f97\u524d\u9762\u8bf4\u7684\u4e00\u4e9b\u666e\u901a\u83ab\u961f\u4e0e\u5e26\u4fee\u6539\u83ab\u961f\u4e0d\u540c\u7684\u5730\u65b9\u5c31\u884c\u4e86\uff0c\u6bd4\u5982\u5206\u5757\u7684\u6bcf\u4e00\u5757\u7684\u5927\u5c0f\u662f n^\\frac{2}{3} n^\\frac{2}{3} \u3002\u8fd9\u4e2a\u5f88\u91cd\u8981\u3002\u3002\u3002  \u4ee3\u7801\uff1a #include   <bits/stdc++.h>  #define SZ (10005)  using   namespace   std ;  template < typename   _Tp > inline   void   IN ( _Tp & dig )  { \n     char   c ; dig = 0 ; \n     while ( c = getchar (), ! isdigit ( c )); \n     while ( isdigit ( c )) dig = dig * 10 + c - '0' , c = getchar ();  }  int   n , m , sqn , c [ SZ ], ct [ SZ ], c1 , c2 , mem [ SZ ][ 3 ], ans , tot [ 1000005 ], nal [ SZ ];  struct   query  { \n     int   l , r , i , c ; \n     bool   operator   <   ( const   query   another ) const \n     { \n         if ( l / sqn == another . l / sqn ) \n         { \n             if ( r / sqn == another . r / sqn ) return   i < another . i ; \n             return   r < another . r ; \n         } \n         return   l < another . l ; \n     }  } Q [ SZ ];  void   add ( int   a ){ if ( ! tot [ a ]) ans ++ ; tot [ a ] ++ ;}  void   del ( int   a ){ tot [ a ] -- ; if ( ! tot [ a ]) ans -- ;}  char   opt [ 10 ];  int   main ()  { \n     IN ( n ), IN ( m ), sqn = pow ( n ,( double ) 2 / ( double ) 3 ); \n     for ( int   i = 1 ; i <= n ; i ++ ) IN ( c [ i ]), ct [ i ] = c [ i ]; \n     for ( int   i = 1 , a , b ; i <= m ; i ++ ) \n         if ( scanf ( \"%s\" , opt ), IN ( a ), IN ( b ), opt [ 0 ] == 'Q' ) \n             Q [ c1 ]. l = a , Q [ c1 ]. r = b , Q [ c1 ]. i = c1 , Q [ c1 ]. c = c2 , c1 ++ ; \n         else   mem [ c2 ][ 0 ] = a , mem [ c2 ][ 1 ] = ct [ a ], mem [ c2 ][ 2 ] = ct [ a ] = b , c2 ++ ; \n     sort ( Q , Q + c1 ), add ( c [ 1 ]); \n     int   l = 1 , r = 1 , lst = 0 ; \n     for ( int   i = 0 ; i < c1 ; i ++ ) \n     { \n         for (; lst < Q [ i ]. c ; lst ++ ) \n         { \n             if ( l <= mem [ lst ][ 0 ] && mem [ lst ][ 0 ] <= r ) \n                 del ( mem [ lst ][ 1 ]), add ( mem [ lst ][ 2 ]); \n             c [ mem [ lst ][ 0 ]] = mem [ lst ][ 2 ]; \n         } \n         for (; lst > Q [ i ]. c ; lst -- ) \n         { \n             if ( l <= mem [ lst - 1 ][ 0 ] && mem [ lst - 1 ][ 0 ] <= r ) \n                 del ( mem [ lst - 1 ][ 2 ]), add ( mem [ lst - 1 ][ 1 ]); \n             c [ mem [ lst - 1 ][ 0 ]] = mem [ lst - 1 ][ 1 ]; \n         } \n         for ( ++ r ; r <= Q [ i ]. r ; r ++ ) add ( c [ r ]); \n         for ( -- r ; r > Q [ i ]. r ; r -- ) del ( c [ r ]); \n         for ( -- l ; l >= Q [ i ]. l ; l -- ) add ( c [ l ]); \n         for ( ++ l ; l < Q [ i ]. l ; l ++ ) del ( c [ l ]); \n         nal [ Q [ i ]. i ] = ans ; \n     } \n     for ( int   i = 0 ; i < c1 ; i ++ ) printf ( \"%d \\n \" , nal [ i ]); \n     return   0 ;  }",
            "title": "\u4f8b\u9898"
        },
        {
            "location": "/misc/hill-climbing/",
            "text": "",
            "title": "\u722c\u5c71\u7b97\u6cd5"
        },
        {
            "location": "/misc/fractional-programming/",
            "text": "",
            "title": "\u5206\u6570\u89c4\u5212"
        },
        {
            "location": "/misc/simulated-annealing/",
            "text": "",
            "title": "\u6a21\u62df\u9000\u706b"
        },
        {
            "location": "/misc/zhu-liu-algorithm/",
            "text": "",
            "title": "\u6731\u5218\u7b97\u6cd5"
        },
        {
            "location": "/misc/random-incremental/",
            "text": "",
            "title": "\u968f\u673a\u589e\u91cf\u6cd5"
        },
        {
            "location": "/misc/random/",
            "text": "",
            "title": "\u968f\u673a\u5316"
        },
        {
            "location": "/misc/offline/",
            "text": "",
            "title": "\u79bb\u7ebf\u5904\u7406"
        },
        {
            "location": "/misc/distance/",
            "text": "",
            "title": "\u5404\u79cd\u8ddd\u79bb"
        },
        {
            "location": "/misc/endianness/",
            "text": "\u5b57\u8282\u987a\u5e8f\u662f\u8de8\u8d8a\u591a\u5b57\u8282\u7684\u7a0b\u5e8f\u5bf9\u8c61\u7684\u5b58\u50a8\u89c4\u5219\uff0c\u8868\u793a\u4e00\u4e2a\u5bf9\u8c61\u7684\u5b57\u8282\u7684\u6392\u5217\u65b9\u6cd5\u3002\n\n\n\u5b57\u8282\u987a\u5e8f\u6709\u4e24\u79cd\uff0c\u5206\u4e3a\u5c0f\u7aef\u5e8f\uff08small endian\uff09\u548c\u5927\u7aef\u5e8f\uff08big endian\uff09\u3002\n\n\n\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e24\u79cd\u5b57\u8282\u987a\u5e8f\u6ca1\u6709\u5b70\u4f18\u5b70\u52a3\u4e4b\u5206\u3002\u8fd9\u4e24\u79cd\u987a\u5e8f\u7684\u540d\u5b57\uff08\n\u5c0f\u7aef\n \u548c \n\u5927\u7aef\n\uff09\uff0c\u6b63\u662f\u51fa\u81ea \u300a\u683c\u5217\u4f5b\u6e38\u8bb0\u300b\u4e00\u4e66\uff0c\u4e66\u4e2d\u7684\u4e24\u4e2a\u6d3e\u522b\u4ea4\u6218\u7684\u539f\u56e0\u662f\u65e0\u6cd5\u5c31\u4ece\u54ea\u4e00\u7aef\u6253\u5f00\u9e21\u86cb\u8fbe\u6210\u4e00\u81f4\u3002\u5c31\u548c\u9e21\u86cb\u7684\u95ee\u9898\u4e00\u6837\uff0c\u9009\u62e9\u4f55\u79cd\u5b57\u8282\u987a\u5e8f\u6210\u4e86\u6ca1\u6709\u6280\u672f\u4e0a\u7406\u7531\u7684\u4e89\u8bba\u3002\n\n\n\u5f53\u7136\uff0c\u5b57\u8282\u987a\u5e8f\u7684\u4e0d\u4e00\u81f4\u4f1a\u5bfc\u81f4\u4e8c\u8fdb\u5236\u6570\u636e\u5728\u4e0d\u540c\u7c7b\u578b\u7684\u673a\u5668\u4e4b\u95f4\u8fdb\u884c\u4f20\u8f93\u65f6\u88ab\u53cd\u5e8f\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u4ef6\u4e8b\u60c5\uff0c\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u5efa\u7acb\u4e86\u4e00\u5957\u6807\u51c6\uff0c\u4fdd\u8bc1\u53d1\u9001\u8fc7\u7a0b\u4e2d\u662f\u4f7f\u7528\u7ea6\u5b9a\u597d\u7684\u7f51\u7edc\u6807\u51c6\uff0c\u800c\u4e0d\u662f\u4e0d\u540c\u673a\u5668\u7684\u5185\u90e8\u8868\u793a\u3002\n\n\n\u4e0b\u9762\uff0c\u6211\u4eec\u4ee5\u4e00\u4e2a\u4f4d\u4e8e \n0x100\n \u5904\uff0c\u7c7b\u578b\u4e3a \nint\n\uff0c\u5341\u516d\u8fdb\u5236\u503c\u4e3a \n0x01234567\n \u7684\u53d8\u91cf\u4e3a\u4f8b\u4ecb\u7ecd\u4e24\u79cd\u5b57\u8282\u987a\u5e8f\uff1a\n\n\n\uff08\u8fd9\u91cc \n0x01\n \u662f\u6700\u9ad8\u4f4d\u6709\u6548\u5b57\u8282\uff0c\n0x67\n \u662f\u6700\u4f4e\u4f4d\u6709\u6548\u5b57\u8282\uff09\n\n\n\u5c0f\u7aef\u5e8f\n\u00b6\n\n\n\u5c0f\u7aef\u5e8f\u662f\u6307\u673a\u5668\u9009\u62e9\u5728\u5185\u5b58\u4e2d\u6309\u7167\u4ece \n\u6700\u4f4e\n \u6709\u6548\u5b57\u8282\u5230 \n\u6700\u9ad8\n \u6709\u6548\u5b57\u8282\u7684\u987a\u5e8f\u5b58\u50a8\u5bf9\u8c61\u3002\n\n\n\u4e0a\u6587\u63d0\u5230\u7684\u53d8\u91cf\u5c31\u8868\u793a\u5982\u4e0b\uff1a\n\n\n\n\n\n\n\n\n....\n\n\n0x100\n\n\n0x101\n\n\n0x102\n\n\n0x103\n\n\n....\n\n\n\n\n\n\n\n\n\n\n....\n\n\n67\n\n\n45\n\n\n23\n\n\n01\n\n\n....\n\n\n\n\n\n\n\n\n\u5927\u7aef\u5e8f\n\u00b6\n\n\n\u5927\u7aef\u5e8f\u662f\u6307\u673a\u5668\u9009\u62e9\u5728\u5185\u5b58\u4e2d\u6309\u7167\u4ece \n\u6700\u9ad8\n \u6709\u6548\u5b57\u8282\u5230 \n\u6700\u4f4e\n \u6709\u6548\u5b57\u8282\u7684\u987a\u5e8f\u5b58\u50a8\u5bf9\u8c61\u3002\n\n\n\u4e0a\u6587\u63d0\u5230\u7684\u53d8\u91cf\u5c31\u8868\u793a\u5982\u4e0b\uff1a\n\n\n\n\n\n\n\n\n....\n\n\n0x100\n\n\n0x101\n\n\n0x102\n\n\n0x103\n\n\n....\n\n\n\n\n\n\n\n\n\n\n....\n\n\n01\n\n\n23\n\n\n45\n\n\n67\n\n\n....",
            "title": "\u5b57\u8282\u987a\u5e8f"
        },
        {
            "location": "/misc/endianness/#_1",
            "text": "\u5c0f\u7aef\u5e8f\u662f\u6307\u673a\u5668\u9009\u62e9\u5728\u5185\u5b58\u4e2d\u6309\u7167\u4ece  \u6700\u4f4e  \u6709\u6548\u5b57\u8282\u5230  \u6700\u9ad8  \u6709\u6548\u5b57\u8282\u7684\u987a\u5e8f\u5b58\u50a8\u5bf9\u8c61\u3002  \u4e0a\u6587\u63d0\u5230\u7684\u53d8\u91cf\u5c31\u8868\u793a\u5982\u4e0b\uff1a     ....  0x100  0x101  0x102  0x103  ....      ....  67  45  23  01  ....",
            "title": "\u5c0f\u7aef\u5e8f"
        },
        {
            "location": "/misc/endianness/#_2",
            "text": "\u5927\u7aef\u5e8f\u662f\u6307\u673a\u5668\u9009\u62e9\u5728\u5185\u5b58\u4e2d\u6309\u7167\u4ece  \u6700\u9ad8  \u6709\u6548\u5b57\u8282\u5230  \u6700\u4f4e  \u6709\u6548\u5b57\u8282\u7684\u987a\u5e8f\u5b58\u50a8\u5bf9\u8c61\u3002  \u4e0a\u6587\u63d0\u5230\u7684\u53d8\u91cf\u5c31\u8868\u793a\u5982\u4e0b\uff1a     ....  0x100  0x101  0x102  0x103  ....      ....  01  23  45  67  ....",
            "title": "\u5927\u7aef\u5e8f"
        },
        {
            "location": "/misc/complexity/",
            "text": "",
            "title": "\u590d\u6742\u5ea6"
        },
        {
            "location": "/misc/magic/",
            "text": "\u5728\u4fe1\u606f\u5b66\u7ade\u8d5b\u53d1\u5c55\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u4ec5\u4ea7\u751f\u4e86\u5f88\u591a\u4f18\u79c0\u7684\u4e2d\u6587\u8d44\u6599\uff0c\u4e5f\u4ea7\u751f\u4e86\u5f88\u591a\u7cbe\u826f\u7684\u82f1\u6587\u8d44\u6599\u3002\u6bd4\u5982\u8bf4\uff0c\u8fd1\u5e74\u6765\uff0c\u5f88\u591a\u65b0\u9c9c\u7684\u9ed1\u79d1\u6280\u5c31\u662f\u4ece\u56fd\u5916\u4ea4\u6d41\u5e73\u53f0\uff08\u5982 Codeforces\uff09\u4e0a\u5f15\u5165\u56fd\u5185 OI \u7ade\u8d5b\u7684\u3002\n\n\n\u7531\u4e8e\u4f17\u6240\u5468\u77e5\u7684\u539f\u56e0\uff0c\u4e0d\u662f\u6240\u6709\u5883\u5916\u7f51\u7ad9\u5728\u5927\u9646\u6240\u6709\u5730\u533a\u90fd\u80fd\u591f\u6b63\u5e38\u8bbf\u95ee\u3002\u5bf9\u4e8e OIer \u800c\u8a00\uff0c\u8fdb\u4e00\u6b65\u5b66\u4e60\u7684\u9700\u6c42\u5f80\u5f80\u56e0\u6b64\u96be\u4ee5\u5f97\u5230\u6ee1\u8db3\u3002\n\n\n\u6ce8\uff1a\u672c\u9879\u76ee\u5728\u7f16\u5199\u8fc7\u7a0b\u4e2d\u53d7\u5230 \n@GoogleHosts\n \u7684\u5927\u529b\u652f\u6301\uff0c\u5728\u6b64\u8868\u793a\u611f\u8c22\u3002\n\u672c\u9875\u4ec5\u7528\u4e8e\u4ecb\u7ecd\uff0c\u7248\u6743\u5f52\u670d\u52a1\u63d0\u4f9b\u8005\u6240\u6709\u3002\n\n\nHosts\n\u00b6\n\n\n@GoogleHosts\n \u81f4\u529b\u4e8e\u7ef4\u62a4 \nhosts\n \u6587\u4ef6\uff0c\u4f18\u5316\u4e2d\u56fd\u5927\u9646\u5bf9\u4f17\u591a\u7f51\u7ad9\u7684\u8bbf\u95ee\u3002\nhosts\n \u6587\u4ef6\u7684\u4f5c\u7528\u662f\u5c06\u57df\u540d\u6307\u5411\u8bbf\u95ee\u901f\u5ea6\u66f4\u4f18\u79c0\u7684\u5bf9\u5e94 \nip\n \u5730\u5740\uff0c\u53ef\u4ee5\u907f\u514d\u4e00\u5b9a\u7a0b\u5ea6\u7684\u5e72\u6270\u3002\n\n\n\u53e6\u5916\uff0c\n@GoogleHosts\n \u4e5f\u642d\u5efa\u4e86 \n\u516c\u76ca\u670d\u52a1\n\uff0c\u5305\u542b \u9632\u6c61\u67d3DNS\u3001Shadowsocks \u670d\u52a1\u548c Telegram \u4e13\u7528\u4ee3\u7406\u7b49\u3002\n\n\nShadowsocks\n\u00b6\n\n\nShadowsocks \u662f\u4e00\u4e2a\u5b89\u5168\u7684 \nsocks5\n \u4ee3\u7406\uff0c\u652f\u6301\u591a\u79cd\u5e73\u53f0\u3002\n\n\nWindows\n\u00b6\n\n\n\u4e0b\u8f7d\u5730\u5740\uff1a\nshadowsocks-win\n |\n\nOutline Windows\n\n\nMac OS X\n\u00b6\n\n\n\u4e0b\u8f7d\u5730\u5740\uff1a\nShadowsocksX-NG\n |\n\nOutline macOS\n\n\nLinux\n\u00b6\n\n\n\u81ea\u52a8\u5b89\u88c5\u811a\u672c\uff1a\nlrinQVQ/script\n\n\n\u4e3a\u4ec0\u4e48\u4e0d\u63a8\u8350\u4f7f\u7528 ssr \uff1f\n\u00b6\n\n\nssr \u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u8fdd\u53cd\u4e86 \nGPL \u534f\u8bae\n\uff0cGPL \u8981\u6c42\u518d\u5206\u53d1\u65f6\u5e94\u5f00\u653e\u6e90\u4ee3\u7801\uff0c\u800c ssr \u7684\u7ef4\u62a4\u8005\u5e76\u6ca1\u6709\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u4f5c\u4e3a\u4e00\u4e2a\u5408\u683c\u7684 OIer\uff0c \n\u9075\u5b88\u5f00\u6e90\u534f\u8bae\n \u662f\u6700\u8d77\u7801\u7684\u8981\u6c42\uff0c\u6240\u4ee5\u8fd9\u91cc\u5e76\u4e0d\u63d0\u5021\u4f7f\u7528 ssr\u3002\n\n\n\u5f15\u7528 clowwindy \u7684\u4e00\u6bb5\u8457\u540d\u7684 \n\u8bc4\u8bba\n \u4f5c\u4e3a\u7ed3\u8bed\u3002\n\n\n\u5173\u4e8e\u4e2d\u56fd\u7684\u4e92\u8054\u7f51\n\u00b6\n\n\n\uff08\u672c\u6bb5\u6587\u5b57\u8f6c\u8f7d\u81ea\u539f netsh.org\uff09\n\n\n\u7f51\u7edc\u5ba1\u67e5\u5728\u5404\u4e2a\u56fd\u5bb6\u90fd\u666e\u904d\u5b58\u5728\u7740\uff0c\u5b83\u5e76\u4e0d\u4ec5\u5b58\u5728\u4e8e\u4e2d\u56fd\u3002\u5728\u5168\u7403\u7684\u5c40\u52bf\u5bf9\u4e2d\u56fd\u90fd\u4e0d\u5229\u7684\u5f53\u4e0b\uff0c\u5f53\u5c40\u4f1a\u8fc7\u6ee4\u6389\u5f71\u54cd\u3001\u5371\u5bb3\u5230\u4e2d\u56fd\u957f\u8fdc\u53d1\u5c55\u7684\u4fe1\u606f\uff0c\u6b64\u65f6\u56fd\u5bb6\u5b89\u5168\u7684\u610f\u4e49\u66f4\u52a0\u91cd\u5927\u3002\n\n\n\u4e92\u8054\u7f51\u4e0a\u5b58\u5728\u7740\u5927\u91cf\u4e0d\u73b0\u5b9e\u7684\u3001\u4e0d\u5ba2\u89c2\u7684\uff0c\u751a\u81f3\u81ea\u76f8\u77db\u76fe\u7684\u62b9\u9ed1\u5f53\u5c40\u653f\u5e9c\u8a00\u8bba\uff0c\u5b83\u4eec\u80cc\u540e\u4e00\u822c\u6709\u897f\u65b9\u653f\u5e9c\u6216\u975e\u653f\u5e9c\u7ec4\u7ec7\u8d44\u91d1\u652f\u6301\u3002\u8fd9\u4e9b\u5a92\u4f53\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u4e00\u4e9b\u6e2f\u5a92\u3001\u5883\u5916\u7f51\u7ad9\u3002\n\n\n\u6211\u4eec\u5e0c\u671b\u60a8\u80fd\u5728\u9047\u5230\u6b64\u7c7b\u8a00\u8bba\u548c\u89c1\u89e3\u65f6\uff0c\u4e0d\u8981\u4e0d\u52a0\u601d\u8003\u5730\u3001\u60c5\u7eea\u4e00\u5ea6\u88ab\u717d\u52a8\u800c\u4e0d\u80fd\u514b\u5236\u5730\u3001\u76f2\u76ee\u5730\u76f8\u4fe1\u8fd9\u4e9b\u7247\u9762\u6216\u8005\u6b6a\u66f2\u4e8b\u5b9e\u7684\u4e1c\u897f\uff0c\u800c\u662f\u8981\u4e8b\u5b9e\u6c42\u662f\u5730\u601d\u8003\uff0c\u8981\u6446\u8131\u60c5\u7eea\u7ed1\u67b6\u7684\u602a\u8bde\u601d\u7ef4\u53bb\u7406\u89e3\u3002\n\n\n\u6211\u4eec\u9700\u8981\u4e86\u89e3\u5230\uff0c\u4e2d\u56fd\u7684\u53d1\u5c55\u603b\u57fa\u8c03\u662f\u201c\u7a33\u4e2d\u6c42\u8fdb\u201d\uff0c\u4e2d\u56fd\u793e\u4f1a\u7684\u6700\u6838\u5fc3\u95ee\u9898\u5c31\u662f\u7a33\u5b9a\u3002\u5931\u53bb\u7a33\u5b9a\u7684\u4e2d\u56fd\u5c06\u4f1a\u662f\u4e00\u76d8\u6563\u6c99\uff0c\u9762\u4e34\u5206\u88c2\u548c\u80a2\u89e3\u7684\u5371\u9669\u3002\u6211\u4eec\u5e0c\u671b\u60a8\u4e86\u89e3\u5f53\u4eca\u4e2d\u56fd\u53d1\u5c55\u7684\u6839\u672c\u4fdd\u8bc1\u662f\u4ec0\u4e48\uff0c\u53d1\u5c55\u7684\u8fc7\u7a0b\u4e2d\u54ea\u90e8\u5206\u662f\u4e3b\u65cb\u5f8b\uff0c\u54ea\u4e9b\u662f\u566a\u97f3\uff1b\u54ea\u4e9b\u662f\u8fdb\u53d6\u7684\uff0c\u54ea\u4e9b\u662f\u4f1a\u5f00\u5386\u53f2\u5012\u8f66\u7684\u3002\u6211\u4eec\u9700\u8981\u7ef4\u65b0\uff0c\u800c\u4e0d\u662f\u9769\u547d\u3002\n\n\n\u6211\u4eec\u5e94\u8be5\u6e05\u9192\u548c\u5168\u9762\u5730\u8ba4\u8bc6\u95ee\u9898\uff0c\u504f\u4fe1\u897f\u65b9\u5a92\u4f53\u7684\u8a00\u8bba\u3001\u7f3a\u4e4f\u5bf9\u56fd\u5bb6\u7684\u4fe1\u4efb\u662f\u4e0d\u53ef\u53d6\u7684\u3002\u60a8\u7684\u6570\u636e\u5b89\u5168\u548c\u9690\u79c1\u5bf9\u60a8\u5c24\u4e3a\u91cd\u8981\u3002\u82e5\u8fd9\u4e9b\u4fe1\u606f\u4e0d\u5e94\u5f53\u88ab\u897f\u65b9\u638c\u63e1\u65f6\uff0c\u5b83\u5bf9\u56fd\u5bb6\u548c\u6c11\u65cf\u7684\u547d\u8fd0\u66f4\u4e3a\u91cd\u8981\u3002\u51fa\u4e8e\u6b64\u539f\u56e0\uff0c\u5f53\u5c40\u53ef\u80fd\u4f1a\u9650\u5236\u60a8\u7684\u884c\u4e3a\uff0c\u6211\u4eec\u4e0d\u4f1a\u4e5f\u65e0\u6cd5\u5e72\u9884\u5f53\u5c40\u7684\u4efb\u4f55\u653f\u7b56\u548c\u51b3\u5b9a\u3002\n\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u5728\u4f7f\u7528\u6b64\u670d\u52a1\u65f6\uff0c\u4e0d\u8981\u76f2\u76ee\u5730\u653b\u51fb\u5f53\u5c40\u7684\u505a\u6cd5\u3002\n\n\n\n\n\n\nI believe you guys will make great stuff with Network Extensions.",
            "title": "\u79d1\u5b66\u4e0a\u7f51"
        },
        {
            "location": "/misc/magic/#hosts",
            "text": "@GoogleHosts  \u81f4\u529b\u4e8e\u7ef4\u62a4  hosts  \u6587\u4ef6\uff0c\u4f18\u5316\u4e2d\u56fd\u5927\u9646\u5bf9\u4f17\u591a\u7f51\u7ad9\u7684\u8bbf\u95ee\u3002 hosts  \u6587\u4ef6\u7684\u4f5c\u7528\u662f\u5c06\u57df\u540d\u6307\u5411\u8bbf\u95ee\u901f\u5ea6\u66f4\u4f18\u79c0\u7684\u5bf9\u5e94  ip  \u5730\u5740\uff0c\u53ef\u4ee5\u907f\u514d\u4e00\u5b9a\u7a0b\u5ea6\u7684\u5e72\u6270\u3002  \u53e6\u5916\uff0c @GoogleHosts  \u4e5f\u642d\u5efa\u4e86  \u516c\u76ca\u670d\u52a1 \uff0c\u5305\u542b \u9632\u6c61\u67d3DNS\u3001Shadowsocks \u670d\u52a1\u548c Telegram \u4e13\u7528\u4ee3\u7406\u7b49\u3002",
            "title": "Hosts"
        },
        {
            "location": "/misc/magic/#shadowsocks",
            "text": "Shadowsocks \u662f\u4e00\u4e2a\u5b89\u5168\u7684  socks5  \u4ee3\u7406\uff0c\u652f\u6301\u591a\u79cd\u5e73\u53f0\u3002",
            "title": "Shadowsocks"
        },
        {
            "location": "/misc/magic/#windows",
            "text": "\u4e0b\u8f7d\u5730\u5740\uff1a shadowsocks-win  | Outline Windows",
            "title": "Windows"
        },
        {
            "location": "/misc/magic/#mac-os-x",
            "text": "\u4e0b\u8f7d\u5730\u5740\uff1a ShadowsocksX-NG  | Outline macOS",
            "title": "Mac OS X"
        },
        {
            "location": "/misc/magic/#linux",
            "text": "\u81ea\u52a8\u5b89\u88c5\u811a\u672c\uff1a lrinQVQ/script",
            "title": "Linux"
        },
        {
            "location": "/misc/magic/#ssr",
            "text": "ssr \u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u8fdd\u53cd\u4e86  GPL \u534f\u8bae \uff0cGPL \u8981\u6c42\u518d\u5206\u53d1\u65f6\u5e94\u5f00\u653e\u6e90\u4ee3\u7801\uff0c\u800c ssr \u7684\u7ef4\u62a4\u8005\u5e76\u6ca1\u6709\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u4f5c\u4e3a\u4e00\u4e2a\u5408\u683c\u7684 OIer\uff0c  \u9075\u5b88\u5f00\u6e90\u534f\u8bae  \u662f\u6700\u8d77\u7801\u7684\u8981\u6c42\uff0c\u6240\u4ee5\u8fd9\u91cc\u5e76\u4e0d\u63d0\u5021\u4f7f\u7528 ssr\u3002  \u5f15\u7528 clowwindy \u7684\u4e00\u6bb5\u8457\u540d\u7684  \u8bc4\u8bba  \u4f5c\u4e3a\u7ed3\u8bed\u3002",
            "title": "\u4e3a\u4ec0\u4e48\u4e0d\u63a8\u8350\u4f7f\u7528 ssr \uff1f"
        },
        {
            "location": "/misc/magic/#_1",
            "text": "\uff08\u672c\u6bb5\u6587\u5b57\u8f6c\u8f7d\u81ea\u539f netsh.org\uff09  \u7f51\u7edc\u5ba1\u67e5\u5728\u5404\u4e2a\u56fd\u5bb6\u90fd\u666e\u904d\u5b58\u5728\u7740\uff0c\u5b83\u5e76\u4e0d\u4ec5\u5b58\u5728\u4e8e\u4e2d\u56fd\u3002\u5728\u5168\u7403\u7684\u5c40\u52bf\u5bf9\u4e2d\u56fd\u90fd\u4e0d\u5229\u7684\u5f53\u4e0b\uff0c\u5f53\u5c40\u4f1a\u8fc7\u6ee4\u6389\u5f71\u54cd\u3001\u5371\u5bb3\u5230\u4e2d\u56fd\u957f\u8fdc\u53d1\u5c55\u7684\u4fe1\u606f\uff0c\u6b64\u65f6\u56fd\u5bb6\u5b89\u5168\u7684\u610f\u4e49\u66f4\u52a0\u91cd\u5927\u3002  \u4e92\u8054\u7f51\u4e0a\u5b58\u5728\u7740\u5927\u91cf\u4e0d\u73b0\u5b9e\u7684\u3001\u4e0d\u5ba2\u89c2\u7684\uff0c\u751a\u81f3\u81ea\u76f8\u77db\u76fe\u7684\u62b9\u9ed1\u5f53\u5c40\u653f\u5e9c\u8a00\u8bba\uff0c\u5b83\u4eec\u80cc\u540e\u4e00\u822c\u6709\u897f\u65b9\u653f\u5e9c\u6216\u975e\u653f\u5e9c\u7ec4\u7ec7\u8d44\u91d1\u652f\u6301\u3002\u8fd9\u4e9b\u5a92\u4f53\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u4e00\u4e9b\u6e2f\u5a92\u3001\u5883\u5916\u7f51\u7ad9\u3002  \u6211\u4eec\u5e0c\u671b\u60a8\u80fd\u5728\u9047\u5230\u6b64\u7c7b\u8a00\u8bba\u548c\u89c1\u89e3\u65f6\uff0c\u4e0d\u8981\u4e0d\u52a0\u601d\u8003\u5730\u3001\u60c5\u7eea\u4e00\u5ea6\u88ab\u717d\u52a8\u800c\u4e0d\u80fd\u514b\u5236\u5730\u3001\u76f2\u76ee\u5730\u76f8\u4fe1\u8fd9\u4e9b\u7247\u9762\u6216\u8005\u6b6a\u66f2\u4e8b\u5b9e\u7684\u4e1c\u897f\uff0c\u800c\u662f\u8981\u4e8b\u5b9e\u6c42\u662f\u5730\u601d\u8003\uff0c\u8981\u6446\u8131\u60c5\u7eea\u7ed1\u67b6\u7684\u602a\u8bde\u601d\u7ef4\u53bb\u7406\u89e3\u3002  \u6211\u4eec\u9700\u8981\u4e86\u89e3\u5230\uff0c\u4e2d\u56fd\u7684\u53d1\u5c55\u603b\u57fa\u8c03\u662f\u201c\u7a33\u4e2d\u6c42\u8fdb\u201d\uff0c\u4e2d\u56fd\u793e\u4f1a\u7684\u6700\u6838\u5fc3\u95ee\u9898\u5c31\u662f\u7a33\u5b9a\u3002\u5931\u53bb\u7a33\u5b9a\u7684\u4e2d\u56fd\u5c06\u4f1a\u662f\u4e00\u76d8\u6563\u6c99\uff0c\u9762\u4e34\u5206\u88c2\u548c\u80a2\u89e3\u7684\u5371\u9669\u3002\u6211\u4eec\u5e0c\u671b\u60a8\u4e86\u89e3\u5f53\u4eca\u4e2d\u56fd\u53d1\u5c55\u7684\u6839\u672c\u4fdd\u8bc1\u662f\u4ec0\u4e48\uff0c\u53d1\u5c55\u7684\u8fc7\u7a0b\u4e2d\u54ea\u90e8\u5206\u662f\u4e3b\u65cb\u5f8b\uff0c\u54ea\u4e9b\u662f\u566a\u97f3\uff1b\u54ea\u4e9b\u662f\u8fdb\u53d6\u7684\uff0c\u54ea\u4e9b\u662f\u4f1a\u5f00\u5386\u53f2\u5012\u8f66\u7684\u3002\u6211\u4eec\u9700\u8981\u7ef4\u65b0\uff0c\u800c\u4e0d\u662f\u9769\u547d\u3002  \u6211\u4eec\u5e94\u8be5\u6e05\u9192\u548c\u5168\u9762\u5730\u8ba4\u8bc6\u95ee\u9898\uff0c\u504f\u4fe1\u897f\u65b9\u5a92\u4f53\u7684\u8a00\u8bba\u3001\u7f3a\u4e4f\u5bf9\u56fd\u5bb6\u7684\u4fe1\u4efb\u662f\u4e0d\u53ef\u53d6\u7684\u3002\u60a8\u7684\u6570\u636e\u5b89\u5168\u548c\u9690\u79c1\u5bf9\u60a8\u5c24\u4e3a\u91cd\u8981\u3002\u82e5\u8fd9\u4e9b\u4fe1\u606f\u4e0d\u5e94\u5f53\u88ab\u897f\u65b9\u638c\u63e1\u65f6\uff0c\u5b83\u5bf9\u56fd\u5bb6\u548c\u6c11\u65cf\u7684\u547d\u8fd0\u66f4\u4e3a\u91cd\u8981\u3002\u51fa\u4e8e\u6b64\u539f\u56e0\uff0c\u5f53\u5c40\u53ef\u80fd\u4f1a\u9650\u5236\u60a8\u7684\u884c\u4e3a\uff0c\u6211\u4eec\u4e0d\u4f1a\u4e5f\u65e0\u6cd5\u5e72\u9884\u5f53\u5c40\u7684\u4efb\u4f55\u653f\u7b56\u548c\u51b3\u5b9a\u3002  \u6240\u4ee5\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u5728\u4f7f\u7528\u6b64\u670d\u52a1\u65f6\uff0c\u4e0d\u8981\u76f2\u76ee\u5730\u653b\u51fb\u5f53\u5c40\u7684\u505a\u6cd5\u3002    I believe you guys will make great stuff with Network Extensions.",
            "title": "\u5173\u4e8e\u4e2d\u56fd\u7684\u4e92\u8054\u7f51"
        }
    ]
}